cveId	ghsaId	packageName	vulnIntroduced	latestVulnVersion	fixedVersion	fixCommitRepo	fixCommitHash	jarBefore	jarAfter	srcBefore	srcAfter	classFileBefore	classFileAfter	changedClass	changedMethods	packageIdBefore	packageIdAfter	diffParsedJson	nloc
CVE-2013-7285	GHSA-f554-x222-wgf7	com.thoughtworks.xstream:xstream	0	1.4.5	1.4.6	https://github.com/x-stream/xstream	6344867dce6767af7d0fe34fb393271a6456672d	proc/changes/CVE-2013-7285/6344867dce6767af7d0fe34fb393271a6456672d/before/jar/xstream-1.4.5.jar	proc/changes/CVE-2013-7285/6344867dce6767af7d0fe34fb393271a6456672d/after/jar/xstream-1.4.6.jar	proc/changes/CVE-2013-7285/6344867dce6767af7d0fe34fb393271a6456672d/before/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2013-7285/6344867dce6767af7d0fe34fb393271a6456672d/after/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2013-7285/6344867dce6767af7d0fe34fb393271a6456672d/before/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	proc/changes/CVE-2013-7285/6344867dce6767af7d0fe34fb393271a6456672d/after/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	XStream	[XStream::allowTypes, XStream::denyPermission, XStream::buildMapper, XStream::denyTypes, XStream::allowTypesByWildcard, XStream::allowTypesByRegExp, XStream::allowTypesByRegExp, XStream::denyTypesByRegExp, XStream::setupMappers, XStream::denyTypesByRegExp, XStream::XStream, XStream::setupSecurity, XStream::denyTypesByWildcard, XStream::addPermission]	com.thoughtworks.xstream	com.thoughtworks.xstream	"{""added"": [[3, "" * Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014 XStream Committers.""], [140, ""import com.thoughtworks.xstream.mapper.SecurityMapper;""], [143, ""import com.thoughtworks.xstream.security.AnyTypePermission;""], [144, ""import com.thoughtworks.xstream.security.ExplicitTypePermission;""], [145, ""import com.thoughtworks.xstream.security.NoPermission;""], [146, ""import com.thoughtworks.xstream.security.NoTypePermission;""], [147, ""import com.thoughtworks.xstream.security.RegExpTypePermission;""], [148, ""import com.thoughtworks.xstream.security.TypePermission;""], [149, ""import com.thoughtworks.xstream.security.WildcardTypePermission;""], [285, "" * auto-detected on-the-fly.</em>""], [321, ""    private SecurityMapper securityMapper;""], [570, ""        setupSecurity();""], [601, ""        mapper = new SecurityMapper(mapper);""], [655, ""        securityMapper = (SecurityMapper)this.mapper""], [656, ""            .lookupMapperOfType(SecurityMapper.class);""], [660, """"], [661, ""    protected void setupSecurity() {""], [662, ""        if (securityMapper == null) {""], [663, ""            return;""], [664, ""        }""], [665, """"], [666, ""        addPermission(AnyTypePermission.ANY);""], [667, ""    }""], [1998, """"], [1999, ""    /**""], [2000, ""     * Add a new security permission.""], [2001, ""     *""], [2002, ""     * <p>""], [2003, ""     * Permissions are evaluated in the added sequence. An instance of {@link NoTypePermission} or""], [2004, ""     * {@link AnyTypePermission} will implicitly wipe any existing permission.""], [2005, ""     * </p>""], [2006, ""     *""], [2007, ""     * @param permission the permission to add""], [2008, ""     * @since upcoming""], [2009, ""     */""], [2010, ""    public void addPermission(TypePermission permission) {""], [2011, ""        if (securityMapper != null) {""], [2012, ""            securityMapper.addPermission(permission);""], [2013, ""        }""], [2014, ""    }""], [2015, """"], [2016, ""    /**""], [2017, ""     * Add security permission for explicit types by name.""], [2018, ""     *""], [2019, ""     * @param names the type names to allow""], [2020, ""     * @since upcoming""], [2021, ""     */""], [2022, ""    public void allowTypes(String... names) {""], [2023, ""        addPermission(new ExplicitTypePermission(names));""], [2024, ""    }""], [2025, """"], [2026, ""    /**""], [2027, ""     * Add security permission for types matching one of the specified regular expressions.""], [2028, ""     *""], [2029, ""     * @param regexps the regular expressions to allow type names""], [2030, ""     * @since upcoming""], [2031, ""     */""], [2032, ""    public void allowTypesByRegExp(String... regexps) {""], [2033, ""        addPermission(new RegExpTypePermission(regexps));""], [2034, ""    }""], [2035, """"], [2036, ""    /**""], [2037, ""     * Add security permission for types matching one of the specified regular expressions.""], [2038, ""     *""], [2039, ""     * @param regexps the regular expressions to allow type names""], [2040, ""     * @since upcoming""], [2041, ""     */""], [2042, ""    public void allowTypesByRegExp(Pattern... regexps) {""], [2043, ""        addPermission(new RegExpTypePermission(regexps));""], [2044, ""    }""], [2045, """"], [2046, ""    /**""], [2047, ""     * Add security permission for types matching one of the specified wildcard patterns.""], [2048, ""     * <p>""], [2049, ""     * Supported are patterns with path expressions using dot as separator:""], [2050, ""     * </p>""], [2051, ""     * <ul>""], [2052, ""     * <li>?: one non-control character except separator, e.g. for 'java.net.Inet?Address'</li>""], [2053, ""     * <li>*: arbitrary number of non-control characters except separator, e.g. for types in a package like 'java.lang.*'</li>""], [2054, ""     * <li>**: arbitrary number of non-control characters including separator, e.g. for types in a package and subpackages like 'java.lang.**'</li>""], [2055, ""     * </ul>""], [2056, ""     *""], [2057, ""     * @param patterns the patterns to allow type names""], [2058, ""     * @since upcoming""], [2059, ""     */""], [2060, ""    public void allowTypesByWildcard(String... patterns) {""], [2061, ""        addPermission(new WildcardTypePermission(patterns));""], [2062, ""    }""], [2063, """"], [2064, ""    /**""], [2065, ""     * Add security permission denying another one.""], [2066, ""     *""], [2067, ""     * @param permission the permission to deny""], [2068, ""     * @since upcoming""], [2069, ""     */""], [2070, ""    public void denyPermission(TypePermission permission) {""], [2071, ""        addPermission(new NoPermission(permission));""], [2072, ""    }""], [2073, """"], [2074, ""    /**""], [2075, ""     * Add security permission forbidding explicit types by name.""], [2076, ""     *""], [2077, ""     * @param names the type names to forbid""], [2078, ""     * @since upcoming""], [2079, ""     */""], [2080, ""    public void denyTypes(String... names) {""], [2081, ""        denyPermission(new ExplicitTypePermission(names));""], [2082, ""    }""], [2083, """"], [2084, ""    /**""], [2085, ""     * Add security permission forbidding types matching one of the specified regular expressions.""], [2086, ""     *""], [2087, ""     * @param regexps the regular expressions to forbid type names""], [2088, ""     * @since upcoming""], [2089, ""     */""], [2090, ""    public void denyTypesByRegExp(String... regexps) {""], [2091, ""        denyPermission(new RegExpTypePermission(regexps));""], [2092, ""    }""], [2093, """"], [2094, ""    /**""], [2095, ""     * Add security permission forbidding types matching one of the specified regular expressions.""], [2096, ""     *""], [2097, ""     * @param regexps the regular expressions to forbid type names""], [2098, ""     * @since upcoming""], [2099, ""     */""], [2100, ""    public void denyTypesByRegExp(Pattern... regexps) {""], [2101, ""        denyPermission(new RegExpTypePermission(regexps));""], [2102, ""    }""], [2103, """"], [2104, ""    /**""], [2105, ""     * Add security permission forbidding types matching one of the specified wildcard patterns.""], [2106, ""     * <p>""], [2107, ""     * Supported are patterns with path expressions using dot as separator:""], [2108, ""     * </p>""], [2109, ""     * <ul>""], [2110, ""     * <li>?: one non-control character except separator, e.g. for 'java.net.Inet?Address'</li>""], [2111, ""     * <li>*: arbitrary number of non-control characters except separator, e.g. for types in a package like 'java.lang.*'</li>""], [2112, ""     * <li>**: arbitrary number of non-control characters including separator, e.g. for types in a package and subpackages like 'java.lang.**'</li>""], [2113, ""     * </ul>""], [2114, ""     *""], [2115, ""     * @param patterns the patterns to forbid names""], [2116, ""     * @since upcoming""], [2117, ""     */""], [2118, ""    public void denyTypesByWildcard(String... patterns) {""], [2119, ""        denyPermission(new WildcardTypePermission(patterns));""], [2120, ""    }""]], ""deleted"": [[3, "" * Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013 XStream Committers.""], [277, "" * auto-detected on -the-fly.</em>""]]}"	1032
CVE-2019-17513	GHSA-mvqp-q37c-wf9j	io.ratpack:ratpack-core	0	1.7.4	1.7.5	https://github.com/ratpack/ratpack	efb910d38a96494256f36675ef0e5061097dd77d	proc/changes/CVE-2019-17513/efb910d38a96494256f36675ef0e5061097dd77d/before/jar/ratpack-core-1.7.4.jar	proc/changes/CVE-2019-17513/efb910d38a96494256f36675ef0e5061097dd77d/after/jar/ratpack-core-1.7.5.jar	proc/changes/CVE-2019-17513/efb910d38a96494256f36675ef0e5061097dd77d/before/java/ratpack-core/src/main/java/ratpack/server/internal/NettyHandlerAdapter.java	proc/changes/CVE-2019-17513/efb910d38a96494256f36675ef0e5061097dd77d/after/java/ratpack-core/src/main/java/ratpack/server/internal/NettyHandlerAdapter.java	proc/changes/CVE-2019-17513/efb910d38a96494256f36675ef0e5061097dd77d/before/class/ratpack-core/src/main/java/ratpack/server/internal/NettyHandlerAdapter.class	proc/changes/CVE-2019-17513/efb910d38a96494256f36675ef0e5061097dd77d/after/class/ratpack-core/src/main/java/ratpack/server/internal/NettyHandlerAdapter.class	NettyHandlerAdapter	[NettyHandlerAdapter::newRequest]	ratpack.server.internal	ratpack.server.internal	"{""added"": [[159, ""    HttpHeaders nettyHeaders = new DefaultHttpHeaders();""]], ""deleted"": [[159, ""    HttpHeaders nettyHeaders = new DefaultHttpHeaders(false);""]]}"	219
CVE-2019-16771	GHSA-24r8-fm9r-cpj2	com.linecorp.armeria:armeria	0	0.96.0	0.97.0	https://github.com/line/armeria	b597f7a865a527a84ee3d6937075cfbb4470ed20	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/jar/armeria-0.96.0.jar	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/jar/armeria-0.97.0.jar	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/java/core/src/main/java/com/linecorp/armeria/common/HttpHeaderNames.java	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/java/core/src/main/java/com/linecorp/armeria/common/HttpHeaderNames.java	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/class/core/src/main/java/com/linecorp/armeria/common/HttpHeaderNames.class	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/class/core/src/main/java/com/linecorp/armeria/common/HttpHeaderNames.class	HttpHeaderNames	[HttpHeaderNames::create, HttpHeaderNames::malformedHeaderNameMessage, HttpHeaderNames::of, HttpHeaderNames::validate, HttpHeaderNames::of]	com.linecorp.armeria.common	com.linecorp.armeria.common	"{""added"": [[35, ""import java.util.BitSet;""], [40, ""import com.google.common.math.IntMath;""], [70, ""    private static final int PROHIBITED_NAME_CHAR_MASK = ~63;""], [71, ""    private static final BitSet PROHIBITED_NAME_CHARS = new BitSet(~PROHIBITED_NAME_CHAR_MASK + 1);""], [72, ""    private static final String[] PROHIBITED_NAME_CHAR_NAMES = new String[~PROHIBITED_NAME_CHAR_MASK + 1];""], [73, """"], [74, ""    static {""], [75, ""        PROHIBITED_NAME_CHARS.set(0);""], [76, ""        PROHIBITED_NAME_CHARS.set('\\t');""], [77, ""        PROHIBITED_NAME_CHARS.set('\\n');""], [78, ""        PROHIBITED_NAME_CHARS.set(0xB);""], [79, ""        PROHIBITED_NAME_CHARS.set('\\f');""], [80, ""        PROHIBITED_NAME_CHARS.set('\\r');""], [81, ""        PROHIBITED_NAME_CHARS.set(' ');""], [82, ""        PROHIBITED_NAME_CHARS.set(',');""], [83, ""        PROHIBITED_NAME_CHARS.set(':');""], [84, ""        PROHIBITED_NAME_CHARS.set(';');""], [85, ""        PROHIBITED_NAME_CHARS.set('=');""], [86, ""        PROHIBITED_NAME_CHAR_NAMES[0] = \""<NUL>\"";""], [87, ""        PROHIBITED_NAME_CHAR_NAMES['\\t'] = \""<TAB>\"";""], [88, ""        PROHIBITED_NAME_CHAR_NAMES['\\n'] = \""<LF>\"";""], [89, ""        PROHIBITED_NAME_CHAR_NAMES[0xB] = \""<VT>\"";""], [90, ""        PROHIBITED_NAME_CHAR_NAMES['\\f'] = \""<FF>\"";""], [91, ""        PROHIBITED_NAME_CHAR_NAMES['\\r'] = \""<CR>\"";""], [92, ""        PROHIBITED_NAME_CHAR_NAMES[' '] = \""<SP>\"";""], [93, ""        PROHIBITED_NAME_CHAR_NAMES[','] = \"",\"";""], [94, ""        PROHIBITED_NAME_CHAR_NAMES[':'] = \"":\"";""], [95, ""        PROHIBITED_NAME_CHAR_NAMES[';'] = \"";\"";""], [96, ""        PROHIBITED_NAME_CHAR_NAMES['='] = \""=\"";""], [97, ""    }""], [98, """"], [598, ""    private static AsciiString create(String name) {""], [599, ""        return AsciiString.cached(Ascii.toLowerCase(name));""], [600, ""    }""], [601, """"], [606, ""     *""], [607, ""     * @throws IllegalArgumentException if the specified {@code name} is not a valid header name.""], [616, ""        if (cached != null) {""], [617, ""            return cached;""], [618, ""        }""], [619, """"], [620, ""        return validate(AsciiString.cached(lowerCased));""], [627, ""     *""], [628, ""     * @throws IllegalArgumentException if the specified {@code name} is not a valid header name.""], [633, ""        if (cached != null) {""], [634, ""            return cached;""], [635, ""        }""], [636, """"], [637, ""        return validate(lowerCased);""], [640, ""    private static AsciiString validate(AsciiString name) {""], [641, ""        if (name.isEmpty()) {""], [642, ""            throw new IllegalArgumentException(\""malformed header name: <EMPTY>\"");""], [643, ""        }""], [644, """"], [645, ""        final int lastIndex;""], [646, ""        try {""], [647, ""            lastIndex = name.forEachByte(value -> {""], [648, ""                if ((value & PROHIBITED_NAME_CHAR_MASK) != 0) { // value >= 64""], [649, ""                    return true;""], [650, ""                }""], [651, """"], [652, ""                // value < 64""], [653, ""                return !PROHIBITED_NAME_CHARS.get(value);""], [654, ""            });""], [655, ""        } catch (Exception e) {""], [656, ""            throw new Error(e);""], [657, ""        }""], [658, """"], [659, ""        if (lastIndex >= 0) {""], [660, ""            throw new IllegalArgumentException(malformedHeaderNameMessage(name));""], [661, ""        }""], [662, """"], [663, ""        return name;""], [664, ""    }""], [665, """"], [666, ""    private static String malformedHeaderNameMessage(AsciiString name) {""], [667, ""        final StringBuilder buf = new StringBuilder(IntMath.saturatedAdd(name.length(), 64));""], [668, ""        buf.append(\""malformed header name: \"");""], [669, """"], [670, ""        final int nameLength = name.length();""], [671, ""        for (int i = 0; i < nameLength; i++) {""], [672, ""            final char ch = name.charAt(i);""], [673, ""            if (PROHIBITED_NAME_CHARS.get(ch)) {""], [674, ""                buf.append(PROHIBITED_NAME_CHAR_NAMES[ch]);""], [675, ""            } else {""], [676, ""                buf.append(ch);""], [677, ""            }""], [678, ""        }""], [679, """"], [680, ""        return buf.toString();""]], ""deleted"": [[579, ""        return cached != null ? cached : AsciiString.cached(lowerCased);""], [590, ""        return cached != null ? cached : lowerCased;""], [593, ""    private static AsciiString create(String name) {""], [594, ""        return AsciiString.cached(Ascii.toLowerCase(name));""]]}"	226
CVE-2019-16771	GHSA-24r8-fm9r-cpj2	com.linecorp.armeria:armeria	0	0.96.0	0.97.0	https://github.com/line/armeria	b597f7a865a527a84ee3d6937075cfbb4470ed20	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/jar/armeria-0.96.0.jar	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/jar/armeria-0.97.0.jar	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/java/core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.java	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/java/core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.java	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/class/core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.class	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/class/core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.class	HttpHeadersBase	[HttpHeadersBase::set, HttpHeadersBase::setObject, HttpHeadersBase::add, HttpHeadersBase::add, HttpHeadersBase::addObject, HttpHeadersBase::normalizeName, HttpHeadersBase::add0, HttpHeadersBase::add, HttpHeadersBase::addObject, HttpHeadersBase::set, HttpHeadersBase::setObject, HttpHeadersBase::validateValue, HttpHeadersBase::malformedHeaderValueMessage, HttpHeadersBase::set]	com.linecorp.armeria.common	com.linecorp.armeria.common	"{""added"": [[43, ""import java.util.BitSet;""], [61, ""import com.google.common.math.IntMath;""], [71, ""    private static final int PROHIBITED_VALUE_CHAR_MASK = ~15;""], [72, ""    private static final BitSet PROHIBITED_VALUE_CHARS = new BitSet(~PROHIBITED_VALUE_CHAR_MASK + 1);""], [73, ""    private static final String[] PROHIBITED_VALUE_CHAR_NAMES = new String[~PROHIBITED_VALUE_CHAR_MASK + 1];""], [74, """"], [75, ""    static {""], [76, ""        PROHIBITED_VALUE_CHARS.set(0);""], [77, ""        PROHIBITED_VALUE_CHARS.set('\\n');""], [78, ""        PROHIBITED_VALUE_CHARS.set(0xB);""], [79, ""        PROHIBITED_VALUE_CHARS.set('\\f');""], [80, ""        PROHIBITED_VALUE_CHARS.set('\\r');""], [81, ""        PROHIBITED_VALUE_CHAR_NAMES[0] = \""<NUL>\"";""], [82, ""        PROHIBITED_VALUE_CHAR_NAMES['\\n'] = \""<LF>\"";""], [83, ""        PROHIBITED_VALUE_CHAR_NAMES[0xB] = \""<VT>\"";""], [84, ""        PROHIBITED_VALUE_CHAR_NAMES['\\f'] = \""<FF>\"";""], [85, ""        PROHIBITED_VALUE_CHAR_NAMES['\\r'] = \""<CR>\"";""], [86, ""    }""], [87, """"], [566, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [574, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [585, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [611, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [620, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [659, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [668, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [682, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [760, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [774, ""        final AsciiString normalizedName = HttpHeaderNames.of(name);""], [845, ""        validateValue(value);""], [851, ""    private static void validateValue(String value) {""], [852, ""        final int valueLength = value.length();""], [853, ""        for (int i = 0; i < valueLength; i++) {""], [854, ""            final char ch = value.charAt(i);""], [855, ""            if ((ch & PROHIBITED_VALUE_CHAR_MASK) != 0) { // ch >= 16""], [856, ""                continue;""], [857, ""            }""], [858, """"], [859, ""            // ch < 16""], [860, ""            if (PROHIBITED_VALUE_CHARS.get(ch)) {""], [861, ""                throw new IllegalArgumentException(malformedHeaderValueMessage(value));""], [862, ""            }""], [863, ""        }""], [864, ""    }""], [865, """"], [866, ""    private static String malformedHeaderValueMessage(String value) {""], [867, ""        final StringBuilder buf = new StringBuilder(IntMath.saturatedAdd(value.length(), 64));""], [868, ""        buf.append(\""malformed header value: \"");""], [869, """"], [870, ""        final int valueLength = value.length();""], [871, ""        for (int i = 0; i < valueLength; i++) {""], [872, ""            final char ch = value.charAt(i);""], [873, ""            if (PROHIBITED_VALUE_CHARS.get(ch)) {""], [874, ""                buf.append(PROHIBITED_VALUE_CHAR_NAMES[ch]);""], [875, ""            } else {""], [876, ""                buf.append(ch);""], [877, ""            }""], [878, ""        }""], [879, """"], [880, ""        return buf.toString();""], [881, ""    }""], [882, """"]], ""deleted"": [[32, ""import static com.google.common.base.Preconditions.checkArgument;""], [548, ""        final AsciiString normalizedName = normalizeName(name);""], [556, ""        final AsciiString normalizedName = normalizeName(name);""], [567, ""        final AsciiString normalizedName = normalizeName(name);""], [593, ""        final AsciiString normalizedName = normalizeName(name);""], [602, ""        final AsciiString normalizedName = normalizeName(name);""], [641, ""        final AsciiString normalizedName = normalizeName(name);""], [650, ""        final AsciiString normalizedName = normalizeName(name);""], [664, ""        final AsciiString normalizedName = normalizeName(name);""], [742, ""        final AsciiString normalizedName = normalizeName(name);""], [756, ""        final AsciiString normalizedName = normalizeName(name);""], [816, ""    private static AsciiString normalizeName(CharSequence name) {""], [817, ""        checkArgument(requireNonNull(name, \""name\"").length() > 0, \""name is empty.\"");""], [818, ""        return HttpHeaderNames.of(name);""], [819, ""    }""], [820, """"]]}"	977
CVE-2019-16771	GHSA-24r8-fm9r-cpj2	com.linecorp.armeria:armeria	0	0.96.0	0.97.0	https://github.com/line/armeria	b597f7a865a527a84ee3d6937075cfbb4470ed20	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/jar/armeria-0.96.0.jar	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/jar/armeria-0.97.0.jar	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/java/core/src/main/java/com/linecorp/armeria/internal/ArmeriaHttpUtil.java	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/java/core/src/main/java/com/linecorp/armeria/internal/ArmeriaHttpUtil.java	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/before/class/core/src/main/java/com/linecorp/armeria/internal/ArmeriaHttpUtil.class	proc/changes/CVE-2019-16771/b597f7a865a527a84ee3d6937075cfbb4470ed20/after/class/core/src/main/java/com/linecorp/armeria/internal/ArmeriaHttpUtil.class	ArmeriaHttpUtil	[ArmeriaHttpUtil::toLowercaseMap]	com.linecorp.armeria.internal	com.linecorp.armeria.internal	"{""added"": [[676, ""            final AsciiString lowerCased = AsciiString.of(valuesIter.next()).toLowerCase();""]], ""deleted"": [[676, ""            final AsciiString lowerCased = HttpHeaderNames.of(valuesIter.next()).toLowerCase();""]]}"	638
CVE-2019-10173	GHSA-hf23-9pf7-388p	com.thoughtworks.xstream:xstream	0	1.4.10-java7	1.4.11	https://github.com/x-stream/xstream	f38a1da3ae9491930c2067c12cd2506738b21dab	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/before/jar/xstream-1.4.10-java7.jar	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/after/jar/xstream-1.4.11.jar	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/before/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/after/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/before/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/after/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	XStream	[XStream::unmarshal, XStream::setupDefaultSecurity, XStream::readResolve, XStream::setupSecurity, XStream::addPermission]	com.thoughtworks.xstream	com.thoughtworks.xstream	"{""added"": [[341, ""    private transient boolean securityInitialized;""], [342, ""    private transient boolean securityWarningGiven;""], [700, ""        securityInitialized = false;""], [715, ""        if (!xstream.securityInitialized) {""], [1483, ""            if (!securityInitialized && !securityWarningGiven) {""], [1484, ""                securityWarningGiven = true;""], [2363, ""            if (permission == AnyTypePermission.ANY)""], [2364, ""                securityInitialized = false;""], [2365, ""            else if (permission == NoTypePermission.NONE) {""], [2366, ""                securityInitialized = true;""], [2367, ""            }""], [2368, ""            securityInitialized = true;""], [2519, ""    private Object readResolve() {""], [2520, ""        securityWarningGiven = true;""], [2521, ""        return this;""], [2522, ""    }""], [2523, """"], [2552, ""                || (!securityInitialized""]], ""deleted"": [[341, ""    private transient boolean insecureWarning;""], [699, ""        insecureWarning = true;""], [714, ""        if (xstream.insecureWarning) {""], [1482, ""            if (insecureWarning) {""], [1483, ""                insecureWarning = false;""], [2362, ""            insecureWarning &= permission != NoTypePermission.NONE;""], [2541, ""                || (insecureWarning""]]}"	1357
CVE-2019-10173	GHSA-hf23-9pf7-388p	com.thoughtworks.xstream:xstream	0	1.4.10-java7	1.4.11	https://github.com/x-stream/xstream	f38a1da3ae9491930c2067c12cd2506738b21dab	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/before/jar/xstream-1.4.10-java7.jar	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/after/jar/xstream-1.4.11.jar	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/before/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/after/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/before/class/xstream/src/java/com/thoughtworks/xstream/XStream$InternalBlackList.class	proc/changes/CVE-2019-10173/f38a1da3ae9491930c2067c12cd2506738b21dab/after/class/xstream/src/java/com/thoughtworks/xstream/XStream$InternalBlackList.class	XStream$InternalBlackList	[XStream::InternalBlackList::canConvert]	com.thoughtworks.xstream	com.thoughtworks.xstream	"{""added"": [[341, ""    private transient boolean securityInitialized;""], [342, ""    private transient boolean securityWarningGiven;""], [700, ""        securityInitialized = false;""], [715, ""        if (!xstream.securityInitialized) {""], [1483, ""            if (!securityInitialized && !securityWarningGiven) {""], [1484, ""                securityWarningGiven = true;""], [2363, ""            if (permission == AnyTypePermission.ANY)""], [2364, ""                securityInitialized = false;""], [2365, ""            else if (permission == NoTypePermission.NONE) {""], [2366, ""                securityInitialized = true;""], [2367, ""            }""], [2368, ""            securityInitialized = true;""], [2519, ""    private Object readResolve() {""], [2520, ""        securityWarningGiven = true;""], [2521, ""        return this;""], [2522, ""    }""], [2523, """"], [2552, ""                || (!securityInitialized""]], ""deleted"": [[341, ""    private transient boolean insecureWarning;""], [699, ""        insecureWarning = true;""], [714, ""        if (xstream.insecureWarning) {""], [1482, ""            if (insecureWarning) {""], [1483, ""                insecureWarning = false;""], [2362, ""            insecureWarning &= permission != NoTypePermission.NONE;""], [2541, ""                || (insecureWarning""]]}"	1357
CVE-2018-20433	GHSA-q485-j897-qc27	com.mchange:c3p0	0	0.9.5.2	0.9.5.3	https://github.com/swaldman/c3p0	7dfdda63f42759a5ec9b63d725b7412f74adb3e1	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/before/jar/c3p0-0.9.5.2.jar	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/after/jar/c3p0-0.9.5.3.jar	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/before/java/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/after/java/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/before/class/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.class	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/after/class/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.class	C3P0ConfigXmlUtils	[C3P0ConfigXmlUtils::extractXmlConfigFromDefaultResource, C3P0ConfigXmlUtils::extractXmlConfigFromInputStream, C3P0ConfigXmlUtils::extractXmlConfigFromInputStream, C3P0ConfigXmlUtils::extractXmlConfigFromDefaultResource]	com.mchange.v2.c3p0.cfg	com.mchange.v2.c3p0.cfg	"{""added"": [[118, ""    // thanks to zhutougg on GitHub https://github.com/zhutougg/c3p0/commit/2eb0ea97f745740b18dd45e4a909112d4685f87b""], [119, ""    // let's address hazards associated with overliberal parsing of XML, CVE-2018-20433""], [120, ""    //""], [121, ""    // by default entity references will not be expanded, but callers can specify expansion if they wish (important""], [122, ""    // to retain backwards compatibility with existing config files where users understand the risks)""], [123, """"], [124, ""    public static C3P0Config extractXmlConfigFromDefaultResource( boolean expandEntityReferences ) throws Exception""], [137, ""                return extractXmlConfigFromInputStream( is, expandEntityReferences );""], [150, ""    public static C3P0Config extractXmlConfigFromInputStream(InputStream is, boolean expandEntityReferences) throws Exception""], [153, """"], [154, ""\tfact.setExpandEntityReferences( expandEntityReferences );""], [155, """"], [265, ""    /*""], [266, ""    // preserve old public API, but with security-conservative defaults now""], [267, ""    // i don't think this API is used by anyone, so I'm gonna leave this commented out unless""], [268, ""    // somebody complains""], [269, """"], [270, ""    public static C3P0Config extractXmlConfigFromDefaultResource() throws Exception""], [271, ""    {""], [272, ""\treturn extractXmlConfigFromDefaultResource( false );""], [273, ""    }""], [274, """"], [275, ""    public static C3P0Config extractXmlConfigFromInputStream(InputStream is) throws Exception""], [276, ""    {""], [277, ""\treturn extractXmlConfigFromInputStream( is, false )""], [278, ""    }""], [279, ""    */""], [280, """"]], ""deleted"": [[118, ""    public static C3P0Config extractXmlConfigFromDefaultResource() throws Exception""], [131, ""                return extractXmlConfigFromInputStream( is );""], [144, ""    public static C3P0Config extractXmlConfigFromInputStream(InputStream is) throws Exception""]]}"	187
CVE-2018-20433	GHSA-q485-j897-qc27	com.mchange:c3p0	0	0.9.5.2	0.9.5.3	https://github.com/swaldman/c3p0	7dfdda63f42759a5ec9b63d725b7412f74adb3e1	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/before/jar/c3p0-0.9.5.2.jar	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/after/jar/c3p0-0.9.5.3.jar	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/before/java/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.java	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/after/java/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.java	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/before/class/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.class	proc/changes/CVE-2018-20433/7dfdda63f42759a5ec9b63d725b7412f74adb3e1/after/class/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.class	DefaultC3P0ConfigFinder	[DefaultC3P0ConfigFinder::findConfig, DefaultC3P0ConfigFinder::findExpandEntityReferences]	com.mchange.v2.c3p0.cfg	com.mchange.v2.c3p0.cfg	"{""added"": [[46, ""    final static String XML_CFG_FILE_KEY               = \""com.mchange.v2.c3p0.cfg.xml\"";""], [47, ""    final static String XML_CFG_EXPAND_ENTITY_REFS_KEY = \""com.mchange.v2.c3p0.cfg.xml.expandEntityReferences\"";""], [48, ""    final static String CLASSLOADER_RESOURCE_PREFIX    = \""classloader:\"";""], [72, ""\tboolean expandEntityReferences = findExpandEntityReferences();""], [73, """"], [76, ""\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromDefaultResource( expandEntityReferences );""], [117, ""\t\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromInputStream( is, expandEntityReferences );""], [148, """"], [149, ""    private boolean findExpandEntityReferences()""], [150, ""    {""], [151, ""\tString check = C3P0Config.getPropsFileConfigProperty( XML_CFG_EXPAND_ENTITY_REFS_KEY );""], [152, ""\tboolean out = (check != null && check.trim().equalsIgnoreCase(\""true\""));""], [153, ""\tif ( out && logger.isLoggable( MLevel.WARNING ) )""], [154, ""\t    logger.log( MLevel.WARNING,""], [155, ""\t\t\t\""Configuration property '\"" + XML_CFG_EXPAND_ENTITY_REFS_KEY + \""' is set to 'true'. \"" +""], [156, ""\t\t\t\""Entity references will be resolved in XML c3p0 configuration files. This may be a security hazard. \"" +""], [157, ""\t\t\t\""Be sure you understand your XML config files, including the full transitive closure of entity references. \"" +""], [158, ""\t\t\t\""See CVE-2018-20433, https://nvd.nist.gov/vuln/detail/CVE-2018-20433\"");""], [159, ""\treturn out;""], [160, ""    }""]], ""deleted"": [[46, ""    final static String XML_CFG_FILE_KEY            = \""com.mchange.v2.c3p0.cfg.xml\"";""], [47, ""    final static String CLASSLOADER_RESOURCE_PREFIX = \""classloader:\"";""], [73, ""\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromDefaultResource();""], [114, ""\t\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromInputStream( is );""]]}"	96
CVE-2019-0193	GHSA-3gm7-v7vw-866c	org.apache.solr:solr-core	0	8.1.1	8.2.0	https://github.com/apache/lucene-solr	325824cd391c8e71f36f17d687f52344e50e9715	proc/changes/CVE-2019-0193/325824cd391c8e71f36f17d687f52344e50e9715/before/jar/solr-core-8.1.1.jar	proc/changes/CVE-2019-0193/325824cd391c8e71f36f17d687f52344e50e9715/after/jar/solr-core-8.2.0.jar	proc/changes/CVE-2019-0193/325824cd391c8e71f36f17d687f52344e50e9715/before/java/solr/core/src/java/org/apache/solr/core/PluginBag.java	proc/changes/CVE-2019-0193/325824cd391c8e71f36f17d687f52344e50e9715/after/java/solr/core/src/java/org/apache/solr/core/PluginBag.java	proc/changes/CVE-2019-0193/325824cd391c8e71f36f17d687f52344e50e9715/before/class/solr/core/src/java/org/apache/solr/core/PluginBag$RuntimeLib.class	proc/changes/CVE-2019-0193/325824cd391c8e71f36f17d687f52344e50e9715/after/class/solr/core/src/java/org/apache/solr/core/PluginBag$RuntimeLib.class	PluginBag$RuntimeLib	[PluginBag::RuntimeLib::isEnabled]	org.apache.solr.core	org.apache.solr.core	"{""added"": [[522, ""      return Boolean.getBoolean(\""enable.runtime.lib\"");""]], ""deleted"": [[522, ""      return \""true\"".equals(System.getProperty(\""enable.runtime.lib\""));""]]}"	480
CVE-2019-10093	GHSA-4mq5-mj59-qq9c	org.apache.tika:tika-parsers	1.19	1.21	1.22	https://github.com/apache/tika	81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/jar/tika-parsers-1.21.jar	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/jar/tika-parsers-1.22.jar	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/java/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/ml2006/Word2006MLParser.java	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/java/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/ml2006/Word2006MLParser.java	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/class/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/ml2006/Word2006MLParser.class	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/class/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/xwpf/ml2006/Word2006MLParser.class	Word2006MLParser	[Word2006MLParser::parse]	org.apache.tika.parser.microsoft.ooxml.xwpf.ml2006	org.apache.tika.parser.microsoft.ooxml.xwpf.ml2006	"{""added"": [[62, ""            //need to get new SAXParser because""], [63, ""            //an attachment might require another SAXParser""], [64, ""            //mid-parse""], [65, ""            XMLReaderUtils.getSAXParser().parse(""], [68, ""                            new Word2006MLDocHandler(xhtml, metadata, context))));""], [72, ""        xhtml.endDocument();""]], ""deleted"": [[62, ""            XMLReaderUtils.parseSAX(""], [65, ""                            new Word2006MLDocHandler(xhtml, metadata, context))),""], [66, ""                    context);""], [70, ""            xhtml.endDocument();""]]}"	43
CVE-2019-10093	GHSA-4mq5-mj59-qq9c	org.apache.tika:tika-parsers	1.19	1.21	1.22	https://github.com/apache/tika	81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/jar/tika-parsers-1.21.jar	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/jar/tika-parsers-1.22.jar	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/java/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/AbstractXML2003Parser.java	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/java/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/AbstractXML2003Parser.java	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/class/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/AbstractXML2003Parser.class	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/class/tika-parsers/src/main/java/org/apache/tika/parser/microsoft/xml/AbstractXML2003Parser.class	AbstractXML2003Parser	[AbstractXML2003Parser::parse]	org.apache.tika.parser.microsoft.xml	org.apache.tika.parser.microsoft.xml	"{""added"": [[101, ""            //need to get new SAXParser because""], [102, ""            //an attachment might require another SAXParser""], [103, ""            //mid-parse""], [104, ""            XMLReaderUtils.getSAXParser().parse(""], [107, ""                            getContentHandler(tagged, metadata, context))));""]], ""deleted"": [[101, ""            XMLReaderUtils.parseSAX(""], [104, ""                            getContentHandler(tagged, metadata, context))),""], [105, ""                    context);""]]}"	99
CVE-2019-10093	GHSA-4mq5-mj59-qq9c	org.apache.tika:tika-parsers	1.19	1.21	1.22	https://github.com/apache/tika	81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/jar/tika-parsers-1.21.jar	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/jar/tika-parsers-1.22.jar	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/java/tika-parsers/src/main/java/org/apache/tika/parser/pkg/StreamingZipContainerDetector.java	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/java/tika-parsers/src/main/java/org/apache/tika/parser/pkg/StreamingZipContainerDetector.java	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/before/class/tika-parsers/src/main/java/org/apache/tika/parser/pkg/StreamingZipContainerDetector.class	proc/changes/CVE-2019-10093/81c21ab0aac6b3e4102a1a8906c8c7eab6f96dae/after/class/tika-parsers/src/main/java/org/apache/tika/parser/pkg/StreamingZipContainerDetector.class	StreamingZipContainerDetector	[StreamingZipContainerDetector::parseOOXMLContentTypes]	org.apache.tika.parser.pkg	org.apache.tika.parser.pkg	"{""added"": [[40, ""import org.apache.tika.sax.OfflineContentHandler;""], [211, ""            XMLReaderUtils.parseSAX(is,""], [212, ""                    new OfflineContentHandler(contentTypeHandler),""], [213, ""                    new ParseContext());""]], ""deleted"": [[210, ""            XMLReaderUtils.parseSAX(is, contentTypeHandler, new ParseContext());""]]}"	187
CVE-2019-10094	GHSA-mm7m-xg4h-6m52	org.apache.tika:tika-core	1.7	1.21	1.22	https://github.com/apache/tika	426be73b9e7500fa3d441231fa4e473de34743f6	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/before/jar/tika-core-1.21.jar	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/after/jar/tika-core-1.22.jar	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/before/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/after/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/before/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper$EmbeddedParserDecorator.class	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/after/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper$EmbeddedParserDecorator.class	RecursiveParserWrapper$EmbeddedParserDecorator	[RecursiveParserWrapper::EmbeddedParserDecorator::parse]	org.apache.tika.parser	org.apache.tika.parser	"{""added"": [[23, ""import org.apache.tika.io.TikaInputStream;""], [29, ""import org.apache.tika.sax.ContentHandlerDecorator;""], [32, ""import org.apache.tika.sax.SecureContentHandler;""], [35, ""import org.xml.sax.Attributes;""], [228, ""            try (TikaInputStream tis = TikaInputStream.get(stream)) {""], [229, ""                RecursivelySecureContentHandler secureContentHandler =""], [230, ""                        new RecursivelySecureContentHandler(localHandler, tis);""], [231, ""                context.set(RecursivelySecureContentHandler.class, secureContentHandler);""], [232, ""                getWrappedParser().parse(tis, secureContentHandler, metadata, context);""], [233, ""            }""], [378, ""            RecursivelySecureContentHandler secureContentHandler =""], [379, ""                    context.get(RecursivelySecureContentHandler.class);""], [380, ""            //store the handler that was used before this parse""], [381, ""            //so that you can return it back to its state at the end of this parse""], [382, ""            ContentHandler preContextHandler = secureContentHandler.handler;""], [383, ""            secureContentHandler.updateContentHandler(localHandler);""], [385, ""                super.parse(stream, secureContentHandler, metadata, context);""], [407, ""                secureContentHandler.updateContentHandler(preContextHandler);""], [425, ""    }""], [426, """"], [427, ""    private class RecursivelySecureContentHandler""], [428, ""            extends SecureContentHandler {""], [429, ""        private ContentHandler handler;""], [430, ""        public RecursivelySecureContentHandler(ContentHandler handler, TikaInputStream stream) {""], [431, ""            super(handler, stream);""], [432, ""            this.handler = handler;""], [433, ""        }""], [434, """"], [435, ""        public void updateContentHandler(ContentHandler handler) {""], [436, ""            setContentHandler(handler);""], [437, ""            this.handler = handler;""], [438, ""        }""], [440, ""        /**""], [441, ""         *  Bypass the SecureContentHandler...""], [442, ""         *""], [443, ""         *  This handler only looks at zip bomb via zip expansion.""], [444, ""         *  Users should be protected within entries against nested""], [445, ""         *  nested xml entities.  We don't want to carry""], [446, ""         *  those stats _across_ entries.""], [447, ""         *""], [448, ""         * @param uri""], [449, ""         * @param localName""], [450, ""         * @param name""], [451, ""         * @param atts""], [452, ""         * @throws SAXException""], [453, ""         */""], [454, ""        @Override""], [455, ""        public void startElement(""], [456, ""                String uri, String localName, String name, Attributes atts)""], [457, ""                throws SAXException {""], [458, ""            this.handler.startElement(uri, localName, name, atts);""], [459, ""        }""], [461, ""        @Override""], [462, ""        public void endElement(""], [463, ""                String uri, String localName, String name) throws SAXException {""], [464, ""            this.handler.endElement(uri, localName, name);""], [465, ""        }""]], ""deleted"": [[224, ""            getWrappedParser().parse(stream, localHandler, metadata, context);""], [370, ""                super.parse(stream, localHandler, metadata, context);""]]}"	240
CVE-2019-10094	GHSA-mm7m-xg4h-6m52	org.apache.tika:tika-core	1.7	1.21	1.22	https://github.com/apache/tika	426be73b9e7500fa3d441231fa4e473de34743f6	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/before/jar/tika-core-1.21.jar	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/after/jar/tika-core-1.22.jar	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/before/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/after/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/before/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.class	proc/changes/CVE-2019-10094/426be73b9e7500fa3d441231fa4e473de34743f6/after/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.class	RecursiveParserWrapper	[RecursiveParserWrapper::parse]	org.apache.tika.parser	org.apache.tika.parser	"{""added"": [[23, ""import org.apache.tika.io.TikaInputStream;""], [29, ""import org.apache.tika.sax.ContentHandlerDecorator;""], [32, ""import org.apache.tika.sax.SecureContentHandler;""], [35, ""import org.xml.sax.Attributes;""], [228, ""            try (TikaInputStream tis = TikaInputStream.get(stream)) {""], [229, ""                RecursivelySecureContentHandler secureContentHandler =""], [230, ""                        new RecursivelySecureContentHandler(localHandler, tis);""], [231, ""                context.set(RecursivelySecureContentHandler.class, secureContentHandler);""], [232, ""                getWrappedParser().parse(tis, secureContentHandler, metadata, context);""], [233, ""            }""], [378, ""            RecursivelySecureContentHandler secureContentHandler =""], [379, ""                    context.get(RecursivelySecureContentHandler.class);""], [380, ""            //store the handler that was used before this parse""], [381, ""            //so that you can return it back to its state at the end of this parse""], [382, ""            ContentHandler preContextHandler = secureContentHandler.handler;""], [383, ""            secureContentHandler.updateContentHandler(localHandler);""], [385, ""                super.parse(stream, secureContentHandler, metadata, context);""], [407, ""                secureContentHandler.updateContentHandler(preContextHandler);""], [425, ""    }""], [426, """"], [427, ""    private class RecursivelySecureContentHandler""], [428, ""            extends SecureContentHandler {""], [429, ""        private ContentHandler handler;""], [430, ""        public RecursivelySecureContentHandler(ContentHandler handler, TikaInputStream stream) {""], [431, ""            super(handler, stream);""], [432, ""            this.handler = handler;""], [433, ""        }""], [434, """"], [435, ""        public void updateContentHandler(ContentHandler handler) {""], [436, ""            setContentHandler(handler);""], [437, ""            this.handler = handler;""], [438, ""        }""], [440, ""        /**""], [441, ""         *  Bypass the SecureContentHandler...""], [442, ""         *""], [443, ""         *  This handler only looks at zip bomb via zip expansion.""], [444, ""         *  Users should be protected within entries against nested""], [445, ""         *  nested xml entities.  We don't want to carry""], [446, ""         *  those stats _across_ entries.""], [447, ""         *""], [448, ""         * @param uri""], [449, ""         * @param localName""], [450, ""         * @param name""], [451, ""         * @param atts""], [452, ""         * @throws SAXException""], [453, ""         */""], [454, ""        @Override""], [455, ""        public void startElement(""], [456, ""                String uri, String localName, String name, Attributes atts)""], [457, ""                throws SAXException {""], [458, ""            this.handler.startElement(uri, localName, name, atts);""], [459, ""        }""], [461, ""        @Override""], [462, ""        public void endElement(""], [463, ""                String uri, String localName, String name) throws SAXException {""], [464, ""            this.handler.endElement(uri, localName, name);""], [465, ""        }""]], ""deleted"": [[224, ""            getWrappedParser().parse(stream, localHandler, metadata, context);""], [370, ""                super.parse(stream, localHandler, metadata, context);""]]}"	240
CVE-2019-10088	GHSA-mfwh-gqx8-c787	org.apache.tika:tika-core	1.7	1.21	1.22	https://github.com/apache/tika	426be73b9e7500fa3d441231fa4e473de34743f6	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/before/jar/tika-core-1.21.jar	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/after/jar/tika-core-1.22.jar	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/before/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/after/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/before/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper$EmbeddedParserDecorator.class	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/after/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper$EmbeddedParserDecorator.class	RecursiveParserWrapper$EmbeddedParserDecorator	[RecursiveParserWrapper::EmbeddedParserDecorator::parse]	org.apache.tika.parser	org.apache.tika.parser	"{""added"": [[23, ""import org.apache.tika.io.TikaInputStream;""], [29, ""import org.apache.tika.sax.ContentHandlerDecorator;""], [32, ""import org.apache.tika.sax.SecureContentHandler;""], [35, ""import org.xml.sax.Attributes;""], [228, ""            try (TikaInputStream tis = TikaInputStream.get(stream)) {""], [229, ""                RecursivelySecureContentHandler secureContentHandler =""], [230, ""                        new RecursivelySecureContentHandler(localHandler, tis);""], [231, ""                context.set(RecursivelySecureContentHandler.class, secureContentHandler);""], [232, ""                getWrappedParser().parse(tis, secureContentHandler, metadata, context);""], [233, ""            }""], [378, ""            RecursivelySecureContentHandler secureContentHandler =""], [379, ""                    context.get(RecursivelySecureContentHandler.class);""], [380, ""            //store the handler that was used before this parse""], [381, ""            //so that you can return it back to its state at the end of this parse""], [382, ""            ContentHandler preContextHandler = secureContentHandler.handler;""], [383, ""            secureContentHandler.updateContentHandler(localHandler);""], [385, ""                super.parse(stream, secureContentHandler, metadata, context);""], [407, ""                secureContentHandler.updateContentHandler(preContextHandler);""], [425, ""    }""], [426, """"], [427, ""    private class RecursivelySecureContentHandler""], [428, ""            extends SecureContentHandler {""], [429, ""        private ContentHandler handler;""], [430, ""        public RecursivelySecureContentHandler(ContentHandler handler, TikaInputStream stream) {""], [431, ""            super(handler, stream);""], [432, ""            this.handler = handler;""], [433, ""        }""], [434, """"], [435, ""        public void updateContentHandler(ContentHandler handler) {""], [436, ""            setContentHandler(handler);""], [437, ""            this.handler = handler;""], [438, ""        }""], [440, ""        /**""], [441, ""         *  Bypass the SecureContentHandler...""], [442, ""         *""], [443, ""         *  This handler only looks at zip bomb via zip expansion.""], [444, ""         *  Users should be protected within entries against nested""], [445, ""         *  nested xml entities.  We don't want to carry""], [446, ""         *  those stats _across_ entries.""], [447, ""         *""], [448, ""         * @param uri""], [449, ""         * @param localName""], [450, ""         * @param name""], [451, ""         * @param atts""], [452, ""         * @throws SAXException""], [453, ""         */""], [454, ""        @Override""], [455, ""        public void startElement(""], [456, ""                String uri, String localName, String name, Attributes atts)""], [457, ""                throws SAXException {""], [458, ""            this.handler.startElement(uri, localName, name, atts);""], [459, ""        }""], [461, ""        @Override""], [462, ""        public void endElement(""], [463, ""                String uri, String localName, String name) throws SAXException {""], [464, ""            this.handler.endElement(uri, localName, name);""], [465, ""        }""]], ""deleted"": [[224, ""            getWrappedParser().parse(stream, localHandler, metadata, context);""], [370, ""                super.parse(stream, localHandler, metadata, context);""]]}"	240
CVE-2019-10088	GHSA-mfwh-gqx8-c787	org.apache.tika:tika-core	1.7	1.21	1.22	https://github.com/apache/tika	426be73b9e7500fa3d441231fa4e473de34743f6	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/before/jar/tika-core-1.21.jar	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/after/jar/tika-core-1.22.jar	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/before/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/after/java/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/before/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.class	proc/changes/CVE-2019-10088/426be73b9e7500fa3d441231fa4e473de34743f6/after/class/tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.class	RecursiveParserWrapper	[RecursiveParserWrapper::parse]	org.apache.tika.parser	org.apache.tika.parser	"{""added"": [[23, ""import org.apache.tika.io.TikaInputStream;""], [29, ""import org.apache.tika.sax.ContentHandlerDecorator;""], [32, ""import org.apache.tika.sax.SecureContentHandler;""], [35, ""import org.xml.sax.Attributes;""], [228, ""            try (TikaInputStream tis = TikaInputStream.get(stream)) {""], [229, ""                RecursivelySecureContentHandler secureContentHandler =""], [230, ""                        new RecursivelySecureContentHandler(localHandler, tis);""], [231, ""                context.set(RecursivelySecureContentHandler.class, secureContentHandler);""], [232, ""                getWrappedParser().parse(tis, secureContentHandler, metadata, context);""], [233, ""            }""], [378, ""            RecursivelySecureContentHandler secureContentHandler =""], [379, ""                    context.get(RecursivelySecureContentHandler.class);""], [380, ""            //store the handler that was used before this parse""], [381, ""            //so that you can return it back to its state at the end of this parse""], [382, ""            ContentHandler preContextHandler = secureContentHandler.handler;""], [383, ""            secureContentHandler.updateContentHandler(localHandler);""], [385, ""                super.parse(stream, secureContentHandler, metadata, context);""], [407, ""                secureContentHandler.updateContentHandler(preContextHandler);""], [425, ""    }""], [426, """"], [427, ""    private class RecursivelySecureContentHandler""], [428, ""            extends SecureContentHandler {""], [429, ""        private ContentHandler handler;""], [430, ""        public RecursivelySecureContentHandler(ContentHandler handler, TikaInputStream stream) {""], [431, ""            super(handler, stream);""], [432, ""            this.handler = handler;""], [433, ""        }""], [434, """"], [435, ""        public void updateContentHandler(ContentHandler handler) {""], [436, ""            setContentHandler(handler);""], [437, ""            this.handler = handler;""], [438, ""        }""], [440, ""        /**""], [441, ""         *  Bypass the SecureContentHandler...""], [442, ""         *""], [443, ""         *  This handler only looks at zip bomb via zip expansion.""], [444, ""         *  Users should be protected within entries against nested""], [445, ""         *  nested xml entities.  We don't want to carry""], [446, ""         *  those stats _across_ entries.""], [447, ""         *""], [448, ""         * @param uri""], [449, ""         * @param localName""], [450, ""         * @param name""], [451, ""         * @param atts""], [452, ""         * @throws SAXException""], [453, ""         */""], [454, ""        @Override""], [455, ""        public void startElement(""], [456, ""                String uri, String localName, String name, Attributes atts)""], [457, ""                throws SAXException {""], [458, ""            this.handler.startElement(uri, localName, name, atts);""], [459, ""        }""], [461, ""        @Override""], [462, ""        public void endElement(""], [463, ""                String uri, String localName, String name) throws SAXException {""], [464, ""            this.handler.endElement(uri, localName, name);""], [465, ""        }""]], ""deleted"": [[224, ""            getWrappedParser().parse(stream, localHandler, metadata, context);""], [370, ""                super.parse(stream, localHandler, metadata, context);""]]}"	240
CVE-2019-5427	GHSA-84p2-vf58-xhxv	com.mchange:c3p0	0	0.9.5.3	0.9.5.4	https://github.com/swaldman/c3p0	f38f27635c384806c2a9d6500d80183d9f09d78b	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/before/jar/c3p0-0.9.5.3.jar	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/after/jar/c3p0-0.9.5.4.jar	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/before/java/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/after/java/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/before/class/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.class	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/after/class/src/java/com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.class	C3P0ConfigXmlUtils	[C3P0ConfigXmlUtils::extractXmlConfigFromInputStream, C3P0ConfigXmlUtils::extractXmlConfigFromDefaultResource, C3P0ConfigXmlUtils::extractXmlConfigFromDefaultResource, C3P0ConfigXmlUtils::attemptSetFeature, C3P0ConfigXmlUtils::extractXmlConfigFromInputStream, C3P0ConfigXmlUtils::cautionDocumentBuilderFactory]	com.mchange.v2.c3p0.cfg	com.mchange.v2.c3p0.cfg	"{""added"": [[118, ""    public static C3P0Config extractXmlConfigFromDefaultResource( boolean usePermissiveParser ) throws Exception""], [131, ""                return extractXmlConfigFromInputStream( is, usePermissiveParser );""], [144, ""    private static void attemptSetFeature( DocumentBuilderFactory dbf, String featureUri, boolean setting )""], [145, ""    {""], [146, ""\ttry { dbf.setFeature( featureUri, setting ); }""], [147, ""\tcatch (ParserConfigurationException e)""], [148, ""\t{""], [149, ""\t    if ( logger.isLoggable( MLevel.FINE ) )""], [150, ""\t\tlogger.log(MLevel.FINE, \""Attempted but failed to set presumably unsupported feature '\"" + featureUri + \""' to \"" + setting + \"".\"");""], [151, ""\t}""], [152, ""    }""], [153, """"], [154, ""    // thanks to zhutougg on GitHub https://github.com/zhutougg/c3p0/commit/2eb0ea97f745740b18dd45e4a909112d4685f87b""], [155, ""    // let's address hazards associated with overliberal parsing of XML, CVE-2018-20433""], [156, ""    //""], [157, ""    // by default entity references will not be expanded, but callers can specify expansion if they wish (important""], [158, ""    // to retain backwards compatibility with existing config files where users understand the risks)""], [159, ""    //""], [160, ""    // -=-=-=-""], [161, ""    //""], [162, ""    // disabling entity expansions turns out not to be sufficient to prevent attacks (if an attacker can control the""], [163, ""    // XML config file that will be parsed). we now enable a wide variety of restrictions by default, but allow users""], [164, ""    // to revert to the old behavior by setting usePermissiveParser to 'true'""], [165, ""    //""], [166, ""    // Many thanks to Aaron Massey (amassey) at HackerOne for calling attention to the continued vulnerability,""], [167, ""    // and to Dominique Righetto (righettod on GitHub) for""], [168, ""    //""], [169, ""    //    https://github.com/OWASP/CheatSheetSeries/blob/31c94f233c40af4237432008106f42a9c4bff05e/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.md""], [170, ""    //    (via Aaron Massey)""], [171, ""    //""], [172, ""    // for instructions on how to overkill the fix""], [173, """"], [174, ""    private static void cautionDocumentBuilderFactory( DocumentBuilderFactory dbf )""], [175, ""    {""], [176, ""\t// the big one, if possible disable doctype declarations entirely""], [177, ""\tattemptSetFeature(dbf, \""http://apache.org/xml/features/disallow-doctype-decl\"", true);""], [178, """"], [179, ""\t// for a varety of libraries, disable external general entities""], [180, ""\tattemptSetFeature(dbf, \""http://xerces.apache.org/xerces-j/features.html#external-general-entities\"", false);""], [181, ""\tattemptSetFeature(dbf, \""http://xerces.apache.org/xerces2-j/features.html#external-general-entities\"", false);""], [182, ""\tattemptSetFeature(dbf, \""http://xml.org/sax/features/external-general-entities\"", false);""], [183, """"], [184, ""\t// for a variety of libraries, disable external parameter entities""], [185, ""\tattemptSetFeature(dbf, \""http://xerces.apache.org/xerces-j/features.html#external-parameter-entities\"", false);""], [186, ""\tattemptSetFeature(dbf, \""http://xerces.apache.org/xerces2-j/features.html#external-parameter-entities\"", false);""], [187, ""\tattemptSetFeature(dbf, \""http://xml.org/sax/features/external-parameter-entities\"", false);""], [188, """"], [189, ""\t// if possible, disable external DTDs""], [190, ""\tattemptSetFeature(dbf, \""http://apache.org/xml/features/nonvalidating/load-external-dtd\"", false);""], [191, """"], [192, ""\t// disallow xinclude resolution""], [193, ""\tdbf.setXIncludeAware(false);""], [194, """"], [195, ""\t// disallow entity reference expansion in general""], [196, ""\tdbf.setExpandEntityReferences( false );""], [197, ""    }""], [198, """"], [199, ""    public static C3P0Config extractXmlConfigFromInputStream(InputStream is, boolean usePermissiveParser) throws Exception""], [203, ""\tif (! usePermissiveParser ) cautionDocumentBuilderFactory( fact );""]], ""deleted"": [[118, ""    // thanks to zhutougg on GitHub https://github.com/zhutougg/c3p0/commit/2eb0ea97f745740b18dd45e4a909112d4685f87b""], [119, ""    // let's address hazards associated with overliberal parsing of XML, CVE-2018-20433""], [120, ""    //""], [121, ""    // by default entity references will not be expanded, but callers can specify expansion if they wish (important""], [122, ""    // to retain backwards compatibility with existing config files where users understand the risks)""], [123, """"], [124, ""    public static C3P0Config extractXmlConfigFromDefaultResource( boolean expandEntityReferences ) throws Exception""], [137, ""                return extractXmlConfigFromInputStream( is, expandEntityReferences );""], [150, ""    public static C3P0Config extractXmlConfigFromInputStream(InputStream is, boolean expandEntityReferences) throws Exception""], [154, ""\tfact.setExpandEntityReferences( expandEntityReferences );""]]}"	209
CVE-2019-5427	GHSA-84p2-vf58-xhxv	com.mchange:c3p0	0	0.9.5.3	0.9.5.4	https://github.com/swaldman/c3p0	f38f27635c384806c2a9d6500d80183d9f09d78b	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/before/jar/c3p0-0.9.5.3.jar	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/after/jar/c3p0-0.9.5.4.jar	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/before/java/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.java	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/after/java/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.java	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/before/class/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.class	proc/changes/CVE-2019-5427/f38f27635c384806c2a9d6500d80183d9f09d78b/after/class/src/java/com/mchange/v2/c3p0/cfg/DefaultC3P0ConfigFinder.class	DefaultC3P0ConfigFinder	[DefaultC3P0ConfigFinder::findExpandEntityReferences, DefaultC3P0ConfigFinder::findConfig, DefaultC3P0ConfigFinder::findUsePermissiveParser, DefaultC3P0ConfigFinder::affirmativelyTrue]	com.mchange.v2.c3p0.cfg	com.mchange.v2.c3p0.cfg	"{""added"": [[46, ""    final static String XML_CFG_FILE_KEY                  = \""com.mchange.v2.c3p0.cfg.xml\"";""], [47, ""    final static String XML_CFG_EXPAND_ENTITY_REFS_KEY    = \""com.mchange.v2.c3p0.cfg.xml.expandEntityReferences\""; // deprecated, defaults to false""], [48, ""    final static String XML_CFG_USE_PERMISSIVE_PARSER_KEY = \""com.mchange.v2.c3p0.cfg.xml.usePermissiveParser\"";    // defaults to false""], [49, ""    final static String CLASSLOADER_RESOURCE_PREFIX       = \""classloader:\"";""], [73, ""\tboolean usePermissiveParser = findUsePermissiveParser();""], [77, ""\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromDefaultResource( usePermissiveParser );""], [118, ""\t\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromInputStream( is, usePermissiveParser );""], [150, ""    private static boolean affirmativelyTrue( String propStr )""], [151, ""    { return (propStr != null && propStr.trim().equalsIgnoreCase(\""true\"")); }""], [152, """"], [153, ""    private boolean findUsePermissiveParser()""], [155, ""\tboolean deprecatedExpandEntityRefs = affirmativelyTrue( C3P0Config.getPropsFileConfigProperty( XML_CFG_EXPAND_ENTITY_REFS_KEY ) );""], [156, ""\tboolean usePermissiveParser        = affirmativelyTrue( C3P0Config.getPropsFileConfigProperty( XML_CFG_USE_PERMISSIVE_PARSER_KEY ) );""], [157, """"], [158, ""\tboolean out = usePermissiveParser || deprecatedExpandEntityRefs;""], [159, """"], [161, ""\t{""], [162, ""\t    String warningKey;""], [163, ""\t    if ( deprecatedExpandEntityRefs )""], [164, ""\t    {""], [165, ""\t\tlogger.log( MLevel.WARNING,""], [166, ""\t\t\t    \""You have set the configuration property '\"" + XML_CFG_EXPAND_ENTITY_REFS_KEY + \""', which has been deprecated, to true. \"" +""], [167, ""\t\t\t    \""Please use '\"" + XML_CFG_USE_PERMISSIVE_PARSER_KEY + \""' instead. \"" +""], [168, ""\t\t\t    \""Please be aware that permissive parsing enables inline document type definitions, XML inclusions, and other fetures!\"");""], [169, ""\t\tif ( usePermissiveParser )""], [170, ""\t\t    warningKey = \""Configuration property '\"" + XML_CFG_USE_PERMISSIVE_PARSER_KEY + \""'\"";""], [171, ""\t\telse""], [172, ""\t\t    warningKey = \""Configuration property '\"" + XML_CFG_EXPAND_ENTITY_REFS_KEY + \""' (deprecated)\"";""], [173, ""\t    }""], [174, ""\t    else""], [175, ""\t\twarningKey = \""Configuration property '\"" + XML_CFG_USE_PERMISSIVE_PARSER_KEY + \""'\"";""], [176, """"], [178, ""\t\t\twarningKey + \"" is set to 'true'. \"" +""], [179, ""\t\t\t\""Entity references will be resolved in XML c3p0 configuration files, doctypes and xml includes will be permitted, the file will in general be parsed very permissively. \"" +""], [180, ""\t\t\t\""This may be a security hazard. \"" +""], [181, ""\t\t\t\""Be sure you understand your XML config files, including the full transitive closure of entity references and incusions. \"" +""], [182, ""\t\t\t\""See CVE-2018-20433, https://nvd.nist.gov/vuln/detail/CVE-2018-20433 / \"" +""], [183, ""\t\t\t\""See also https://github.com/OWASP/CheatSheetSeries/blob/31c94f233c40af4237432008106f42a9c4bff05e/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.md / \"" +""], [184, ""\t\t\t\""See also https://vsecurity.com//download/papers/XMLDTDEntityAttacks.pdf\"" );""], [185, ""\t}""], [186, """"]], ""deleted"": [[46, ""    final static String XML_CFG_FILE_KEY               = \""com.mchange.v2.c3p0.cfg.xml\"";""], [47, ""    final static String XML_CFG_EXPAND_ENTITY_REFS_KEY = \""com.mchange.v2.c3p0.cfg.xml.expandEntityReferences\"";""], [48, ""    final static String CLASSLOADER_RESOURCE_PREFIX    = \""classloader:\"";""], [72, ""\tboolean expandEntityReferences = findExpandEntityReferences();""], [76, ""\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromDefaultResource( expandEntityReferences );""], [117, ""\t\t\tC3P0Config xmlConfig = C3P0ConfigXmlUtils.extractXmlConfigFromInputStream( is, expandEntityReferences );""], [149, ""    private boolean findExpandEntityReferences()""], [151, ""\tString check = C3P0Config.getPropsFileConfigProperty( XML_CFG_EXPAND_ENTITY_REFS_KEY );""], [152, ""\tboolean out = (check != null && check.trim().equalsIgnoreCase(\""true\""));""], [155, ""\t\t\t\""Configuration property '\"" + XML_CFG_EXPAND_ENTITY_REFS_KEY + \""' is set to 'true'. \"" +""], [156, ""\t\t\t\""Entity references will be resolved in XML c3p0 configuration files. This may be a security hazard. \"" +""], [157, ""\t\t\t\""Be sure you understand your XML config files, including the full transitive closure of entity references. \"" +""], [158, ""\t\t\t\""See CVE-2018-20433, https://nvd.nist.gov/vuln/detail/CVE-2018-20433\"");""]]}"	119
CVE-2019-9658	GHSA-gp32-7h29-rpxm	com.puppycrawl.tools:checkstyle	0	8.17	8.18	https://github.com/checkstyle/checkstyle	180b4fe37a2249d4489d584505f2b7b3ab162ec6	proc/changes/CVE-2019-9658/180b4fe37a2249d4489d584505f2b7b3ab162ec6/before/jar/checkstyle-8.17.jar	proc/changes/CVE-2019-9658/180b4fe37a2249d4489d584505f2b7b3ab162ec6/after/jar/checkstyle-8.18.jar	proc/changes/CVE-2019-9658/180b4fe37a2249d4489d584505f2b7b3ab162ec6/before/java/src/main/java/com/puppycrawl/tools/checkstyle/XmlLoader.java	proc/changes/CVE-2019-9658/180b4fe37a2249d4489d584505f2b7b3ab162ec6/after/java/src/main/java/com/puppycrawl/tools/checkstyle/XmlLoader.java	proc/changes/CVE-2019-9658/180b4fe37a2249d4489d584505f2b7b3ab162ec6/before/class/src/main/java/com/puppycrawl/tools/checkstyle/XmlLoader.class	proc/changes/CVE-2019-9658/180b4fe37a2249d4489d584505f2b7b3ab162ec6/after/class/src/main/java/com/puppycrawl/tools/checkstyle/XmlLoader.class	XmlLoader	[XmlLoader::XmlLoader]	com.puppycrawl.tools.checkstyle	com.puppycrawl.tools.checkstyle	"{""added"": [[68, ""        LoadExternalDtdFeatureProvider.setFeaturesBySystemProperty(factory);""], [116, ""    public static final class LoadExternalDtdFeatureProvider {""], [117, """"], [118, ""        /** System property name to enable external DTD load. */""], [119, ""        public static final String ENABLE_EXTERNAL_DTD_LOAD = \""checkstyle.enableExternalDtdLoad\"";""], [129, ""        private LoadExternalDtdFeatureProvider() {""], [134, ""         * to use external DTD file loading, this is not activated by default to no allow""], [135, ""         * usage of schema files that checkstyle do not know""], [136, ""         * it is even security problem to allow files from outside.""], [141, ""        public static void setFeaturesBySystemProperty(SAXParserFactory factory)""], [143, """"], [144, ""            final boolean enableExternalDtdLoad = Boolean.valueOf(""], [145, ""                System.getProperty(ENABLE_EXTERNAL_DTD_LOAD, \""false\""));""], [146, """"], [147, ""            factory.setFeature(LOAD_EXTERNAL_DTD, enableExternalDtdLoad);""], [148, ""            factory.setFeature(EXTERNAL_GENERAL_ENTITIES, enableExternalDtdLoad);""]], ""deleted"": [[68, ""        FeaturesForVerySecureJavaInstallations.addFeaturesForVerySecureJavaInstallations(factory);""], [116, ""    public static final class FeaturesForVerySecureJavaInstallations {""], [126, ""        private FeaturesForVerySecureJavaInstallations() {""], [131, ""         * for execution on very secured environments.""], [136, ""        public static void addFeaturesForVerySecureJavaInstallations(SAXParserFactory factory)""], [138, ""            factory.setFeature(LOAD_EXTERNAL_DTD, true);""], [139, ""            factory.setFeature(EXTERNAL_GENERAL_ENTITIES, true);""]]}"	70
CVE-2018-1324	GHSA-h436-432x-8fvx	org.apache.commons:commons-compress	1.11	1.15	1.16	https://github.com/apache/commons-compress	2a2f1dc48e22a34ddb72321a4db211da91aa933b	proc/changes/CVE-2018-1324/2a2f1dc48e22a34ddb72321a4db211da91aa933b/before/jar/commons-compress-1.15.jar	proc/changes/CVE-2018-1324/2a2f1dc48e22a34ddb72321a4db211da91aa933b/after/jar/commons-compress-1.16.jar	proc/changes/CVE-2018-1324/2a2f1dc48e22a34ddb72321a4db211da91aa933b/before/java/src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java	proc/changes/CVE-2018-1324/2a2f1dc48e22a34ddb72321a4db211da91aa933b/after/java/src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java	proc/changes/CVE-2018-1324/2a2f1dc48e22a34ddb72321a4db211da91aa933b/before/class/src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.class	proc/changes/CVE-2018-1324/2a2f1dc48e22a34ddb72321a4db211da91aa933b/after/class/src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.class	X0017_StrongEncryptionHeader	[X0017_StrongEncryptionHeader::parseCentralDirectoryFormat]	org.apache.commons.compress.archivers.zip	org.apache.commons.compress.archivers.zip	"{""added"": [[313, ""            for (long i = 0; i < this.rcount; i++) {""]], ""deleted"": [[313, ""            for (int i = 0; i < this.rcount; i++) {""]]}"	87
CVE-2019-11777	GHSA-63qc-p2x4-9fgf	org.eclipse.paho:org.eclipse.paho.client.mqttv3	0	1.2.0	1.2.1	https://github.com/eclipse/paho.mqtt.java	a0bbf1e7da158ae191582f032343c6171e6a0b44	proc/changes/CVE-2019-11777/a0bbf1e7da158ae191582f032343c6171e6a0b44/before/jar/org.eclipse.paho.client.mqttv3-1.2.0.jar	proc/changes/CVE-2019-11777/a0bbf1e7da158ae191582f032343c6171e6a0b44/after/jar/org.eclipse.paho.client.mqttv3-1.2.1.jar	proc/changes/CVE-2019-11777/a0bbf1e7da158ae191582f032343c6171e6a0b44/before/java/org.eclipse.paho.client.mqttv3/src/main/java/org/eclipse/paho/client/mqttv3/internal/SSLNetworkModule.java	proc/changes/CVE-2019-11777/a0bbf1e7da158ae191582f032343c6171e6a0b44/after/java/org.eclipse.paho.client.mqttv3/src/main/java/org/eclipse/paho/client/mqttv3/internal/SSLNetworkModule.java	proc/changes/CVE-2019-11777/a0bbf1e7da158ae191582f032343c6171e6a0b44/before/class/org.eclipse.paho.client.mqttv3/src/main/java/org/eclipse/paho/client/mqttv3/internal/SSLNetworkModule.class	proc/changes/CVE-2019-11777/a0bbf1e7da158ae191582f032343c6171e6a0b44/after/class/org.eclipse.paho.client.mqttv3/src/main/java/org/eclipse/paho/client/mqttv3/internal/SSLNetworkModule.class	SSLNetworkModule	[SSLNetworkModule::start]	org.eclipse.paho.client.mqttv3.internal	org.eclipse.paho.client.mqttv3.internal	"{""added"": [[22, ""import javax.net.ssl.SSLPeerUnverifiedException;""], [141, ""\t\t\tif(!hostnameVerifier.verify(host, session)) {""], [142, ""\t\t\t\tsession.invalidate();""], [143, ""\t\t\t\tsocket.close();""], [144, ""\t\t\t\tthrow new SSLPeerUnverifiedException(\""Host: \"" + host + \"", Peer Host: \"" + session.getPeerHost());""], [145, ""\t\t\t}""]], ""deleted"": [[140, ""\t\t\thostnameVerifier.verify(host, session);""]]}"	89
CVE-2019-10071	GHSA-fgmr-vx7c-5wj6	org.apache.tapestry:tapestry-core	5.4	5.4.4	5.4.5	https://gitbox.apache.org/repos/asf/tapestry-5	cdcf49c0a2b36ffc7a004d54405bb4357870c4b2	proc/changes/CVE-2019-10071/cdcf49c0a2b36ffc7a004d54405bb4357870c4b2/before/jar/tapestry-core-5.4.4.jar	proc/changes/CVE-2019-10071/cdcf49c0a2b36ffc7a004d54405bb4357870c4b2/after/jar/tapestry-core-5.4.5.jar	proc/changes/CVE-2019-10071/cdcf49c0a2b36ffc7a004d54405bb4357870c4b2/before/java/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.java	proc/changes/CVE-2019-10071/cdcf49c0a2b36ffc7a004d54405bb4357870c4b2/after/java/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.java	proc/changes/CVE-2019-10071/cdcf49c0a2b36ffc7a004d54405bb4357870c4b2/before/class/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.class	proc/changes/CVE-2019-10071/cdcf49c0a2b36ffc7a004d54405bb4357870c4b2/after/class/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.class	ClientDataEncoderImpl	[ClientDataEncoderImpl::validateHMAC]	org.apache.tapestry5.internal.services	org.apache.tapestry5.internal.services	"{""added"": [[35, ""import java.security.MessageDigest;""], [130, ""        if (!MessageDigest.isEqual(storedHmacResult.getBytes(), actual.getBytes()))""], [136, """"]], ""deleted"": [[129, ""        if (!storedHmacResult.equals(actual))""], [135, """"]]}"	90
CVE-2020-25020	GHSA-wcp5-m52f-mhh5	net.sf.mpxj:mpxj	0	8.1.3	8.1.4	https://github.com/joniles/mpxj	0d830e8cbe5213968abb1bcb1c816ca2ee00aa53	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/jar/mpxj-8.1.3.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/jar/mpxj-8.1.4.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/java/src/main/java/net/sf/mpxj/conceptdraw/ConceptDrawProjectReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/java/src/main/java/net/sf/mpxj/conceptdraw/ConceptDrawProjectReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/class/src/main/java/net/sf/mpxj/conceptdraw/ConceptDrawProjectReader.class	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/class/src/main/java/net/sf/mpxj/conceptdraw/ConceptDrawProjectReader.class	ConceptDrawProjectReader	[ConceptDrawProjectReader::read]	net.sf.mpxj.conceptdraw	net.sf.mpxj.conceptdraw	"{""added"": [[60, ""import net.sf.mpxj.common.UnmarshalHelper;""], [95, ""         if (CONTEXT == null)""], [96, ""         {""], [97, ""            throw CONTEXT_EXCEPTION;""], [98, ""         }""], [99, """"], [114, ""         Document cdp = (Document) UnmarshalHelper.unmarshal(CONTEXT, stream, new NamespaceFilter());""]], ""deleted"": [[28, ""import java.io.InputStreamReader;""], [39, ""import javax.xml.bind.Unmarshaller;""], [40, ""import javax.xml.bind.UnmarshallerHandler;""], [42, ""import javax.xml.parsers.SAXParser;""], [43, ""import javax.xml.parsers.SAXParserFactory;""], [45, ""import org.xml.sax.InputSource;""], [47, ""import org.xml.sax.XMLFilter;""], [48, ""import org.xml.sax.XMLReader;""], [116, ""         SAXParserFactory factory = SAXParserFactory.newInstance();""], [117, ""         SAXParser saxParser = factory.newSAXParser();""], [118, ""         XMLReader xmlReader = saxParser.getXMLReader();""], [119, """"], [120, ""         if (CONTEXT == null)""], [121, ""         {""], [122, ""            throw CONTEXT_EXCEPTION;""], [123, ""         }""], [124, """"], [125, ""         Unmarshaller unmarshaller = CONTEXT.createUnmarshaller();""], [126, """"], [127, ""         XMLFilter filter = new NamespaceFilter();""], [128, ""         filter.setParent(xmlReader);""], [129, ""         UnmarshallerHandler unmarshallerHandler = unmarshaller.getUnmarshallerHandler();""], [130, ""         filter.setContentHandler(unmarshallerHandler);""], [131, ""         filter.parse(new InputSource(new InputStreamReader(stream)));""], [132, ""         Document cdp = (Document) unmarshallerHandler.getResult();""]]}"	382
CVE-2020-25020	GHSA-wcp5-m52f-mhh5	net.sf.mpxj:mpxj	0	8.1.3	8.1.4	https://github.com/joniles/mpxj	0d830e8cbe5213968abb1bcb1c816ca2ee00aa53	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/jar/mpxj-8.1.3.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/jar/mpxj-8.1.4.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/java/src/main/java/net/sf/mpxj/ganttdesigner/GanttDesignerReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/java/src/main/java/net/sf/mpxj/ganttdesigner/GanttDesignerReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/class/src/main/java/net/sf/mpxj/ganttdesigner/GanttDesignerReader.class	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/class/src/main/java/net/sf/mpxj/ganttdesigner/GanttDesignerReader.class	GanttDesignerReader	[GanttDesignerReader::read]	net.sf.mpxj.ganttdesigner	net.sf.mpxj.ganttdesigner	"{""added"": [[51, ""import net.sf.mpxj.common.UnmarshalHelper;""], [81, ""         if (CONTEXT == null)""], [82, ""         {""], [83, ""            throw CONTEXT_EXCEPTION;""], [84, ""         }""], [85, """"], [98, ""         Gantt gantt = (Gantt) UnmarshalHelper.unmarshal(CONTEXT, stream);""]], ""deleted"": [[34, ""import javax.xml.bind.Unmarshaller;""], [36, ""import javax.xml.parsers.SAXParser;""], [37, ""import javax.xml.parsers.SAXParserFactory;""], [38, ""import javax.xml.transform.sax.SAXSource;""], [40, ""import org.xml.sax.InputSource;""], [42, ""import org.xml.sax.XMLReader;""], [98, ""         SAXParserFactory factory = SAXParserFactory.newInstance();""], [99, ""         SAXParser saxParser = factory.newSAXParser();""], [100, ""         XMLReader xmlReader = saxParser.getXMLReader();""], [101, ""         SAXSource doc = new SAXSource(xmlReader, new InputSource(stream));""], [102, """"], [103, ""         if (CONTEXT == null)""], [104, ""         {""], [105, ""            throw CONTEXT_EXCEPTION;""], [106, ""         }""], [107, """"], [108, ""         Unmarshaller unmarshaller = CONTEXT.createUnmarshaller();""], [109, """"], [110, ""         Gantt gantt = (Gantt) unmarshaller.unmarshal(doc);""]]}"	235
CVE-2020-25020	GHSA-wcp5-m52f-mhh5	net.sf.mpxj:mpxj	0	8.1.3	8.1.4	https://github.com/joniles/mpxj	0d830e8cbe5213968abb1bcb1c816ca2ee00aa53	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/jar/mpxj-8.1.3.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/jar/mpxj-8.1.4.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/java/src/main/java/net/sf/mpxj/ganttproject/GanttProjectReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/java/src/main/java/net/sf/mpxj/ganttproject/GanttProjectReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/class/src/main/java/net/sf/mpxj/ganttproject/GanttProjectReader.class	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/class/src/main/java/net/sf/mpxj/ganttproject/GanttProjectReader.class	GanttProjectReader	[GanttProjectReader::read]	net.sf.mpxj.ganttproject	net.sf.mpxj.ganttproject	"{""added"": [[73, ""import net.sf.mpxj.common.UnmarshalHelper;""], [116, ""         if (CONTEXT == null)""], [117, ""         {""], [118, ""            throw CONTEXT_EXCEPTION;""], [119, ""         }""], [120, """"], [140, ""         Project ganttProject = (Project) UnmarshalHelper.unmarshal(CONTEXT, stream);""]], ""deleted"": [[40, ""import javax.xml.bind.Unmarshaller;""], [42, ""import javax.xml.parsers.SAXParser;""], [43, ""import javax.xml.parsers.SAXParserFactory;""], [44, ""import javax.xml.transform.sax.SAXSource;""], [46, ""import org.xml.sax.InputSource;""], [48, ""import org.xml.sax.XMLReader;""], [140, ""         SAXParserFactory factory = SAXParserFactory.newInstance();""], [141, ""         SAXParser saxParser = factory.newSAXParser();""], [142, ""         XMLReader xmlReader = saxParser.getXMLReader();""], [143, ""         SAXSource doc = new SAXSource(xmlReader, new InputSource(stream));""], [144, """"], [145, ""         if (CONTEXT == null)""], [146, ""         {""], [147, ""            throw CONTEXT_EXCEPTION;""], [148, ""         }""], [149, """"], [150, ""         Unmarshaller unmarshaller = CONTEXT.createUnmarshaller();""], [151, """"], [152, ""         Project ganttProject = (Project) unmarshaller.unmarshal(doc);""]]}"	641
CVE-2020-25020	GHSA-wcp5-m52f-mhh5	net.sf.mpxj:mpxj	0	8.1.3	8.1.4	https://github.com/joniles/mpxj	0d830e8cbe5213968abb1bcb1c816ca2ee00aa53	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/jar/mpxj-8.1.3.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/jar/mpxj-8.1.4.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/java/src/main/java/net/sf/mpxj/mspdi/MSPDIReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/java/src/main/java/net/sf/mpxj/mspdi/MSPDIReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/class/src/main/java/net/sf/mpxj/mspdi/MSPDIReader.class	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/class/src/main/java/net/sf/mpxj/mspdi/MSPDIReader.class	MSPDIReader	[MSPDIReader::read]	net.sf.mpxj.mspdi	net.sf.mpxj.mspdi	"{""added"": [[99, ""import net.sf.mpxj.common.UnmarshalHelper;""], [173, ""         if (CONTEXT == null)""], [174, ""         {""], [175, ""            throw CONTEXT_EXCEPTION;""], [176, ""         }""], [177, """"], [196, ""         Project project = (Project) UnmarshalHelper.unmarshal(CONTEXT, new InputSource(new InputStreamReader(stream, getCharset())), new NamespaceFilter(), !m_compatibleInput);""]], ""deleted"": [[43, ""import javax.xml.bind.Unmarshaller;""], [44, ""import javax.xml.bind.UnmarshallerHandler;""], [45, ""import javax.xml.bind.ValidationEvent;""], [46, ""import javax.xml.bind.ValidationEventHandler;""], [48, ""import javax.xml.parsers.SAXParser;""], [49, ""import javax.xml.parsers.SAXParserFactory;""], [53, ""import org.xml.sax.XMLFilter;""], [54, ""import org.xml.sax.XMLReader;""], [196, ""         SAXParserFactory factory = SAXParserFactory.newInstance();""], [197, ""         factory.setFeature(\""http://apache.org/xml/features/disallow-doctype-decl\"", true);""], [198, ""         factory.setNamespaceAware(true);""], [199, ""         SAXParser saxParser = factory.newSAXParser();""], [200, ""         XMLReader xmlReader = saxParser.getXMLReader();""], [201, """"], [202, ""         if (CONTEXT == null)""], [203, ""         {""], [204, ""            throw CONTEXT_EXCEPTION;""], [205, ""         }""], [206, """"], [208, ""         Unmarshaller unmarshaller = CONTEXT.createUnmarshaller();""], [209, """"], [210, ""         //""], [211, ""         // If we are matching the behaviour of MS project, then we need to""], [212, ""         // ignore validation warnings.""], [213, ""         //""], [214, ""         if (m_compatibleInput == true)""], [215, ""         {""], [216, ""            unmarshaller.setEventHandler(new ValidationEventHandler()""], [217, ""            {""], [218, ""               @Override public boolean handleEvent(ValidationEvent event)""], [219, ""               {""], [220, ""                  return (true);""], [221, ""               }""], [222, ""            });""], [223, ""         }""], [225, ""         XMLFilter filter = new NamespaceFilter();""], [226, ""         filter.setParent(xmlReader);""], [227, ""         UnmarshallerHandler unmarshallerHandler = unmarshaller.getUnmarshallerHandler();""], [228, ""         filter.setContentHandler(unmarshallerHandler);""], [229, ""         filter.parse(new InputSource(new InputStreamReader(stream, getCharset())));""], [230, ""         Project project = (Project) unmarshallerHandler.getResult();""]]}"	1383
CVE-2020-25020	GHSA-wcp5-m52f-mhh5	net.sf.mpxj:mpxj	0	8.1.3	8.1.4	https://github.com/joniles/mpxj	0d830e8cbe5213968abb1bcb1c816ca2ee00aa53	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/jar/mpxj-8.1.3.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/jar/mpxj-8.1.4.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/java/src/main/java/net/sf/mpxj/phoenix/PhoenixReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/java/src/main/java/net/sf/mpxj/phoenix/PhoenixReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/class/src/main/java/net/sf/mpxj/phoenix/PhoenixReader.class	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/class/src/main/java/net/sf/mpxj/phoenix/PhoenixReader.class	PhoenixReader	[PhoenixReader::read]	net.sf.mpxj.phoenix	net.sf.mpxj.phoenix	"{""added"": [[65, ""import net.sf.mpxj.common.UnmarshalHelper;""], [110, ""         if (CONTEXT == null)""], [111, ""         {""], [112, ""            throw CONTEXT_EXCEPTION;""], [113, ""         }""], [114, """"], [137, ""         Project phoenixProject = (Project) UnmarshalHelper.unmarshal(CONTEXT, new SkipNulInputStream(stream));""]], ""deleted"": [[40, ""import javax.xml.bind.Unmarshaller;""], [42, ""import javax.xml.parsers.SAXParser;""], [43, ""import javax.xml.parsers.SAXParserFactory;""], [44, ""import javax.xml.transform.sax.SAXSource;""], [46, ""import org.xml.sax.InputSource;""], [48, ""import org.xml.sax.XMLReader;""], [137, ""         SAXParserFactory factory = SAXParserFactory.newInstance();""], [138, ""         SAXParser saxParser = factory.newSAXParser();""], [139, ""         XMLReader xmlReader = saxParser.getXMLReader();""], [140, ""         SAXSource doc = new SAXSource(xmlReader, new InputSource(new SkipNulInputStream(stream)));""], [141, """"], [142, ""         if (CONTEXT == null)""], [143, ""         {""], [144, ""            throw CONTEXT_EXCEPTION;""], [145, ""         }""], [146, """"], [147, ""         Unmarshaller unmarshaller = CONTEXT.createUnmarshaller();""], [148, """"], [149, ""         Project phoenixProject = (Project) unmarshaller.unmarshal(doc);""]]}"	612
CVE-2020-25020	GHSA-wcp5-m52f-mhh5	net.sf.mpxj:mpxj	0	8.1.3	8.1.4	https://github.com/joniles/mpxj	0d830e8cbe5213968abb1bcb1c816ca2ee00aa53	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/jar/mpxj-8.1.3.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/jar/mpxj-8.1.4.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/java/src/main/java/net/sf/mpxj/planner/PlannerReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/java/src/main/java/net/sf/mpxj/planner/PlannerReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/class/src/main/java/net/sf/mpxj/planner/PlannerReader.class	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/class/src/main/java/net/sf/mpxj/planner/PlannerReader.class	PlannerReader	[PlannerReader::read]	net.sf.mpxj.planner	net.sf.mpxj.planner	"{""added"": [[70, ""import net.sf.mpxj.common.UnmarshalHelper;""], [112, ""         if (CONTEXT == null)""], [113, ""         {""], [114, ""            throw CONTEXT_EXCEPTION;""], [115, ""         }""], [116, """"], [132, ""         Project plannerProject = (Project) UnmarshalHelper.unmarshal(CONTEXT, stream);""]], ""deleted"": [[42, ""import javax.xml.bind.Unmarshaller;""], [44, ""import javax.xml.parsers.SAXParser;""], [45, ""import javax.xml.parsers.SAXParserFactory;""], [46, ""import javax.xml.transform.sax.SAXSource;""], [48, ""import org.xml.sax.InputSource;""], [50, ""import org.xml.sax.XMLReader;""], [132, ""         SAXParserFactory factory = SAXParserFactory.newInstance();""], [133, ""         factory.setFeature(\""http://apache.org/xml/features/disallow-doctype-decl\"", true);""], [134, ""         factory.setNamespaceAware(true);""], [135, ""         SAXParser saxParser = factory.newSAXParser();""], [136, ""         XMLReader xmlReader = saxParser.getXMLReader();""], [137, ""         SAXSource doc = new SAXSource(xmlReader, new InputSource(stream));""], [138, """"], [139, ""         if (CONTEXT == null)""], [140, ""         {""], [141, ""            throw CONTEXT_EXCEPTION;""], [142, ""         }""], [143, """"], [144, ""         Unmarshaller unmarshaller = CONTEXT.createUnmarshaller();""], [145, """"], [146, ""         Project plannerProject = (Project) unmarshaller.unmarshal(doc);""]]}"	672
CVE-2020-25020	GHSA-wcp5-m52f-mhh5	net.sf.mpxj:mpxj	0	8.1.3	8.1.4	https://github.com/joniles/mpxj	0d830e8cbe5213968abb1bcb1c816ca2ee00aa53	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/jar/mpxj-8.1.3.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/jar/mpxj-8.1.4.jar	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/java/src/main/java/net/sf/mpxj/primavera/PrimaveraPMFileReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/java/src/main/java/net/sf/mpxj/primavera/PrimaveraPMFileReader.java	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/before/class/src/main/java/net/sf/mpxj/primavera/PrimaveraPMFileReader.class	proc/changes/CVE-2020-25020/0d830e8cbe5213968abb1bcb1c816ca2ee00aa53/after/class/src/main/java/net/sf/mpxj/primavera/PrimaveraPMFileReader.class	PrimaveraPMFileReader	[PrimaveraPMFileReader::processFile]	net.sf.mpxj.primavera	net.sf.mpxj.primavera	"{""added"": [[81, ""import net.sf.mpxj.common.UnmarshalHelper;""], [268, ""         return (APIBusinessObjects) UnmarshalHelper.unmarshal(CONTEXT, configureInputSource(stream), new NamespaceFilter(), false);""]], ""deleted"": [[42, ""import javax.xml.bind.Unmarshaller;""], [43, ""import javax.xml.bind.UnmarshallerHandler;""], [45, ""import javax.xml.parsers.SAXParser;""], [46, ""import javax.xml.parsers.SAXParserFactory;""], [51, ""import org.xml.sax.XMLFilter;""], [52, ""import org.xml.sax.XMLReader;""], [268, ""         SAXParserFactory factory = SAXParserFactory.newInstance();""], [269, ""         factory.setFeature(\""http://apache.org/xml/features/disallow-doctype-decl\"", true);""], [270, ""         factory.setNamespaceAware(true);""], [271, ""         SAXParser saxParser = factory.newSAXParser();""], [272, ""         XMLReader xmlReader = saxParser.getXMLReader();""], [273, """"], [279, ""         Unmarshaller unmarshaller = CONTEXT.createUnmarshaller();""], [280, ""         XMLFilter filter = new NamespaceFilter();""], [281, ""         filter.setParent(xmlReader);""], [282, ""         UnmarshallerHandler unmarshallerHandler = unmarshaller.getUnmarshallerHandler();""], [283, ""         filter.setContentHandler(unmarshallerHandler);""], [284, ""         filter.parse(configureInputSource(stream));""], [285, """"], [286, ""         return (APIBusinessObjects) unmarshallerHandler.getResult();""]]}"	1055
CVE-2021-21234	GHSA-p4q6-qxjx-8jgp	eu.hinsch:spring-boot-actuator-logview	0	0.2.12	0.2.13	https://github.com/lukashinsch/spring-boot-actuator-logview	760acbb939a8d1f7d1a7dfcd51ca848eea04e772	proc/changes/CVE-2021-21234/760acbb939a8d1f7d1a7dfcd51ca848eea04e772/before/jar/spring-boot-actuator-logview-0.2.12.jar	proc/changes/CVE-2021-21234/760acbb939a8d1f7d1a7dfcd51ca848eea04e772/after/jar/spring-boot-actuator-logview-0.2.13.jar	proc/changes/CVE-2021-21234/760acbb939a8d1f7d1a7dfcd51ca848eea04e772/before/java/lib/src/main/java/eu/hinsch/spring/boot/actuator/logview/LogViewEndpoint.java	proc/changes/CVE-2021-21234/760acbb939a8d1f7d1a7dfcd51ca848eea04e772/after/java/lib/src/main/java/eu/hinsch/spring/boot/actuator/logview/LogViewEndpoint.java	proc/changes/CVE-2021-21234/760acbb939a8d1f7d1a7dfcd51ca848eea04e772/before/class/lib/src/main/java/eu/hinsch/spring/boot/actuator/logview/LogViewEndpoint.class	proc/changes/CVE-2021-21234/760acbb939a8d1f7d1a7dfcd51ca848eea04e772/after/class/lib/src/main/java/eu/hinsch/spring/boot/actuator/logview/LogViewEndpoint.class	LogViewEndpoint	[LogViewEndpoint::securityCheck, LogViewEndpoint::view, LogViewEndpoint::list, LogViewEndpoint::securityCheck]	eu.hinsch.spring.boot.actuator.logview	eu.hinsch.spring.boot.actuator.logview	"{""added"": [[64, ""        securityCheck(currentFolder, null);""], [65, """"], [132, ""        securityCheck(path, filename);""], [133, ""        response.setContentType(MediaType.TEXT_PLAIN_VALUE);""], [174, ""    private void securityCheck(Path base, String filename) {""], [175, ""        try {""], [176, ""            String canonicalLoggingPath = (filename != null ? new File(base.toFile().toString(), filename) : new File(base.toFile().toString())).getCanonicalPath();""], [177, ""            String baseCanonicalPath = new File(loggingPath).getCanonicalPath();""], [178, ""            String errorMessage = \""File \"" + base.toString() + \""/\"" + filename + \"" may not be located outside base path \"" + loggingPath;""], [179, ""            Assert.isTrue(canonicalLoggingPath.startsWith(baseCanonicalPath), errorMessage);""], [180, ""        } catch (IOException e) {""], [181, ""            throw new IllegalStateException(e);""], [182, ""        }""]], ""deleted"": [[63, ""        securityCheck(base);""], [64, """"], [130, ""        securityCheck(filename);""], [131, ""        response.setContentType(MediaType.TEXT_PLAIN_VALUE);""], [174, ""    private void securityCheck(String filename) {""], [175, ""        Assert.doesNotContain(filename, \""..\"");""]]}"	169
CVE-2021-29425	GHSA-gwrp-pvrq-jmwv	commons-io:commons-io	0	2.6	2.7	https://github.com/apache/commons-io	2736b6fe0b3fa22ec8e2b4184897ecadb021fc78	proc/changes/CVE-2021-29425/2736b6fe0b3fa22ec8e2b4184897ecadb021fc78/before/jar/commons-io-2.6.jar	proc/changes/CVE-2021-29425/2736b6fe0b3fa22ec8e2b4184897ecadb021fc78/after/jar/commons-io-2.7.jar	proc/changes/CVE-2021-29425/2736b6fe0b3fa22ec8e2b4184897ecadb021fc78/before/java/src/main/java/org/apache/commons/io/FilenameUtils.java	proc/changes/CVE-2021-29425/2736b6fe0b3fa22ec8e2b4184897ecadb021fc78/after/java/src/main/java/org/apache/commons/io/FilenameUtils.java	proc/changes/CVE-2021-29425/2736b6fe0b3fa22ec8e2b4184897ecadb021fc78/before/class/src/main/java/org/apache/commons/io/FilenameUtils.class	proc/changes/CVE-2021-29425/2736b6fe0b3fa22ec8e2b4184897ecadb021fc78/after/class/src/main/java/org/apache/commons/io/FilenameUtils.class	FilenameUtils	[FilenameUtils::isIPv4Address, FilenameUtils::isValidHostName, FilenameUtils::getPrefixLength, FilenameUtils::isIPv6Address, FilenameUtils::isRFC3986HostName]	org.apache.commons.io	org.apache.commons.io	"{""added"": [[22, ""import java.util.Arrays;""], [24, ""import java.util.List;""], [26, ""import java.util.regex.Matcher;""], [27, ""import java.util.regex.Pattern;""], [683, ""            int pos = Math.min(posUnix, posWin) + 1;""], [684, ""            String hostnamePart = fileName.substring(2, pos - 1);""], [685, ""            return isValidHostName(hostnamePart) ? pos : NOT_FOUND;""], [1499, ""    /**""], [1500, ""     * Checks whether a given string is a valid host name according to""], [1501, ""     * RFC 3986.""], [1502, ""     *""], [1503, ""     * <p>Accepted are IP addresses (v4 and v6) as well as what the""], [1504, ""     * RFC calls a \""reg-name\"". Percent encoded names don't seem to be""], [1505, ""     * valid names in UNC paths.</p>""], [1506, ""     *""], [1507, ""     * @see \""https://tools.ietf.org/html/rfc3986#section-3.2.2\""""], [1508, ""     * @param name the hostname to validate""], [1509, ""     * @return true if the given name is a valid host name""], [1510, ""     */""], [1511, ""    private static boolean isValidHostName(String name) {""], [1512, ""        return isIPv4Address(name) || isIPv6Address(name) || isRFC3986HostName(name);""], [1513, ""    }""], [1514, """"], [1515, ""    private static final Pattern IPV4_PATTERN =""], [1516, ""        Pattern.compile(\""^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\"");""], [1517, ""    private static final int IPV4_MAX_OCTET_VALUE = 255;""], [1518, """"], [1519, ""    // mostly copied from org.apache.commons.validator.routines.InetAddressValidator#isValidInet4Address""], [1520, ""    private static boolean isIPv4Address(String name) {""], [1521, ""        Matcher m = IPV4_PATTERN.matcher(name);""], [1522, ""        if (!m.matches() || m.groupCount() != 4) {""], [1523, ""            return false;""], [1524, ""        }""], [1525, """"], [1526, ""        // verify that address subgroups are legal""], [1527, ""        for (int i = 1; i < 5; i++) {""], [1528, ""            String ipSegment = m.group(i);""], [1529, ""            if (ipSegment == null || ipSegment.length() == 0) {""], [1530, ""                return false;""], [1531, ""            }""], [1532, """"], [1533, ""            int iIpSegment = 0;""], [1534, """"], [1535, ""            try {""], [1536, ""                iIpSegment = Integer.parseInt(ipSegment);""], [1537, ""            } catch(NumberFormatException e) {""], [1538, ""                return false;""], [1539, ""            }""], [1540, """"], [1541, ""            if (iIpSegment > IPV4_MAX_OCTET_VALUE) {""], [1542, ""                return false;""], [1543, ""            }""], [1544, """"], [1545, ""            if (ipSegment.length() > 1 && ipSegment.startsWith(\""0\"")) {""], [1546, ""                return false;""], [1547, ""            }""], [1548, """"], [1549, ""        }""], [1550, """"], [1551, ""        return true;""], [1552, ""    }""], [1553, """"], [1554, ""    private static final int IPV6_MAX_HEX_GROUPS = 8;""], [1555, ""    private static final int IPV6_MAX_HEX_DIGITS_PER_GROUP = 4;""], [1556, ""    private static final int MAX_UNSIGNED_SHORT = 0xffff;""], [1557, ""    private static final int BASE_16 = 16;""], [1558, """"], [1559, ""    // copied from org.apache.commons.validator.routines.InetAddressValidator#isValidInet6Address""], [1560, ""    private static boolean isIPv6Address(String inet6Address) {""], [1561, ""        boolean containsCompressedZeroes = inet6Address.contains(\""::\"");""], [1562, ""        if (containsCompressedZeroes && (inet6Address.indexOf(\""::\"") != inet6Address.lastIndexOf(\""::\""))) {""], [1563, ""            return false;""], [1564, ""        }""], [1565, ""        if ((inet6Address.startsWith(\"":\"") && !inet6Address.startsWith(\""::\""))""], [1566, ""                || (inet6Address.endsWith(\"":\"") && !inet6Address.endsWith(\""::\""))) {""], [1567, ""            return false;""], [1568, ""        }""], [1569, ""        String[] octets = inet6Address.split(\"":\"");""], [1570, ""        if (containsCompressedZeroes) {""], [1571, ""            List<String> octetList = new ArrayList<String>(Arrays.asList(octets));""], [1572, ""            if (inet6Address.endsWith(\""::\"")) {""], [1573, ""                // String.split() drops ending empty segments""], [1574, ""                octetList.add(\""\"");""], [1575, ""            } else if (inet6Address.startsWith(\""::\"") && !octetList.isEmpty()) {""], [1576, ""                octetList.remove(0);""], [1577, ""            }""], [1578, ""            octets = octetList.toArray(new String[octetList.size()]);""], [1579, ""        }""], [1580, ""        if (octets.length > IPV6_MAX_HEX_GROUPS) {""], [1581, ""            return false;""], [1582, ""        }""], [1583, ""        int validOctets = 0;""], [1584, ""        int emptyOctets = 0; // consecutive empty chunks""], [1585, ""        for (int index = 0; index < octets.length; index++) {""], [1586, ""            String octet = octets[index];""], [1587, ""            if (octet.length() == 0) {""], [1588, ""                emptyOctets++;""], [1589, ""                if (emptyOctets > 1) {""], [1590, ""                    return false;""], [1591, ""                }""], [1592, ""            } else {""], [1593, ""                emptyOctets = 0;""], [1594, ""                // Is last chunk an IPv4 address?""], [1595, ""                if (index == octets.length - 1 && octet.contains(\"".\"")) {""], [1596, ""                    if (!isIPv4Address(octet)) {""], [1597, ""                        return false;""], [1598, ""                    }""], [1599, ""                    validOctets += 2;""], [1600, ""                    continue;""], [1601, ""                }""], [1602, ""                if (octet.length() > IPV6_MAX_HEX_DIGITS_PER_GROUP) {""], [1603, ""                    return false;""], [1604, ""                }""], [1605, ""                int octetInt = 0;""], [1606, ""                try {""], [1607, ""                    octetInt = Integer.parseInt(octet, BASE_16);""], [1608, ""                } catch (NumberFormatException e) {""], [1609, ""                    return false;""], [1610, ""                }""], [1611, ""                if (octetInt < 0 || octetInt > MAX_UNSIGNED_SHORT) {""], [1612, ""                    return false;""], [1613, ""                }""], [1614, ""            }""], [1615, ""            validOctets++;""], [1616, ""        }""], [1617, ""        if (validOctets > IPV6_MAX_HEX_GROUPS || (validOctets < IPV6_MAX_HEX_GROUPS && !containsCompressedZeroes)) {""], [1618, ""            return false;""], [1619, ""        }""], [1620, ""        return true;""], [1621, ""    }""], [1622, """"], [1623, ""    private static final Pattern REG_NAME_PART_PATTERN = Pattern.compile(\""^[a-zA-Z0-9][a-zA-Z0-9-]*$\"");""], [1624, """"], [1625, ""    private static boolean isRFC3986HostName(String name) {""], [1626, ""        String[] parts = name.split(\""\\\\.\"", -1);""], [1627, ""        for (int i = 0; i < parts.length; i++) {""], [1628, ""            if (parts[i].length() == 0) {""], [1629, ""                // trailing dot is legal, otherwise we've hit a .. sequence""], [1630, ""                return i == parts.length - 1;""], [1631, ""            }""], [1632, ""            if (!REG_NAME_PART_PATTERN.matcher(parts[i]).matches()) {""], [1633, ""                return false;""], [1634, ""            }""], [1635, ""        }""], [1636, ""        return true;""], [1637, ""    }""]], ""deleted"": [[679, ""            return Math.min(posUnix, posWin) + 1;""]]}"	659
CVE-2017-1000486	GHSA-j239-4gqg-5j54	org.primefaces:primefaces	5.0	5.3	6.0	https://github.com/primefaces/primefaces	26e44eb7962cbdb6aa2f47eca0f230f3274358f0	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/before/jar/primefaces-5.3.jar	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/after/jar/primefaces-6.0.jar	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/before/java/src/main/java/org/primefaces/application/resource/StreamedContentHandler.java	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/after/java/src/main/java/org/primefaces/application/resource/StreamedContentHandler.java	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/before/class/src/main/java/org/primefaces/application/resource/StreamedContentHandler.class	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/after/class/src/main/java/org/primefaces/application/resource/StreamedContentHandler.class	StreamedContentHandler	[StreamedContentHandler::handle]	org.primefaces.application.resource	org.primefaces.application.resource	"{""added"": [[21, ""import java.util.UUID;""], [51, ""                Map<String,Object> session = externalContext.getSessionMap();""], [52, ""                String sessionKey = strEn.decrypt(dynamicContentId);""], [53, ""                try {""], [54, ""                    UUID.fromString(sessionKey);""], [55, ""                } catch (IllegalArgumentException illegalArgumentException) {""], [56, ""                    session.remove(sessionKey);""], [57, ""                    throw new IOException(\""Not a valid key\"", illegalArgumentException);""], [58, ""                }""], [59, """"], [60, ""                String dynamicContentEL = (String) session.get(sessionKey);""], [61, ""                session.remove(sessionKey);""]], ""deleted"": [[49, ""                // see #6448""], [50, ""                dynamicContentId = dynamicContentId.replaceAll(\"" \"", \""+\"");""], [51, """"], [52, ""                String dynamicContentEL = strEn.decrypt(dynamicContentId);""]]}"	80
CVE-2017-1000486	GHSA-j239-4gqg-5j54	org.primefaces:primefaces	5.0	5.3	6.0	https://github.com/primefaces/primefaces	26e44eb7962cbdb6aa2f47eca0f230f3274358f0	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/before/jar/primefaces-5.3.jar	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/after/jar/primefaces-6.0.jar	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/before/java/src/main/java/org/primefaces/util/DynamicResourceBuilder.java	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/after/java/src/main/java/org/primefaces/util/DynamicResourceBuilder.java	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/before/class/src/main/java/org/primefaces/util/DynamicResourceBuilder.class	proc/changes/CVE-2017-1000486/26e44eb7962cbdb6aa2f47eca0f230f3274358f0/after/class/src/main/java/org/primefaces/util/DynamicResourceBuilder.class	DynamicResourceBuilder	[DynamicResourceBuilder::build]	org.primefaces.util	org.primefaces.util	"{""added"": [[53, ""            String sessionKey = UUID.randomUUID().toString();""], [54, ""            String rid = encrypter.encrypt(sessionKey);""], [55, ""            context.getExternalContext().getSessionMap().put(sessionKey, expression.getExpressionString());""], [56, """"]], ""deleted"": [[53, ""            String rid = encrypter.encrypt(expression.getExpressionString());""], [54, """"]]}"	60
CVE-2015-3271	GHSA-ccjp-w723-2jf2	org.apache.tika:tika-server	0	1.9	1.10	https://github.com/apache/tika	98672cdd92b6325ff78c763955a7c045b364095b	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/jar/tika-server-1.9.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/jar/tika-server-1.10.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/java/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/java/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/class/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.class	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/class/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.class	MetadataResource	[MetadataResource::getMetadata, MetadataResource::getMetadataField]	org.apache.tika.server.resource	org.apache.tika.server.resource	"{""added"": [[60, ""                parseMetadata(is, httpHeaders.getRequestHeaders(), info)).build();""], [96, ""            metadata = parseMetadata(is, httpHeaders.getRequestHeaders(), info);""]], ""deleted"": [[60, ""                parseMetadata(TikaUtils.getInputSteam(is, httpHeaders), httpHeaders.getRequestHeaders(), info)).build();""], [96, ""            metadata = parseMetadata(TikaUtils.getInputSteam(is, httpHeaders), httpHeaders.getRequestHeaders(), info);""]]}"	78
CVE-2015-3271	GHSA-ccjp-w723-2jf2	org.apache.tika:tika-server	0	1.9	1.10	https://github.com/apache/tika	98672cdd92b6325ff78c763955a7c045b364095b	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/jar/tika-server-1.9.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/jar/tika-server-1.10.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/java/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/java/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/class/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.class	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/class/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.class	RecursiveMetadataResource	[RecursiveMetadataResource::getMetadata]	org.apache.tika.server.resource	org.apache.tika.server.resource	"{""added"": [], ""deleted"": [[59, ""\t\tis = TikaUtils.getInputSteam(is, httpHeaders);""]]}"	60
CVE-2015-3271	GHSA-ccjp-w723-2jf2	org.apache.tika:tika-server	0	1.9	1.10	https://github.com/apache/tika	98672cdd92b6325ff78c763955a7c045b364095b	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/jar/tika-server-1.9.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/jar/tika-server-1.10.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/java/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/java/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/class/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.class	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/class/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.class	TikaResource	[TikaResource::getText]	org.apache.tika.server.resource	org.apache.tika.server.resource	"{""added"": [[337, ""    public StreamingOutput getText(final InputStream is, @Context HttpHeaders httpHeaders, @Context final UriInfo info) {""], [338, ""        return produceText(is, httpHeaders.getRequestHeaders(), info);""]], ""deleted"": [[337, ""    public StreamingOutput getText(final InputStream is, @Context HttpHeaders httpHeaders, @Context final UriInfo info) throws IOException {""], [338, ""        return produceText(TikaUtils.getInputSteam(is, httpHeaders), httpHeaders.getRequestHeaders(), info);""]]}"	345
CVE-2015-3271	GHSA-ccjp-w723-2jf2	org.apache.tika:tika-server	0	1.9	1.10	https://github.com/apache/tika	98672cdd92b6325ff78c763955a7c045b364095b	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/jar/tika-server-1.9.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/jar/tika-server-1.10.jar	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/java/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/java/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/before/class/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.class	proc/changes/CVE-2015-3271/98672cdd92b6325ff78c763955a7c045b364095b/after/class/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.class	UnpackerResource	[UnpackerResource::process]	org.apache.tika.server.resource	org.apache.tika.server.resource	"{""added"": [], ""deleted"": [[139, ""        is = TikaUtils.getInputSteam(is, httpHeaders);""]]}"	203
CVE-2018-12542	GHSA-h39x-m55c-v55h	io.vertx:vertx-web	3.0.0	3.5.3	3.5.4	https://github.com/vert-x3/vertx-web	57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b	proc/changes/CVE-2018-12542/57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b/before/jar/vertx-web-3.5.3.jar	proc/changes/CVE-2018-12542/57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b/after/jar/vertx-web-3.5.4.jar	proc/changes/CVE-2018-12542/57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b/before/java/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java	proc/changes/CVE-2018-12542/57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b/after/java/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java	proc/changes/CVE-2018-12542/57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b/before/class/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.class	proc/changes/CVE-2018-12542/57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b/after/class/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.class	StaticHandlerImpl	[StaticHandlerImpl::handle]	io.vertx.ext.web.handler.impl	io.vertx.ext.web.handler.impl	"{""added"": [[138, ""      // we are trying to match a URL path to a Filesystem path, so the first step""], [139, ""      // is to url decode the normalized path so avoid misinterpretations""], [140, ""      String path = Utils.urlDecode(context.normalisedPath(), false);""], [141, """"], [143, ""        // if the normalized path is null it cannot be resolved""], [149, ""      if (File.separatorChar != '/') {""], [150, ""        // although forward slashes are not path separators according to the rfc3986 if""], [151, ""        // used directly to access the filesystem on Windows, they would be treated as such""], [152, ""        // Instead of relying on the usual normalized method, all forward slashes must be""], [153, ""        // replaced by backslashes in this handler.""], [154, ""        path = path.replace(File.separatorChar, '/');""], [155, ""      }""], [156, ""      // clean the .. sequences according to rfc3986""], [157, ""      path = Utils.removeDots(path);""], [158, """"]], ""deleted"": [[138, ""      String path = Utils.removeDots(Utils.urlDecode(context.normalisedPath(), false));""], [139, ""      // if the normalized path is null it cannot be resolved""]]}"	585
CVE-2018-11761	GHSA-6jq2-789q-fff2	org.apache.tika:tika-core	0.1	1.19	1.19.1	https://github.com/apache/tika	4e67928412ad56333d400f3728ecdb59d07d9d63	proc/changes/CVE-2018-11761/4e67928412ad56333d400f3728ecdb59d07d9d63/before/jar/tika-core-1.19.jar	proc/changes/CVE-2018-11761/4e67928412ad56333d400f3728ecdb59d07d9d63/after/jar/tika-core-1.19.1.jar	proc/changes/CVE-2018-11761/4e67928412ad56333d400f3728ecdb59d07d9d63/before/java/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java	proc/changes/CVE-2018-11761/4e67928412ad56333d400f3728ecdb59d07d9d63/after/java/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.java	proc/changes/CVE-2018-11761/4e67928412ad56333d400f3728ecdb59d07d9d63/before/class/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.class	proc/changes/CVE-2018-11761/4e67928412ad56333d400f3728ecdb59d07d9d63/after/class/tika-core/src/main/java/org/apache/tika/utils/XMLReaderUtils.class	XMLReaderUtils	[XMLReaderUtils::trySetXercesSecurityManager, XMLReaderUtils::determineMaxEntityExpansions, XMLReaderUtils::trySetStaxSecurityManager, XMLReaderUtils::setMaxEntityExpansions, XMLReaderUtils::trySetXercesSecurityManager]	org.apache.tika.utils	org.apache.tika.utils	"{""added"": [[49, ""import java.util.Properties;""], [77, ""    private static final String JAXP_ENTITY_EXPANSION_LIMIT_KEY = \""jdk.xml.entityExpansionLimit\"";""], [78, ""    private static final int DEFAULT_MAX_ENTITY_EXPANSIONS = 20;""], [79, """"], [80, ""    private static int MAX_ENTITY_EXPANSIONS = determineMaxEntityExpansions();""], [81, """"], [82, ""    private static int determineMaxEntityExpansions() {""], [83, ""        Properties properties = System.getProperties();""], [84, ""        if (properties != null && properties.containsKey(JAXP_ENTITY_EXPANSION_LIMIT_KEY)) {""], [85, ""            try {""], [86, ""                return Integer.parseInt(properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY));""], [87, ""            } catch (NumberFormatException e) {""], [88, ""                LOG.log(Level.WARNING, \""Couldn't parse an integer for the entity expansion limit:\""+""], [89, ""                        properties.getProperty(JAXP_ENTITY_EXPANSION_LIMIT_KEY)+""], [90, ""                        \""; backing off to default: \""+DEFAULT_MAX_ENTITY_EXPANSIONS);""], [91, ""            }""], [92, ""        }""], [93, ""        return DEFAULT_MAX_ENTITY_EXPANSIONS;""], [94, ""    }""], [95, """"], [127, ""    /**""], [128, ""     * Set the maximum number of entity expansions allowable in SAX/DOM/StAX parsing.""], [129, ""     * <b>NOTE:</b>A value less than or equal to zero indicates no limit.""], [130, ""     * This will override the system property {@link #JAXP_ENTITY_EXPANSION_LIMIT_KEY}""], [131, ""     * and the {@link #DEFAULT_MAX_ENTITY_EXPANSIONS} value for pa""], [132, ""     *""], [133, ""     * @param maxEntityExpansions -- maximum number of allowable entity expansions""], [134, ""     * @since Apache Tika 1.19""], [135, ""     */""], [136, ""    public static void setMaxEntityExpansions(int maxEntityExpansions) {""], [137, ""        MAX_ENTITY_EXPANSIONS = maxEntityExpansions;""], [138, ""    }""], [139, """"], [553, ""                setLimit.invoke(mgr, MAX_ENTITY_EXPANSIONS);""], [570, ""            factory.setAttribute(\""http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\"", MAX_ENTITY_EXPANSIONS);""], [590, ""                setLimit.invoke(mgr, MAX_ENTITY_EXPANSIONS);""], [607, ""            parser.setProperty(\""http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\"", MAX_ENTITY_EXPANSIONS);""], [619, ""            inputFactory.setProperty(\""com.ctc.wstx.maxEntityCount\"", MAX_ENTITY_EXPANSIONS);""]], ""deleted"": [[520, ""                setLimit.invoke(mgr, 4096);""], [537, ""            factory.setAttribute(\""http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\"", 4096);""], [557, ""                setLimit.invoke(mgr, 4096);""], [574, ""            parser.setProperty(\""http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit\"", 4096);""], [586, ""            inputFactory.setProperty(\""com.ctc.wstx.maxEntityCount\"", 4096);""]]}"	369
CVE-2017-14063	GHSA-93jq-624g-4p9p	org.asynchttpclient:async-http-client	0	2.0.34	2.0.35	https://github.com/AsyncHttpClient/async-http-client	eb9e3347e45319be494db24d285a2aee4396f5d3	proc/changes/CVE-2017-14063/eb9e3347e45319be494db24d285a2aee4396f5d3/before/jar/async-http-client-2.0.34.jar	proc/changes/CVE-2017-14063/eb9e3347e45319be494db24d285a2aee4396f5d3/after/jar/async-http-client-2.0.35.jar	proc/changes/CVE-2017-14063/eb9e3347e45319be494db24d285a2aee4396f5d3/before/java/client/src/main/java/org/asynchttpclient/uri/UriParser.java	proc/changes/CVE-2017-14063/eb9e3347e45319be494db24d285a2aee4396f5d3/after/java/client/src/main/java/org/asynchttpclient/uri/UriParser.java	proc/changes/CVE-2017-14063/eb9e3347e45319be494db24d285a2aee4396f5d3/before/class/client/src/main/java/org/asynchttpclient/uri/UriParser.class	proc/changes/CVE-2017-14063/eb9e3347e45319be494db24d285a2aee4396f5d3/after/class/client/src/main/java/org/asynchttpclient/uri/UriParser.class	UriParser	[UriParser::computeIPV6, UriParser::trimFragment, UriParser::removeTailing2Dots, UriParser::computeUserInfo, UriParser::computeInitialScheme, UriParser::computeAuthority, UriParser::parseAuthority, UriParser::removeEmbedded2Dots, UriParser::overrideWithContext, UriParser::removeTrailingDot, UriParser::computeInitialScheme, UriParser::isFragmentOnly, UriParser::isFragmentOnly, UriParser::inheritContextQuery, UriParser::computeQuery, UriParser::trimLeft, UriParser::computeFragment, UriParser::parse, UriParser::splitUrlAndQuery, UriParser::findWithinCurrentRange, UriParser::overrideWithContext, UriParser::trimRight, UriParser::currentPositionStartsWith2Slashes, UriParser::isValidProtocolChars, UriParser::computePath, UriParser::trimRight, UriParser::computeRegularPath, UriParser::removeStartingDot, UriParser::trimLeft, UriParser::handleRelativePath, UriParser::currentPositionStartsWith4Slashes]	org.asynchttpclient.uri	org.asynchttpclient.uri	"{""added"": [[28, ""    private String originalUrl;""], [29, ""    private int start, end, currentIndex = 0;""], [31, ""    private void trimLeft() {""], [32, ""        while (start < end && originalUrl.charAt(start) <= ' ') {""], [34, ""        }""], [36, ""        if (originalUrl.regionMatches(true, start, \""url:\"", 0, 4)) {""], [38, ""        }""], [41, ""    private void trimRight() {""], [42, ""        end = originalUrl.length();""], [43, ""        while (end > 0 && originalUrl.charAt(end - 1) <= ' ') {""], [44, ""            end--;""], [45, ""        }""], [46, ""    }""], [47, """"], [48, ""    private boolean isFragmentOnly() {""], [58, ""            if (!isValidProtocolChar(protocol.charAt(i))) {""], [60, ""            }""], [69, ""    private void computeInitialScheme() {""], [70, ""        for (int i = currentIndex; i < end; i++) {""], [73, ""                String s = originalUrl.substring(currentIndex, i);""], [75, ""                    scheme = s.toLowerCase();""], [76, ""                    currentIndex = i + 1;""], [79, ""            } else if (c == '/') {""], [81, ""            }""], [85, ""    private boolean overrideWithContext(Uri context) {""], [89, ""        // use context only if schemes match""], [94, ""            if (isNonEmpty(contextPath) && contextPath.charAt(0) == '/') {""], [95, ""                scheme = null;""], [96, ""            }""], [110, ""    private int findWithinCurrentRange(char c) {""], [111, ""        int pos = originalUrl.indexOf(c, currentIndex);""], [112, ""        return pos > end ? -1 : pos;""], [113, ""    }""], [114, """"], [115, ""    private void trimFragment() {""], [116, ""        int charpPosition = findWithinCurrentRange('#');""], [124, ""        if (isRelative && currentIndex == end) {""], [129, ""    private boolean computeQuery() {""], [130, ""        if (currentIndex < end) {""], [131, ""            int askPosition = findWithinCurrentRange('?');""], [132, ""            if (askPosition != -1) {""], [134, ""                if (end > askPosition) {""], [136, ""                }""], [137, ""                return askPosition == currentIndex;""], [140, ""        return false;""], [144, ""        return originalUrl.regionMatches(currentIndex, \""////\"", 0, 4);""], [148, ""        return originalUrl.regionMatches(currentIndex, \""//\"", 0, 2);""], [152, ""        int authorityEndPosition = findWithinCurrentRange('/');""], [153, ""        if (authorityEndPosition == -1) {""], [154, ""            authorityEndPosition = findWithinCurrentRange('?');""], [155, ""            if (authorityEndPosition == -1) {""], [157, ""            }""], [159, ""        host = authority = originalUrl.substring(currentIndex, authorityEndPosition);""], [160, ""        currentIndex = authorityEndPosition;""], [168, ""        } else {""], [170, ""        }""], [192, ""                } else {""], [194, ""                }""], [199, ""        } else {""], [201, ""        }""], [233, ""            } else {""], [235, ""            }""], [242, ""            if (end >= 0) {""], [244, ""            } else {""], [246, ""            }""], [251, ""        if (path.startsWith(\""./\"") && path.length() > 2) {""], [253, ""        }""], [257, ""        if (path.endsWith(\""/.\"")) {""], [259, ""        }""], [264, ""        String pathEnd = originalUrl.substring(currentIndex, end);""], [266, ""        if (lastSlashPosition == -1) {""], [268, ""        } else {""], [270, ""        }""], [285, ""            currentIndex += 2;""], [291, ""                if (isMaybeIPV6()) {""], [293, ""                } else {""], [295, ""                }""], [298, ""            if (port < -1) {""], [300, ""            }""], [303, ""            if (isNonEmpty(authority)) {""], [305, ""            }""], [310, ""        if (originalUrl.charAt(currentIndex) == '/') {""], [311, ""            path = originalUrl.substring(currentIndex, end);""], [312, ""        } else if (isNonEmpty(path)) {""], [314, ""        } else {""], [315, ""            String pathEnd = originalUrl.substring(currentIndex, end);""], [328, ""        if (currentIndex < end) {""], [330, ""        } else if (queryOnly && path != null) {""], [332, ""        } else if (path == null) {""], [334, ""        }""], [340, ""        this.originalUrl = originalUrl;""], [341, ""        this.end = originalUrl.length();""], [342, """"], [343, ""        trimLeft();""], [344, ""        trimRight();""], [345, ""        currentIndex = start;""], [346, ""        if (!isFragmentOnly()) {""], [347, ""            computeInitialScheme();""], [348, ""        }""], [349, ""        boolean isRelative = overrideWithContext(context);""], [350, ""        trimFragment();""], [352, ""        boolean queryOnly = computeQuery();""]], ""deleted"": [[28, ""    private int start, end = 0;""], [29, ""    private String urlWithoutQuery;""], [31, ""    private void trimRight(String originalUrl) {""], [32, ""        end = originalUrl.length();""], [33, ""        while (end > 0 && originalUrl.charAt(end - 1) <= ' ')""], [34, ""            end--;""], [35, ""    }""], [36, """"], [37, ""    private void trimLeft(String originalUrl) {""], [38, ""        while (start < end && originalUrl.charAt(start) <= ' ')""], [41, ""        if (originalUrl.regionMatches(true, start, \""url:\"", 0, 4))""], [45, ""    private boolean isFragmentOnly(String originalUrl) {""], [55, ""            if (!isValidProtocolChar(protocol.charAt(i)))""], [65, ""    private void computeInitialScheme(String originalUrl) {""], [66, ""        for (int i = start; i < end; i++) {""], [69, ""                String s = originalUrl.substring(start, i);""], [71, ""                  scheme = s.toLowerCase();""], [72, ""                    start = i + 1;""], [75, ""            } else if (c == '/')""], [80, ""    private boolean overrideWithContext(Uri context, String originalUrl) {""], [84, ""        // only use context if the schemes match""], [89, ""            if (isNonEmpty(contextPath) && contextPath.charAt(0) == '/')""], [90, ""              scheme = null;""], [104, ""    private void computeFragment(String originalUrl) {""], [105, ""        int charpPosition = originalUrl.indexOf('#', start);""], [113, ""        if (isRelative && start == end) {""], [118, ""    private boolean splitUrlAndQuery(String originalUrl) {""], [119, ""        boolean queryOnly = false;""], [120, ""        urlWithoutQuery = originalUrl;""], [121, ""        if (start < end) {""], [122, ""            int askPosition = originalUrl.indexOf('?');""], [123, ""            queryOnly = askPosition == start;""], [124, ""            if (askPosition != -1 && askPosition < end) {""], [126, ""                if (end > askPosition)""], [128, ""                urlWithoutQuery = originalUrl.substring(0, askPosition);""], [131, """"], [132, ""        return queryOnly;""], [136, ""        return urlWithoutQuery.regionMatches(start, \""////\"", 0, 4);""], [140, ""        return urlWithoutQuery.regionMatches(start, \""//\"", 0, 2);""], [144, ""        int authorityEndPosition = urlWithoutQuery.indexOf('/', start);""], [145, ""        if (authorityEndPosition < 0) {""], [146, ""            authorityEndPosition = urlWithoutQuery.indexOf('?', start);""], [147, ""            if (authorityEndPosition < 0)""], [150, ""        host = authority = urlWithoutQuery.substring(start, authorityEndPosition);""], [151, ""        start = authorityEndPosition;""], [159, ""        } else""], [182, ""                } else""], [188, ""        } else""], [221, ""            } else""], [229, ""            if (end >= 0)""], [231, ""            else""], [237, ""        if (path.startsWith(\""./\"") && path.length() > 2)""], [242, ""        if (path.endsWith(\""/.\""))""], [248, ""        String pathEnd = urlWithoutQuery.substring(start, end);""], [250, ""        if (lastSlashPosition == -1)""], [252, ""        else""], [268, ""            start += 2;""], [274, ""                if (isMaybeIPV6())""], [276, ""                else""], [280, ""            if (port < -1)""], [284, ""            if (isNonEmpty(authority))""], [290, ""        if (urlWithoutQuery.charAt(start) == '/')""], [291, ""            path = urlWithoutQuery.substring(start, end);""], [292, """"], [293, ""        else if (isNonEmpty(path))""], [295, """"], [296, ""        else {""], [297, ""            String pathEnd = urlWithoutQuery.substring(start, end);""], [310, ""        if (start < end)""], [312, ""        else if (queryOnly && path != null)""], [314, ""        else if (path == null)""], [321, """"], [322, ""        boolean isRelative = false;""], [323, """"], [324, ""        trimRight(originalUrl);""], [325, ""        trimLeft(originalUrl);""], [326, ""        if (!isFragmentOnly(originalUrl))""], [327, ""            computeInitialScheme(originalUrl);""], [328, ""        overrideWithContext(context, originalUrl);""], [329, ""        computeFragment(originalUrl);""], [331, """"], [332, ""        boolean queryOnly = splitUrlAndQuery(originalUrl);""]]}"	282
CVE-2016-10006	GHSA-683w-6h9j-57wq	org.owasp.antisamy:antisamy	0	1.5.3	1.5.5	https://github.com/nahsra/antisamy	7313931dc3c0d1377b010f07faef2063dd359a36	proc/changes/CVE-2016-10006/7313931dc3c0d1377b010f07faef2063dd359a36/before/jar/antisamy-1.5.3.jar	proc/changes/CVE-2016-10006/7313931dc3c0d1377b010f07faef2063dd359a36/after/jar/antisamy-1.5.5.jar	proc/changes/CVE-2016-10006/7313931dc3c0d1377b010f07faef2063dd359a36/before/java/src/main/java/org/owasp/validator/html/scan/MagicSAXFilter.java	proc/changes/CVE-2016-10006/7313931dc3c0d1377b010f07faef2063dd359a36/after/java/src/main/java/org/owasp/validator/html/scan/MagicSAXFilter.java	proc/changes/CVE-2016-10006/7313931dc3c0d1377b010f07faef2063dd359a36/before/class/src/main/java/org/owasp/validator/html/scan/MagicSAXFilter.class	proc/changes/CVE-2016-10006/7313931dc3c0d1377b010f07faef2063dd359a36/after/class/src/main/java/org/owasp/validator/html/scan/MagicSAXFilter.class	MagicSAXFilter	[MagicSAXFilter::startElement]	org.owasp.validator.html.scan	org.owasp.validator.html.scan	"{""added"": [[350, ""\t\t\t\t} else if (isStyle) {""], [351, ""\t\t\t\t\tthis.operations.push(Ops.CSS);""], [352, ""\t\t\t\t\tcssContent = new StringBuffer();""], [353, ""\t\t\t\t\tcssAttributes = validattributes;""], [370, """"]], ""deleted"": [[274, ""\t\t\tif (isStyle) {""], [275, ""\t\t\t\tthis.operations.push(Ops.CSS);""], [276, ""\t\t\t\tcssContent = new StringBuffer();""], [277, ""\t\t\t\tcssAttributes = attributes;""], [278, ""\t\t\t} else {""], [371, ""\t\t\t}""]]}"	271
CVE-2017-7672	GHSA-9gp7-jvm2-r4mx	org.apache.struts:struts2-core	2.5.0	2.5.10.1	2.5.12	https://github.com/apache/struts	931df54ab379bf4eb5a625bf05066b8563c3737b	proc/changes/CVE-2017-7672/931df54ab379bf4eb5a625bf05066b8563c3737b/before/jar/struts2-core-2.5.10.1.jar	proc/changes/CVE-2017-7672/931df54ab379bf4eb5a625bf05066b8563c3737b/after/jar/struts2-core-2.5.12.jar	proc/changes/CVE-2017-7672/931df54ab379bf4eb5a625bf05066b8563c3737b/before/java/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java	proc/changes/CVE-2017-7672/931df54ab379bf4eb5a625bf05066b8563c3737b/after/java/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java	proc/changes/CVE-2017-7672/931df54ab379bf4eb5a625bf05066b8563c3737b/before/class/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.class	proc/changes/CVE-2017-7672/931df54ab379bf4eb5a625bf05066b8563c3737b/after/class/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.class	URLValidator	[URLValidator::setUrlRegex, URLValidator::validate, URLValidator::getUrlPattern, URLValidator::getUrlRegex]	com.opensymphony.xwork2.validator.validators	com.opensymphony.xwork2.validator.validators	"{""added"": [[20, ""import org.apache.logging.log4j.LogManager;""], [21, ""import org.apache.logging.log4j.Logger;""], [47, ""    private static final Logger LOG = LogManager.getLogger(URLValidator.class);""], [48, """"], [49, ""    public static final String DEFAULT_URL_REGEX = \""^(https?|ftp):\\\\/\\\\/\"" +""], [50, ""            \""(([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;\\\\?&=-]|%[0-9a-f]{2})+\"" +""], [51, ""            \""(:([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;\\\\?&=-]|%[0-9a-f]{2})+)?\"" +""], [52, ""            \""@)?(#?\"" +""], [53, ""            \"")((([a-z0-9]\\\\.|[a-z0-9][a-z0-9-]*[a-z0-9]\\\\.)*\"" +""], [54, ""            \""[a-z][a-z0-9-]*[a-z0-9]\"" +""], [55, ""            \""|((\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\\\\.){3}\"" +""], [56, ""            \""(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\"" +""], [57, ""            \"")(:\\\\d+)?\"" +""], [58, ""            \"")(((\\\\/{0,1}([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)*\"" +""], [59, ""            \""(\\\\?([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)\"" +""], [60, ""            \""?)?)?\"" +""], [61, ""            \""(#([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)?\"" +""], [62, ""            \""$\"";""], [63, """"], [65, ""    private Pattern urlPattern = Pattern.compile(DEFAULT_URL_REGEX, Pattern.CASE_INSENSITIVE);""], [77, ""        String stringValue = String.valueOf(value).trim();""], [78, """"], [79, ""        if (!(value.getClass().equals(String.class)) || !getUrlPattern().matcher(stringValue).matches()) {""], [84, ""    protected Pattern getUrlPattern() {""], [85, ""        if (StringUtils.isNotEmpty(urlRegexExpression)) {""], [86, ""            String regex = (String) parse(urlRegexExpression, String.class);""], [87, ""            if (regex == null) {""], [88, ""                LOG.warn(\""Provided URL Regex expression [{}] was evaluated to null! Falling back to default!\"", urlRegexExpression);""], [89, ""                urlPattern = Pattern.compile(DEFAULT_URL_REGEX, Pattern.CASE_INSENSITIVE);""], [90, ""            } else {""], [91, ""                urlPattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);""], [92, ""            }""], [93, ""        }""], [94, ""        return urlPattern;""], [95, ""    }""], [96, """"], [104, ""        return getUrlPattern().pattern();""], [108, ""        urlPattern = Pattern.compile(urlRegex, Pattern.CASE_INSENSITIVE);""]], ""deleted"": [[45, ""    private String urlRegex;""], [58, ""        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value).trim()).matches()) {""], [70, ""        if (StringUtils.isNotEmpty(urlRegexExpression)) {""], [71, ""            return (String) parse(urlRegexExpression, String.class);""], [72, ""        } else if (StringUtils.isNotEmpty(urlRegex)) {""], [73, ""            return urlRegex;""], [74, ""        } else {""], [75, ""            return \""^(https?|ftp):\\\\/\\\\/\"" +""], [76, ""                    \""(([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;\\\\?&=-]|%[0-9a-f]{2})+\"" +""], [77, ""                    \""(:([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;\\\\?&=-]|%[0-9a-f]{2})+)?\"" +""], [78, ""                    \""@)?(#?\"" +""], [79, ""                    \"")((([a-z0-9]\\\\.|[a-z0-9][a-z0-9-]*[a-z0-9]\\\\.)*\"" +""], [80, ""                    \""[a-z][a-z0-9-]*[a-z0-9]\"" +""], [81, ""                    \""|((\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\\\\.){3}\"" +""], [82, ""                    \""(\\\\d|[1-9]\\\\d|1\\\\d{2}|2[0-4][0-9]|25[0-5])\"" +""], [83, ""                    \"")(:\\\\d+)?\"" +""], [84, ""                    \"")(((\\\\/{0,1}([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)*\"" +""], [85, ""                    \""(\\\\?([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)\"" +""], [86, ""                    \""?)?)?\"" +""], [87, ""                    \""(#([a-z0-9$_\\\\.\\\\+!\\\\*\\\\'\\\\(\\\\),;:@&=-]|%[0-9a-f]{2})*)?\"" +""], [88, ""                    \""$\"";""], [89, ""        }""], [93, ""        this.urlRegex = urlRegex;""]]}"	57
CVE-2018-11775	GHSA-m9w8-v359-9ffr	org.apache.activemq:activemq-client	0	5.15.5	5.15.6	https://github.com/apache/activemq	bde7097fb8173cf871827df7811b3865679b963d	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/jar/activemq-client-5.15.5.jar	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/jar/activemq-client-5.15.6.jar	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/java/activemq-client/src/main/java/org/apache/activemq/transport/nio/NIOSSLTransport.java	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/java/activemq-client/src/main/java/org/apache/activemq/transport/nio/NIOSSLTransport.java	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/class/activemq-client/src/main/java/org/apache/activemq/transport/nio/NIOSSLTransport.class	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/class/activemq-client/src/main/java/org/apache/activemq/transport/nio/NIOSSLTransport.class	NIOSSLTransport	[NIOSSLTransport::isVerifyHostName, NIOSSLTransport::initializeStreams, NIOSSLTransport::setVerifyHostName]	org.apache.activemq.transport.nio	org.apache.activemq.transport.nio	"{""added"": [[39, ""import javax.net.ssl.SSLParameters;""], [60, ""    protected boolean verifyHostName = true;""], [124, ""                if (verifyHostName) {""], [125, ""                    SSLParameters sslParams = new SSLParameters();""], [126, ""                    sslParams.setEndpointIdentificationAlgorithm(\""HTTPS\"");""], [127, ""                    sslEngine.setSSLParameters(sslParams);""], [128, ""                }""], [129, """"], [554, """"], [555, ""    public boolean isVerifyHostName() {""], [556, ""        return verifyHostName;""], [557, ""    }""], [558, """"], [559, ""    public void setVerifyHostName(boolean verifyHostName) {""], [560, ""        this.verifyHostName = verifyHostName;""], [561, ""    }""]], ""deleted"": []}"	420
CVE-2018-11775	GHSA-m9w8-v359-9ffr	org.apache.activemq:activemq-client	0	5.15.5	5.15.6	https://github.com/apache/activemq	bde7097fb8173cf871827df7811b3865679b963d	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/jar/activemq-client-5.15.5.jar	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/jar/activemq-client-5.15.6.jar	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/java/activemq-client/src/main/java/org/apache/activemq/transport/tcp/SslTransport.java	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/java/activemq-client/src/main/java/org/apache/activemq/transport/tcp/SslTransport.java	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/class/activemq-client/src/main/java/org/apache/activemq/transport/tcp/SslTransport.class	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/class/activemq-client/src/main/java/org/apache/activemq/transport/tcp/SslTransport.class	SslTransport	[SslTransport::initialiseSocket, SslTransport::setVerifyHostName]	org.apache.activemq.transport.tcp	org.apache.activemq.transport.tcp	"{""added"": [[20, ""import java.net.Socket;""], [21, ""import java.net.SocketException;""], [27, ""import javax.net.ssl.SSLParameters;""], [49, ""    private Boolean verifyHostName = null;""], [50, """"], [81, ""    @Override""], [82, ""    protected void initialiseSocket(Socket sock) throws SocketException, IllegalArgumentException {""], [83, ""        //This needs to default to null because this transport class is used for both a server transport""], [84, ""        //and a client connection and if we default it to a value it might override the transport server setting""], [85, ""        //that was configured inside TcpTransportServer""], [86, """"], [87, ""        //The idea here is that if this is a server transport then verifyHostName will be set by the setter""], [88, ""        //below and not be null (if using transport.verifyHostName) but if a client uses socket.verifyHostName""], [89, ""        //then it will be null and we can check socketOptions""], [90, """"], [91, ""        //Unfortunately we have to do this to stay consistent because every other SSL option on the client""], [92, ""        //side is configured using socket. but this particular option isn't actually part of the socket""], [93, ""        //so it makes it tricky""], [94, ""        if (verifyHostName == null) {""], [95, ""            if (socketOptions != null && socketOptions.containsKey(\""verifyHostName\"")) {""], [96, ""                verifyHostName = Boolean.parseBoolean(socketOptions.get(\""verifyHostName\"").toString());""], [97, ""                socketOptions.remove(\""verifyHostName\"");""], [98, ""            } else {""], [99, ""                verifyHostName = true;""], [100, ""            }""], [101, ""        }""], [102, """"], [103, ""        if (verifyHostName) {""], [104, ""            SSLParameters sslParams = new SSLParameters();""], [105, ""            sslParams.setEndpointIdentificationAlgorithm(\""HTTPS\"");""], [106, ""            ((SSLSocket)this.socket).setSSLParameters(sslParams);""], [107, ""        }""], [108, """"], [109, ""        super.initialiseSocket(sock);""], [110, ""    }""], [111, """"], [147, ""    public void setVerifyHostName(Boolean verifyHostName) {""], [148, ""        this.verifyHostName = verifyHostName;""], [149, ""    }""], [150, """"]], ""deleted"": []}"	80
CVE-2018-11775	GHSA-m9w8-v359-9ffr	org.apache.activemq:activemq-client	0	5.15.5	5.15.6	https://github.com/apache/activemq	bde7097fb8173cf871827df7811b3865679b963d	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/jar/activemq-client-5.15.5.jar	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/jar/activemq-client-5.15.6.jar	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/java/activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/java/activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/before/class/activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.class	proc/changes/CVE-2018-11775/bde7097fb8173cf871827df7811b3865679b963d/after/class/activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.class	TcpTransportServer	[TcpTransportServer::configureServerSocket]	org.apache.activemq.transport.tcp	org.apache.activemq.transport.tcp	"{""added"": [[43, ""import javax.net.ssl.SSLParameters;""], [83, ""    protected boolean verifyHostName = true;""], [177, ""                if (transportOptions.containsKey(\""verifyHostName\"")) {""], [178, ""                    verifyHostName = Boolean.parseBoolean(transportOptions.get(\""verifyHostName\"").toString());""], [179, ""                }""], [180, """"], [181, ""                if (verifyHostName) {""], [182, ""                    SSLParameters sslParams = new SSLParameters();""], [183, ""                    sslParams.setEndpointIdentificationAlgorithm(\""HTTPS\"");""], [184, ""                    ((SSLServerSocket)this.serverSocket).setSSLParameters(sslParams);""], [185, ""                }""], [186, """"], [195, """"]], ""deleted"": []}"	507
CVE-2018-11771	GHSA-hrmr-f5m6-m9pq	org.apache.commons:commons-compress	0	1.17	1.18	https://github.com/apache/commons-compress	a41ce6892cb0590b2e658704434ac0dbcb6834c8	proc/changes/CVE-2018-11771/a41ce6892cb0590b2e658704434ac0dbcb6834c8/before/jar/commons-compress-1.17.jar	proc/changes/CVE-2018-11771/a41ce6892cb0590b2e658704434ac0dbcb6834c8/after/jar/commons-compress-1.18.jar	proc/changes/CVE-2018-11771/a41ce6892cb0590b2e658704434ac0dbcb6834c8/before/java/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	proc/changes/CVE-2018-11771/a41ce6892cb0590b2e658704434ac0dbcb6834c8/after/java/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java	proc/changes/CVE-2018-11771/a41ce6892cb0590b2e658704434ac0dbcb6834c8/before/class/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.class	proc/changes/CVE-2018-11771/a41ce6892cb0590b2e658704434ac0dbcb6834c8/after/class/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.class	ZipArchiveInputStream	[ZipArchiveInputStream::readStored]	org.apache.commons.compress.archivers.zip	org.apache.commons.compress.archivers.zip	"{""added"": [[528, ""                buf.limit(0);""], [529, ""                throw new IOException(\""Truncated ZIP file\"");""]], ""deleted"": [[528, ""                return -1;""]]}"	726
CVE-2018-12541	GHSA-45xm-v8gq-7jqx	io.vertx:vertx-core	3.0.0	3.5.3	3.5.4	https://github.com/eclipse-vertx/vert.x	269a583330695d1418a4f5578f7169350b2e1332	proc/changes/CVE-2018-12541/269a583330695d1418a4f5578f7169350b2e1332/before/jar/vertx-core-3.5.3.jar	proc/changes/CVE-2018-12541/269a583330695d1418a4f5578f7169350b2e1332/after/jar/vertx-core-3.5.4.jar	proc/changes/CVE-2018-12541/269a583330695d1418a4f5578f7169350b2e1332/before/java/src/main/java/io/vertx/core/http/impl/HttpServerImpl.java	proc/changes/CVE-2018-12541/269a583330695d1418a4f5578f7169350b2e1332/after/java/src/main/java/io/vertx/core/http/impl/HttpServerImpl.java	proc/changes/CVE-2018-12541/269a583330695d1418a4f5578f7169350b2e1332/before/class/src/main/java/io/vertx/core/http/impl/HttpServerImpl$ServerHandlerWithWebSockets.class	proc/changes/CVE-2018-12541/269a583330695d1418a4f5578f7169350b2e1332/after/class/src/main/java/io/vertx/core/http/impl/HttpServerImpl$ServerHandlerWithWebSockets.class	HttpServerImpl$ServerHandlerWithWebSockets	[HttpServerImpl::ServerHandlerWithWebSockets::handleMessage]	io.vertx.core.http.impl	io.vertx.core.http.impl	"{""added"": [[697, ""          ByteBuf content = wsRequest.content();""], [698, ""          boolean overflow = content.readableBytes() > 8192;""], [699, ""          content.writeBytes(((HttpContent) msg).content());""], [700, ""          if (content.readableBytes() > 8192) {""], [701, ""            if (!overflow) {""], [702, ""              FullHttpResponse resp = new DefaultFullHttpResponse(""], [703, ""                io.netty.handler.codec.http.HttpVersion.HTTP_1_1,""], [704, ""                HttpResponseStatus.REQUEST_ENTITY_TOO_LARGE""], [705, ""              );""], [706, ""              chctx.writeAndFlush(resp);""], [707, ""              chctx.close();""], [708, ""            }""], [709, ""            if (msg instanceof LastHttpContent) {""], [710, ""              wsRequest = null;""], [711, ""              return;""], [712, ""            }""], [713, ""          }""]], ""deleted"": [[697, ""          wsRequest.content().writeBytes(((HttpContent) msg).content());""]]}"	876
CVE-2016-3720	GHSA-hmq6-frv3-4727	com.fasterxml.jackson.dataformat:jackson-dataformat-xml	0	2.7.3	2.7.4	https://github.com/FasterXML/jackson-dataformat-xml	f0f19a4c924d9db9a1e2830434061c8640092cc0	proc/changes/CVE-2016-3720/f0f19a4c924d9db9a1e2830434061c8640092cc0/before/jar/jackson-dataformat-xml-2.7.3.jar	proc/changes/CVE-2016-3720/f0f19a4c924d9db9a1e2830434061c8640092cc0/after/jar/jackson-dataformat-xml-2.7.4.jar	proc/changes/CVE-2016-3720/f0f19a4c924d9db9a1e2830434061c8640092cc0/before/java/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java	proc/changes/CVE-2016-3720/f0f19a4c924d9db9a1e2830434061c8640092cc0/after/java/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java	proc/changes/CVE-2016-3720/f0f19a4c924d9db9a1e2830434061c8640092cc0/before/class/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.class	proc/changes/CVE-2016-3720/f0f19a4c924d9db9a1e2830434061c8640092cc0/after/class/src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.class	XmlFactory	[XmlFactory::XmlFactory]	com.fasterxml.jackson.dataformat.xml	com.fasterxml.jackson.dataformat.xml	"{""added"": [[114, ""            // as per [dataformat-xml#190], disable external entity expansion by default""], [115, ""            xmlIn.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, Boolean.FALSE);""]], ""deleted"": []}"	486
CVE-2018-12418	GHSA-5xqr-grq4-qwgx	com.github.junrar:junrar	0	1.0.0	1.0.1	https://github.com/junrar/junrar	ad8d0ba8e155630da8a1215cee3f253e0af45817	proc/changes/CVE-2018-12418/ad8d0ba8e155630da8a1215cee3f253e0af45817/before/jar/junrar-1.0.0.jar	proc/changes/CVE-2018-12418/ad8d0ba8e155630da8a1215cee3f253e0af45817/after/jar/junrar-1.0.1.jar	proc/changes/CVE-2018-12418/ad8d0ba8e155630da8a1215cee3f253e0af45817/before/java/src/main/java/com/github/junrar/Archive.java	proc/changes/CVE-2018-12418/ad8d0ba8e155630da8a1215cee3f253e0af45817/after/java/src/main/java/com/github/junrar/Archive.java	proc/changes/CVE-2018-12418/ad8d0ba8e155630da8a1215cee3f253e0af45817/before/class/src/main/java/com/github/junrar/Archive.class	proc/changes/CVE-2018-12418/ad8d0ba8e155630da8a1215cee3f253e0af45817/after/class/src/main/java/com/github/junrar/Archive.class	Archive	[Archive::readHeaders, Archive::safelyAllocate]	com.github.junrar	com.github.junrar	"{""added"": [[29, ""import java.util.HashSet;""], [31, ""import java.util.Set;""], [67, ""\tprivate static int MAX_HEADER_SIZE = 20971520;//20MB""], [68, """"], [236, ""\t\t//keep track of positions already processed for""], [237, ""\t\t//more robustness against corrupt files""], [238, ""\t\tSet<Long> processedPositions = new HashSet<Long>();""], [242, ""\t\t\tbyte[] baseBlockBuffer = safelyAllocate(BaseBlock.BaseBlockSize, MAX_HEADER_SIZE);""], [275, ""\t\t\t\tbyte[] mainbuff = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [289, ""\t\t\t\tbyte[] signBuff = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [299, ""\t\t\t\tbyte[] avBuff = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [308, ""\t\t\t\tbyte[] commBuff = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [316, ""\t\t\t\tif (processedPositions.contains(newpos)) {""], [317, ""\t\t\t\t\tthrow new RarException(RarExceptionType.badRarArchive);""], [318, ""\t\t\t\t}""], [319, ""\t\t\t\tprocessedPositions.add(newpos);""], [334, ""\t\t\t\t\tbyte[] endArchBuff = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [348, ""\t\t\t\tbyte[] blockHeaderBuffer = safelyAllocate(BlockHeader.blockHeaderSize, MAX_HEADER_SIZE);""], [359, ""\t\t\t\t\tbyte[] fileHeaderBuffer = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [366, ""\t\t\t\t\tif (processedPositions.contains(newpos)) {""], [367, ""\t\t\t\t\t\tthrow new RarException(RarExceptionType.badRarArchive);""], [368, ""\t\t\t\t\t}""], [369, ""\t\t\t\t\tprocessedPositions.add(newpos);""], [377, ""\t\t\t\t\tbyte[] protectHeaderBuffer = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [383, ""\t\t\t\t\tif (processedPositions.contains(newpos)) {""], [384, ""\t\t\t\t\t\tthrow new RarException(RarExceptionType.badRarArchive);""], [385, ""\t\t\t\t\t}""], [386, ""\t\t\t\t\tprocessedPositions.add(newpos);""], [391, ""\t\t\t\t\tbyte[] subHeadbuffer = safelyAllocate(SubBlockHeader.SubBlockHeaderSize, MAX_HEADER_SIZE);""], [399, ""\t\t\t\t\t\tbyte[] macHeaderbuffer = safelyAllocate(MacInfoHeader.MacInfoHeaderSize, MAX_HEADER_SIZE);""], [413, ""\t\t\t\t\t\tbyte[] eaHeaderBuffer = safelyAllocate(EAHeader.EAHeaderSize, MAX_HEADER_SIZE);""], [431, ""\t\t\t\t\t\tbyte[] uoHeaderBuffer = safelyAllocate(toRead, MAX_HEADER_SIZE);""], [454, ""\tprivate static byte[] safelyAllocate(long len, int maxSize) throws RarException {""], [455, ""\t\tif (maxSize < 0) {""], [456, ""\t\t\tthrow new IllegalArgumentException(\""maxsize must be >= 0\"");""], [457, ""\t\t}""], [458, ""\t\tif (len < 0 || len > (long)maxSize) {""], [459, ""\t\t\tthrow new RarException(RarExceptionType.badRarArchive);""], [460, ""\t\t}""], [461, ""\t\treturn new byte[(int)len];""], [462, ""\t}""], [463, """"]], ""deleted"": [[232, """"], [236, ""\t\t\tbyte[] baseBlockBuffer = new byte[BaseBlock.BaseBlockSize];""], [269, ""\t\t\t\tbyte[] mainbuff = new byte[toRead];""], [283, ""\t\t\t\tbyte[] signBuff = new byte[toRead];""], [293, ""\t\t\t\tbyte[] avBuff = new byte[toRead];""], [302, ""\t\t\t\tbyte[] commBuff = new byte[toRead];""], [324, ""\t\t\t\t\tbyte[] endArchBuff = new byte[toRead];""], [338, ""\t\t\t\tbyte[] blockHeaderBuffer = new byte[BlockHeader.blockHeaderSize];""], [349, ""\t\t\t\t\tbyte[] fileHeaderBuffer = new byte[toRead];""], [363, ""\t\t\t\t\tbyte[] protectHeaderBuffer = new byte[toRead];""], [367, """"], [374, ""\t\t\t\t\tbyte[] subHeadbuffer = new byte[SubBlockHeader.SubBlockHeaderSize];""], [382, ""\t\t\t\t\t\tbyte[] macHeaderbuffer = new byte[MacInfoHeader.MacInfoHeaderSize];""], [396, ""\t\t\t\t\t\tbyte[] eaHeaderBuffer = new byte[EAHeader.EAHeaderSize];""], [414, ""\t\t\t\t\t\tbyte[] uoHeaderBuffer = new byte[toRead];""]]}"	420
CVE-2017-1000498	GHSA-g556-x5vx-qh59	com.caverock:androidsvg	0	1.2.2-beta-1	1.3	https://github.com/BigBadaboom/androidsvg	44e4fbf1d0f6db295df34601972741d4cf706cbd	proc/changes/CVE-2017-1000498/44e4fbf1d0f6db295df34601972741d4cf706cbd/before/jar/androidsvg-1.2.2-beta-1.jar	proc/changes/CVE-2017-1000498/44e4fbf1d0f6db295df34601972741d4cf706cbd/after/jar/androidsvg-1.3.jar	proc/changes/CVE-2017-1000498/44e4fbf1d0f6db295df34601972741d4cf706cbd/before/java/androidsvg/src/main/java/com/caverock/androidsvg/SVGParser.java	proc/changes/CVE-2017-1000498/44e4fbf1d0f6db295df34601972741d4cf706cbd/after/java/androidsvg/src/main/java/com/caverock/androidsvg/SVGParser.java	proc/changes/CVE-2017-1000498/44e4fbf1d0f6db295df34601972741d4cf706cbd/before/class/androidsvg/src/main/java/com/caverock/androidsvg/SVGParser.class	proc/changes/CVE-2017-1000498/44e4fbf1d0f6db295df34601972741d4cf706cbd/after/class/androidsvg/src/main/java/com/caverock/androidsvg/SVGParser.class	SVGParser	[SVGParser::parseUsingXmlPullParser, SVGParser::parseUsingSAX, SVGParser::parseUsingXmlPullParser, SVGParser::parse]	com.caverock.androidsvg	com.caverock.androidsvg	"{""added"": [[83, ""   // Used by the automatic XML parser switching code.""], [84, ""   // This value defines how much of the SVG file preamble will we keep in order to check for""], [85, ""   // a doctype definition that has internal entities defined.""], [86, ""   public static final int  ENTITY_WATCH_BUFFER_SIZE = 4096;""], [87, """"], [597, ""            is = new BufferedInputStream( new GZIPInputStream(is) );""], [607, ""         // Mark the start in case we need to restart the parsing due to switching XML parser""], [608, ""         // 4096 chars is hopefully enough to capture most doctype declarations that have entities.""], [609, ""         is.mark(ENTITY_WATCH_BUFFER_SIZE);""], [611, ""         // Use XmlPullParser by default, which is faster, but doesn't support entity expansion.""], [612, ""         // In this parser we watch for capture doctype declarations, and then switch to the SAX""], [613, ""         // parser if any entities are defined in the doctype.""], [614, ""         parseUsingXmlPullParser(is, enableInternalEntities);""], [696, ""   private void parseUsingXmlPullParser(InputStream is, boolean enableInternalEntities) throws SVGParseException""], [698, ""      try""], [699, ""      {""], [700, ""         XmlPullParser         parser = Xml.newPullParser();""], [701, ""         XPPAttributesWrapper  attributes = new XPPAttributesWrapper(parser);""], [704, ""         parser.setFeature(XmlPullParser.FEATURE_PROCESS_DOCDECL, false);""], [705, ""         parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);""], [706, ""         parser.setInput(is, null);""], [707, """"], [708, ""         int  eventType = parser.getEventType();""], [709, ""         while (eventType != XmlPullParser.END_DOCUMENT)""], [710, ""         {""], [711, ""            switch(eventType) {""], [712, ""               case XmlPullParser.START_DOCUMENT:""], [713, ""                  startDocument();""], [714, ""                  break;""], [715, ""               case XmlPullParser.START_TAG:""], [716, ""                  String qName = parser.getName();""], [717, ""                  if (parser.getPrefix() != null)""], [718, ""                     qName = parser.getPrefix() + ':' + qName;""], [719, ""                  startElement(parser.getNamespace(), parser.getName(), qName, attributes);""], [720, ""                  break;""], [721, ""               case XmlPullParser.END_TAG:""], [722, ""                  qName = parser.getName();""], [723, ""                  if (parser.getPrefix() != null)""], [724, ""                     qName = parser.getPrefix() + ':' + qName;""], [725, ""                  endElement(parser.getNamespace(), parser.getName(), qName);""], [726, ""                  break;""], [727, ""               case XmlPullParser.TEXT:""], [728, ""                  int[] startAndLength = new int[2];""], [729, ""                  char[] text = parser.getTextCharacters(startAndLength);""], [730, ""                  text(text, startAndLength[0], startAndLength[1]);""], [731, ""                  break;""], [732, ""               //case XmlPullParser.COMMENT:""], [733, ""               //   text(parser.getText());""], [734, ""               //   break;""], [735, """"], [736, ""               case XmlPullParser.DOCDECL:""], [737, ""                  if (enableInternalEntities &&                  // entities are enabled""], [738, ""                      svgDocument.getRootElement() == null &&    // and we haven't already parsed the root element""], [739, ""                      parser.getText().contains(\""<!ENTITY \"")) {  // and doctype seems to contain an entity definition""], [740, ""                     // File uses internal entities. Switch to the SAX parser.""], [741, ""                     try {""], [742, ""                        Log.d(TAG,\""Switching to SAX parser to process entities\"");""], [743, ""                        is.reset();""], [744, ""                        parseUsingSAX(is);""], [745, ""                     } catch (IOException e) {""], [746, ""                        // reset() failed""], [747, ""                        Log.w(TAG, \""Detected internal entity definitions, but could not parse them.\"");""], [748, ""                        // All we can do is just continue using the XmlPullParser.""], [749, ""                        // Entities will not be parsed properly :(""], [750, ""                     }""], [751, ""                     return;""], [752, ""                  }""], [753, ""            }""], [754, ""            eventType = parser.nextToken();""], [756, ""         endDocument();""], [757, """"], [758, ""      }""], [759, ""      catch (XmlPullParserException e)""], [760, ""      {""], [761, ""         throw new SVGParseException(\""XML parser problem\"", e);""], [762, ""      }""], [763, ""      catch (IOException e)""], [764, ""      {""], [765, ""         throw new SVGParseException(\""Stream error\"", e);""], [775, ""   private void parseUsingSAX(InputStream is) throws SVGParseException""], [777, ""      try""], [778, ""      {""], [779, ""         // Invoke the SAX XML parser on the input.""], [780, ""         SAXParserFactory  spf = SAXParserFactory.newInstance();""], [782, ""         // Disable external entity resolving""], [783, ""         spf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);""], [784, ""         spf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);""], [786, ""         SAXParser sp = spf.newSAXParser();""], [787, ""         XMLReader xr = sp.getXMLReader();""], [789, ""         SAXHandler  handler = new SAXHandler();""], [790, ""         xr.setContentHandler(handler);""], [791, ""         xr.setProperty(\""http://xml.org/sax/properties/lexical-handler\"", handler);""], [793, ""         xr.parse(new InputSource(is));""], [794, ""      }""], [795, ""      catch (ParserConfigurationException e)""], [796, ""      {""], [797, ""         throw new SVGParseException(\""XML parser problem\"", e);""], [798, ""      }""], [799, ""      catch (SAXException e)""], [800, ""      {""], [801, ""         throw new SVGParseException(\""SVG parse error\"", e);""], [802, ""      }""], [803, ""      catch (IOException e)""], [804, ""      {""], [805, ""         throw new SVGParseException(\""Stream error\"", e);""], [806, ""      }""]], ""deleted"": [[592, ""            is = new GZIPInputStream(is);""], [602, ""         if (enableInternalEntities)""], [603, ""         {""], [604, ""            // Use the SAXParser, which supports entities, but is slower and""], [605, ""            // is vulnerable to the \""Billion laughs\"" entity expansion problem.""], [606, ""            parseUsingSAX(is);""], [607, ""         }""], [608, ""         else""], [609, ""         {""], [610, ""            // Use XmlPullParser, which is faster, but doesn't support entity expansion.""], [611, ""            parseUsingXmlPullParser(is);""], [612, ""         }""], [614, ""      }""], [615, ""      catch (XmlPullParserException e)""], [616, ""      {""], [617, ""         throw new SVGParseException(\""XML parser problem\"", e);""], [618, ""      }""], [619, ""      catch (IOException e)""], [620, ""      {""], [621, ""         throw new SVGParseException(\""Stream error\"", e);""], [622, ""      }""], [623, ""      // Thrown by SAX parser""], [624, ""      catch (ParserConfigurationException e)""], [625, ""      {""], [626, ""         throw new SVGParseException(\""XML parser problem\"", e);""], [627, ""      }""], [628, ""      catch (SAXException e)""], [629, ""      {""], [630, ""         throw new SVGParseException(\""SVG parse error: \""+e.getMessage(), e);""], [644, """"], [713, ""   private void parseUsingXmlPullParser(InputStream is) throws XmlPullParserException, IOException, SVGParseException""], [715, ""      XmlPullParser         parser = Xml.newPullParser();""], [716, ""      XPPAttributesWrapper  attributes = new XPPAttributesWrapper(parser);""], [718, ""      parser.setFeature(XmlPullParser.FEATURE_PROCESS_DOCDECL, false);""], [719, ""      parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);""], [720, ""      parser.setInput(is, null);""], [722, ""      int  eventType = parser.getEventType();""], [723, ""      while (eventType != XmlPullParser.END_DOCUMENT)""], [724, ""      {""], [725, ""         switch(eventType) {""], [726, ""            case XmlPullParser.START_DOCUMENT:""], [727, ""               startDocument();""], [728, ""               break;""], [729, ""            case XmlPullParser.START_TAG:""], [730, ""               String qName = parser.getName();""], [731, ""               if (parser.getPrefix() != null)""], [732, ""                  qName = parser.getPrefix() + ':' + qName;""], [733, ""               startElement(parser.getNamespace(), parser.getName(), qName, attributes);""], [734, ""               break;""], [735, ""            case XmlPullParser.END_TAG:""], [736, ""               qName = parser.getName();""], [737, ""               if (parser.getPrefix() != null)""], [738, ""                  qName = parser.getPrefix() + ':' + qName;""], [739, ""               endElement(parser.getNamespace(), parser.getName(), qName);""], [740, ""               break;""], [741, ""            case XmlPullParser.TEXT:""], [742, ""               int[] startAndLength = new int[2];""], [743, ""               char[] text = parser.getTextCharacters(startAndLength);""], [744, ""               text(text, startAndLength[0], startAndLength[1]);""], [745, ""               break;""], [746, ""            //case XmlPullParser.COMMENT:""], [747, ""            //   text(parser.getText());""], [748, ""            //   break;""], [750, ""         eventType = parser.next();""], [752, ""      endDocument();""], [761, ""   private void parseUsingSAX(InputStream is) throws IOException, ParserConfigurationException, SAXException, SAXNotRecognizedException, SAXNotSupportedException""], [763, ""      // Invoke the SAX XML parser on the input.""], [764, ""      SAXParserFactory  spf = SAXParserFactory.newInstance();""], [766, ""      // Disable external entity resolving""], [767, ""      spf.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);""], [768, ""      spf.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);""], [770, ""      SAXParser sp = spf.newSAXParser();""], [771, ""      XMLReader xr = sp.getXMLReader();""], [773, ""      SAXHandler  handler = new SAXHandler();""], [774, ""      xr.setContentHandler(handler);""], [775, ""      xr.setProperty(\""http://xml.org/sax/properties/lexical-handler\"", handler);""], [777, ""      xr.parse(new InputSource(is));""]]}"	3402
CVE-2018-15531	GHSA-6fvx-r7hx-3vh6	net.bull.javamelody:javamelody-core	0	1.73.1	1.74.0	https://github.com/javamelody/javamelody	ef111822562d0b9365bd3e671a75b65bd0613353	proc/changes/CVE-2018-15531/ef111822562d0b9365bd3e671a75b65bd0613353/before/jar/javamelody-core-1.73.1.jar	proc/changes/CVE-2018-15531/ef111822562d0b9365bd3e671a75b65bd0613353/after/jar/javamelody-core-1.74.0.jar	proc/changes/CVE-2018-15531/ef111822562d0b9365bd3e671a75b65bd0613353/before/java/javamelody-core/src/main/java/net/bull/javamelody/PayloadNameRequestWrapper.java	proc/changes/CVE-2018-15531/ef111822562d0b9365bd3e671a75b65bd0613353/after/java/javamelody-core/src/main/java/net/bull/javamelody/PayloadNameRequestWrapper.java	proc/changes/CVE-2018-15531/ef111822562d0b9365bd3e671a75b65bd0613353/before/class/javamelody-core/src/main/java/net/bull/javamelody/PayloadNameRequestWrapper.class	proc/changes/CVE-2018-15531/ef111822562d0b9365bd3e671a75b65bd0613353/after/class/javamelody-core/src/main/java/net/bull/javamelody/PayloadNameRequestWrapper.class	PayloadNameRequestWrapper	[PayloadNameRequestWrapper::parseSoapMethodName]	net.bull.javamelody	net.bull.javamelody	"{""added"": [[238, ""\t\t\tfactory.setProperty(XMLInputFactory.SUPPORT_DTD, false); // disable DTDs entirely for that factory""], [239, ""\t\t\tfactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false); // disable external entities""]], ""deleted"": []}"	197
CVE-2018-17194	GHSA-43fp-vwwg-qgv6	org.apache.nifi:nifi-framework-cluster	1.0.0	1.7.1	1.8.0	https://github.com/apache/nifi	748cf745628dab20b7e71f12b5dcfe6ed0bbf134	proc/changes/CVE-2018-17194/748cf745628dab20b7e71f12b5dcfe6ed0bbf134/before/jar/nifi-framework-cluster-1.7.1.jar	proc/changes/CVE-2018-17194/748cf745628dab20b7e71f12b5dcfe6ed0bbf134/after/jar/nifi-framework-cluster-1.8.0.jar	proc/changes/CVE-2018-17194/748cf745628dab20b7e71f12b5dcfe6ed0bbf134/before/java/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/http/replication/okhttp/OkHttpReplicationClient.java	proc/changes/CVE-2018-17194/748cf745628dab20b7e71f12b5dcfe6ed0bbf134/after/java/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/http/replication/okhttp/OkHttpReplicationClient.java	proc/changes/CVE-2018-17194/748cf745628dab20b7e71f12b5dcfe6ed0bbf134/before/class/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/http/replication/okhttp/OkHttpReplicationClient.class	proc/changes/CVE-2018-17194/748cf745628dab20b7e71f12b5dcfe6ed0bbf134/after/class/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/http/replication/okhttp/OkHttpReplicationClient.class	OkHttpReplicationClient	[OkHttpReplicationClient::serializeEntity, OkHttpReplicationClient::isUseGzip, OkHttpReplicationClient::buildUrl, OkHttpReplicationClient::prepareRequest, OkHttpReplicationClient::checkContentLengthHeader, OkHttpReplicationClient::getResponseBytes]	org.apache.nifi.cluster.coordination.http.replication.okhttp	org.apache.nifi.cluster.coordination.http.replication.okhttp	"{""added"": [[24, ""import java.io.ByteArrayInputStream;""], [25, ""import java.io.ByteArrayOutputStream;""], [26, ""import java.io.FileInputStream;""], [27, ""import java.io.IOException;""], [28, ""import java.io.InputStream;""], [29, ""import java.io.OutputStream;""], [30, ""import java.net.URI;""], [31, ""import java.security.KeyStore;""], [32, ""import java.util.HashMap;""], [33, ""import java.util.List;""], [34, ""import java.util.Map;""], [35, ""import java.util.Map.Entry;""], [36, ""import java.util.Objects;""], [37, ""import java.util.Set;""], [38, ""import java.util.concurrent.TimeUnit;""], [39, ""import java.util.stream.Collectors;""], [40, ""import java.util.stream.Stream;""], [41, ""import java.util.zip.GZIPInputStream;""], [42, ""import javax.net.ssl.KeyManager;""], [43, ""import javax.net.ssl.KeyManagerFactory;""], [44, ""import javax.net.ssl.SSLContext;""], [45, ""import javax.net.ssl.SSLSocketFactory;""], [46, ""import javax.net.ssl.TrustManager;""], [47, ""import javax.net.ssl.TrustManagerFactory;""], [48, ""import javax.net.ssl.X509TrustManager;""], [49, ""import javax.ws.rs.HttpMethod;""], [50, ""import javax.ws.rs.core.MultivaluedHashMap;""], [51, ""import javax.ws.rs.core.MultivaluedMap;""], [52, ""import javax.ws.rs.core.Response;""], [97, ""        checkContentLengthHeader(method, headers);""], [104, ""    /**""], [105, ""     * Checks the content length header on DELETE requests to ensure it is set to '0', avoiding request timeouts on replicated requests.""], [106, ""     * @param method the HTTP method of the request""], [107, ""     * @param headers the header keys and values""], [108, ""     */""], [109, ""    private void checkContentLengthHeader(String method, Map<String, String> headers) {""], [110, ""        // Only applies to DELETE requests""], [111, ""        if (HttpMethod.DELETE.equalsIgnoreCase(method)) {""], [112, ""            // Find the Content-Length header if present""], [113, ""            final String CONTENT_LENGTH_HEADER_KEY = \""Content-Length\"";""], [114, ""            Map.Entry<String, String> contentLengthEntry = headers.entrySet().stream().filter(entry -> entry.getKey().equalsIgnoreCase(CONTENT_LENGTH_HEADER_KEY)).findFirst().orElse(null);""], [115, ""            // If no CL header, do nothing""], [116, ""            if (contentLengthEntry != null) {""], [117, ""                // If the provided CL value is non-zero, override it""], [118, ""                if (contentLengthEntry.getValue() != null && !contentLengthEntry.getValue().equalsIgnoreCase(\""0\"")) {""], [119, ""                    logger.warn(\""This is a DELETE request; the provided Content-Length was {}; setting Content-Length to 0\"", contentLengthEntry.getValue());""], [120, ""                    headers.put(CONTENT_LENGTH_HEADER_KEY, \""0\"");""], [121, ""                }""], [122, ""            }""], [123, ""        }""], [124, ""    }""], [125, """"], [165, ""                 final ByteArrayOutputStream baos = new ByteArrayOutputStream()) {""], [208, ""        HttpUrl.Builder urlBuilder = HttpUrl.parse(uri).newBuilder();""], [251, ""             final OutputStream out = gzip ? new GZIPOutputStream(baos, 1) : baos) {""], [294, ""                    .map(String::trim)""], [295, ""                    .filter(StringUtils::isNotEmpty)""], [296, ""                    .map(String::toLowerCase)""], [297, ""                    .anyMatch(gzipEncodings::contains);""]], ""deleted"": [[45, ""import javax.net.ssl.KeyManager;""], [46, ""import javax.net.ssl.KeyManagerFactory;""], [47, ""import javax.net.ssl.SSLContext;""], [48, ""import javax.net.ssl.SSLSocketFactory;""], [49, ""import javax.net.ssl.TrustManager;""], [50, ""import javax.net.ssl.TrustManagerFactory;""], [51, ""import javax.net.ssl.X509TrustManager;""], [52, ""import javax.ws.rs.HttpMethod;""], [53, ""import javax.ws.rs.core.MultivaluedHashMap;""], [54, ""import javax.ws.rs.core.MultivaluedMap;""], [55, ""import javax.ws.rs.core.Response;""], [56, ""import java.io.ByteArrayInputStream;""], [57, ""import java.io.ByteArrayOutputStream;""], [58, ""import java.io.FileInputStream;""], [59, ""import java.io.IOException;""], [60, ""import java.io.InputStream;""], [61, ""import java.io.OutputStream;""], [62, ""import java.net.URI;""], [63, ""import java.security.KeyStore;""], [64, ""import java.util.HashMap;""], [65, ""import java.util.List;""], [66, ""import java.util.Map;""], [67, ""import java.util.Map.Entry;""], [68, ""import java.util.Objects;""], [69, ""import java.util.Set;""], [70, ""import java.util.concurrent.TimeUnit;""], [71, ""import java.util.stream.Collectors;""], [72, ""import java.util.stream.Stream;""], [73, ""import java.util.zip.GZIPInputStream;""], [74, """"], [143, ""                final ByteArrayOutputStream baos = new ByteArrayOutputStream()) {""], [186, ""        HttpUrl.Builder urlBuilder = HttpUrl.parse(uri.toString()).newBuilder();""], [229, ""            final OutputStream out = gzip ? new GZIPOutputStream(baos, 1) : baos) {""], [272, ""                .map(String::trim)""], [273, ""                .filter(StringUtils::isNotEmpty)""], [274, ""                .map(String::toLowerCase)""], [275, ""                .anyMatch(gzipEncodings::contains);""]]}"	280
CVE-2018-1000850	GHSA-8p8g-f9vg-r7xr	com.squareup.retrofit2:retrofit	2.0.0	2.4.0	2.5.0	https://github.com/square/retrofit	b9a7f6ad72073ddd40254c0058710e87a073047d	proc/changes/CVE-2018-1000850/b9a7f6ad72073ddd40254c0058710e87a073047d/before/jar/retrofit-2.4.0.jar	proc/changes/CVE-2018-1000850/b9a7f6ad72073ddd40254c0058710e87a073047d/after/jar/retrofit-2.5.0.jar	proc/changes/CVE-2018-1000850/b9a7f6ad72073ddd40254c0058710e87a073047d/before/java/retrofit/src/main/java/retrofit2/RequestBuilder.java	proc/changes/CVE-2018-1000850/b9a7f6ad72073ddd40254c0058710e87a073047d/after/java/retrofit/src/main/java/retrofit2/RequestBuilder.java	proc/changes/CVE-2018-1000850/b9a7f6ad72073ddd40254c0058710e87a073047d/before/class/retrofit/src/main/java/retrofit2/RequestBuilder.class	proc/changes/CVE-2018-1000850/b9a7f6ad72073ddd40254c0058710e87a073047d/after/class/retrofit/src/main/java/retrofit2/RequestBuilder.class	RequestBuilder	[RequestBuilder::addPathParam]	retrofit2	retrofit2	"{""added"": [[19, ""import java.util.regex.Pattern;""], [36, ""  /**""], [37, ""   * Matches strings that contain {@code .} or {@code ..} as a complete path segment. This also""], [38, ""   * matches dots in their percent-encoded form, {@code %2E}.""], [39, ""   *""], [40, ""   * <p>It is okay to have these strings within a larger path segment (like {@code a..z} or {@code""], [41, ""   * index.html}) but when alone they have a special meaning. A single dot resolves to no path""], [42, ""   * segment so {@code /one/./three/} becomes {@code /one/three/}. A double-dot pops the preceding""], [43, ""   * directory, so {@code /one/../three/} becomes {@code /three/}.""], [44, ""   *""], [45, ""   * <p>We forbid these in Retrofit paths because they're likely to have the unintended effect.""], [46, ""   * For example, passing {@code ..} to {@code DELETE /account/book/{isbn}/} yields {@code DELETE""], [47, ""   * /account/}.""], [48, ""   */""], [49, ""  private static final Pattern PATH_TRAVERSAL = Pattern.compile(\""(.*/)?(\\\\.|%2e|%2E){1,2}(/.*)?\"");""], [50, """"], [110, ""    String replacement = canonicalizeForPath(value, encoded);""], [111, ""    String newRelativeUrl = relativeUrl.replace(\""{\"" + name + \""}\"", replacement);""], [112, ""    if (PATH_TRAVERSAL.matcher(newRelativeUrl).matches()) {""], [113, ""      throw new IllegalArgumentException(""], [114, ""          \""@Path parameters shouldn't perform path traversal ('.' or '..'): \"" + value);""], [115, ""    }""], [116, ""    relativeUrl = newRelativeUrl;""]], ""deleted"": [[94, ""    relativeUrl = relativeUrl.replace(\""{\"" + name + \""}\"", canonicalizeForPath(value, encoded));""]]}"	200
CVE-2018-1000820	GHSA-r2pp-x4mm-4999	org.neo4j.procedure:apoc	0	3.4.0.3	3.4.0.4	https://github.com/neo4j-contrib/neo4j-apoc-procedures	45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a	proc/changes/CVE-2018-1000820/45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a/before/jar/apoc-3.4.0.3.jar	proc/changes/CVE-2018-1000820/45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a/after/jar/apoc-3.4.0.4.jar	proc/changes/CVE-2018-1000820/45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a/before/java/src/main/java/apoc/load/Xml.java	proc/changes/CVE-2018-1000820/45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a/after/java/src/main/java/apoc/load/Xml.java	proc/changes/CVE-2018-1000820/45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a/before/class/src/main/java/apoc/load/Xml.class	proc/changes/CVE-2018-1000820/45bc09c8bd7f17283e2a7e85ce3f02cb4be4fd1a/after/class/src/main/java/apoc/load/Xml.class	Xml	[Xml::xmlXpathToMapResult]	apoc.load	apoc.load	"{""added"": [[68, ""            documentBuilderFactory.setFeature(\""http://apache.org/xml/features/disallow-doctype-decl\"", true);""]], ""deleted"": []}"	399
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/action/hadoop/LauncherConfigurationInjector.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/action/hadoop/LauncherConfigurationInjector.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/action/hadoop/LauncherConfigurationInjector.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/action/hadoop/LauncherConfigurationInjector.class	LauncherConfigurationInjector	[LauncherConfigurationInjector::copyToLauncherConf, LauncherConfigurationInjector::inject]	org.apache.oozie.action.hadoop	org.apache.oozie.action.hadoop	"{""added"": [[26, ""import org.apache.oozie.action.ActionExecutorException;""], [197, ""    void inject(final Configuration launcherConf) throws ActionExecutorException {""], [349, ""    private void copyToLauncherConf(final Configuration source, final Configuration target) throws ActionExecutorException {""], [353, ""                if (JavaActionExecutor.DISALLOWED_PROPERTIES.contains(name)) {""], [354, ""                    LOG.error(\""Property [{0}] not allowed in launcher configuration\"", name);""], [355, ""                    throw new ActionExecutorException(ActionExecutorException.ErrorType.FAILED, \""JA010\"",""], [356, ""                    \""Property [{0}] not allowed in launcher configuration\"", name);""], [357, ""                }""]], ""deleted"": [[196, ""    void inject(final Configuration launcherConf) {""], [348, ""    private void copyToLauncherConf(final Configuration source, final Configuration target) {""]]}"	129
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/action/oozie/SubWorkflowActionExecutor.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/action/oozie/SubWorkflowActionExecutor.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/action/oozie/SubWorkflowActionExecutor.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/action/oozie/SubWorkflowActionExecutor.class	SubWorkflowActionExecutor	[SubWorkflowActionExecutor::injectInline]	org.apache.oozie.action.oozie	org.apache.oozie.action.oozie	"{""added"": [[59, ""    private static final Set<String> DISALLOWED_USER_PROPERTIES = new HashSet<String>();""], [69, ""        PropertiesUtils.createPropertySet(badUserProps, DISALLOWED_USER_PROPERTIES);""], [102, ""                PropertiesUtils.checkDisallowedProperties(conf, DISALLOWED_USER_PROPERTIES);""], [103, ""                PropertiesUtils.checkDefaultDisallowedProperties(conf);""]], ""deleted"": [[59, ""    private static final Set<String> DISALLOWED_DEFAULT_PROPERTIES = new HashSet<String>();""], [69, ""        String[] badDefaultProps = {PropertiesUtils.HADOOP_USER};""], [70, ""        PropertiesUtils.createPropertySet(badUserProps, DISALLOWED_DEFAULT_PROPERTIES);""], [71, ""        PropertiesUtils.createPropertySet(badDefaultProps, DISALLOWED_DEFAULT_PROPERTIES);""], [104, ""                PropertiesUtils.checkDisallowedProperties(conf, DISALLOWED_DEFAULT_PROPERTIES);""]]}"	257
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/bundle/BundleStartXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/bundle/BundleStartXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/bundle/BundleStartXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/bundle/BundleStartXCommand.class	BundleStartXCommand	[BundleStartXCommand::mergeConfig]	org.apache.oozie.command.bundle	org.apache.oozie.command.bundle	"{""added"": [[46, ""import org.apache.oozie.util.ConfigUtils;""], [316, """"], [317, ""            ConfigUtils.checkAndSetDisallowedProperties(runConf,""], [318, ""                    bundleJob.getUser(),""], [319, ""                    new CommandException(ErrorCode.E1303,""], [320, ""                            String.format(\""%s=%s\"", OozieClient.USER_NAME, runConf.get(OozieClient.USER_NAME)),""], [321, ""                            bundleJob.getUser()),""], [322, ""                    true);""]], ""deleted"": []}"	271
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/bundle/BundleSubmitXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/bundle/BundleSubmitXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/bundle/BundleSubmitXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/bundle/BundleSubmitXCommand.class	BundleSubmitXCommand	[BundleSubmitXCommand::mergeDefaultConfig]	org.apache.oozie.command.bundle	org.apache.oozie.command.bundle	"{""added"": [[242, ""                PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_USER_PROPERTIES);""], [243, ""                PropertiesUtils.checkDefaultDisallowedProperties(defaultConf);""]], ""deleted"": [[94, """"], [95, ""        String[] badDefaultProps = { PropertiesUtils.HADOOP_USER};""], [96, ""        PropertiesUtils.createPropertySet(badUserProps, DISALLOWED_DEFAULT_PROPERTIES);""], [97, ""        PropertiesUtils.createPropertySet(badDefaultProps, DISALLOWED_DEFAULT_PROPERTIES);""], [246, ""                PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_DEFAULT_PROPERTIES);""]]}"	358
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/coord/CoordActionStartXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/coord/CoordActionStartXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/coord/CoordActionStartXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/coord/CoordActionStartXCommand.class	CoordActionStartXCommand	[CoordActionStartXCommand::mergeConfig]	org.apache.oozie.command.coord	org.apache.oozie.command.coord	"{""added"": [[37, ""import org.apache.oozie.util.ConfigUtils;""], [41, ""import org.apache.oozie.util.XConfiguration;""], [176, """"], [177, ""        ConfigUtils.checkAndSetDisallowedProperties(runConf,""], [178, ""                this.user,""], [179, ""                new CommandException(ErrorCode.E1003,""], [180, ""                        String.format(\""%s=%s\"", OozieClient.USER_NAME, runConf.get(OozieClient.USER_NAME))),""], [181, ""                true);""], [182, """"]], ""deleted"": [[42, ""import org.apache.oozie.util.XConfiguration;""]]}"	274
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/coord/CoordSubmitXCommand.class	CoordSubmitXCommand	[CoordSubmitXCommand::mergeDefaultConfig]	org.apache.oozie.command.coord	org.apache.oozie.command.coord	"{""added"": [[568, ""                PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_USER_PROPERTIES);""], [569, ""                PropertiesUtils.checkDefaultDisallowedProperties(defaultConf);""]], ""deleted"": [[158, """"], [159, ""        String[] badDefaultProps = { PropertiesUtils.HADOOP_USER};""], [160, ""        PropertiesUtils.createPropertySet(badUserProps, DISALLOWED_DEFAULT_PROPERTIES);""], [161, ""        PropertiesUtils.createPropertySet(badDefaultProps, DISALLOWED_DEFAULT_PROPERTIES);""], [572, ""                PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_DEFAULT_PROPERTIES);""]]}"	947
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/coord/CoordUpdateXCommand.class	CoordUpdateXCommand	[CoordUpdateXCommand::storeToDB]	org.apache.oozie.command.coord	org.apache.oozie.command.coord	"{""added"": [[39, ""import org.apache.oozie.util.ConfigUtils;""], [82, """"], [83, ""        ConfigUtils.checkAndSetDisallowedProperties(conf,""], [84, ""                this.oldCoordJob.getUser(),""], [85, ""                new CommandException(ErrorCode.E1003,""], [86, ""                        String.format(\""%s=%s\"", OozieClient.USER_NAME, conf.get(OozieClient.USER_NAME))),""], [87, ""                true);""], [88, """"]], ""deleted"": []}"	217
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/wf/ReRunXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/wf/ReRunXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/wf/ReRunXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/wf/ReRunXCommand.class	ReRunXCommand	[ReRunXCommand::setupReRun]	org.apache.oozie.command.wf	org.apache.oozie.command.wf	"{""added"": [[161, ""                PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_USER_PROPERTIES);""], [162, ""                PropertiesUtils.checkDefaultDisallowedProperties(defaultConf);""]], ""deleted"": [[96, ""    private static final Set<String> DISALLOWED_DEFAULT_PROPERTIES = new HashSet<String>();""], [106, """"], [107, ""        String[] badDefaultProps = { PropertiesUtils.HADOOP_USER};""], [108, ""        PropertiesUtils.createPropertySet(badUserProps, DISALLOWED_DEFAULT_PROPERTIES);""], [109, ""        PropertiesUtils.createPropertySet(badDefaultProps, DISALLOWED_DEFAULT_PROPERTIES);""], [166, ""                PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_DEFAULT_PROPERTIES);""]]}"	330
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/wf/SubmitHttpXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/wf/SubmitHttpXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/wf/SubmitHttpXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/wf/SubmitHttpXCommand.class	SubmitHttpXCommand	[SubmitHttpXCommand::execute]	org.apache.oozie.command.wf	org.apache.oozie.command.wf	"{""added"": [[187, ""            PropertiesUtils.checkDefaultDisallowedProperties(conf);""], [268, ""     * @param X XML element to be appended""], [280, ""     * @param X XML element to be appended""]], ""deleted"": [[69, ""    private static final Set<String> DISALLOWED_DEFAULT_PROPERTIES = new HashSet<String>();""], [78, """"], [79, ""        String[] badDefaultProps = { PropertiesUtils.HADOOP_USER};""], [80, ""        PropertiesUtils.createPropertySet(badUserProps, DISALLOWED_DEFAULT_PROPERTIES);""], [81, ""        PropertiesUtils.createPropertySet(badDefaultProps, DISALLOWED_DEFAULT_PROPERTIES);""], [272, ""     * @param parent XML element to be appended""], [284, ""     * @param parent XML element to be appended""]]}"	210
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/command/wf/SubmitXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/command/wf/SubmitXCommand.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/command/wf/SubmitXCommand.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/command/wf/SubmitXCommand.class	SubmitXCommand	[SubmitXCommand::execute]	org.apache.oozie.command.wf	org.apache.oozie.command.wf	"{""added"": [[151, ""                    PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_USER_PROPERTIES);""], [152, ""                    PropertiesUtils.checkDefaultDisallowedProperties(defaultConf);""]], ""deleted"": [[116, ""    private static final Set<String> DISALLOWED_DEFAULT_PROPERTIES = new HashSet<String>();""], [125, """"], [126, ""        String[] badDefaultProps = {PropertiesUtils.HADOOP_USER};""], [127, ""        PropertiesUtils.createPropertySet(badUserProps, DISALLOWED_DEFAULT_PROPERTIES);""], [128, ""        PropertiesUtils.createPropertySet(badDefaultProps, DISALLOWED_DEFAULT_PROPERTIES);""], [156, ""                    PropertiesUtils.checkDisallowedProperties(defaultConf, DISALLOWED_DEFAULT_PROPERTIES);""]]}"	309
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/servlet/V1JobsServlet.class	V1JobsServlet	[V1JobsServlet::submitJob]	org.apache.oozie.servlet	org.apache.oozie.servlet	"{""added"": [[67, ""import org.apache.oozie.util.ConfigUtils;""], [99, ""        if (!getUser(request).equals(UNDEF)) {""], [100, ""            ConfigUtils.checkAndSetDisallowedProperties(conf,""], [101, ""                    getUser(request),""], [102, ""                    new XServletException(HttpServletResponse.SC_BAD_REQUEST,""], [103, ""                            ErrorCode.E0303,""], [104, ""                            \""configuration\"",""], [105, ""                            OozieClient.USER_NAME),""], [106, ""                    false);""], [107, ""        }""], [108, """"]], ""deleted"": []}"	567
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/util/ConfigUtils.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/util/ConfigUtils.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/util/ConfigUtils.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/util/ConfigUtils.class	ConfigUtils	[ConfigUtils::checkAndSetConfigValue, ConfigUtils::checkAndSetDisallowedProperties]	org.apache.oozie.util	org.apache.oozie.util	"{""added"": [[21, ""import com.google.common.base.Preconditions;""], [23, ""import org.apache.hadoop.mapreduce.MRJobConfig;""], [24, ""import org.apache.oozie.client.OozieClient;""], [126, """"], [127, ""    /**""], [128, ""     * Check {@link Configuration} whether it contains disallowed properties. Given configuration property values of""], [129, ""     * {@code oozie-site.xml#oozie.configuration.check-and-set.DISALLOWED.PROPERTY_KEY}, {@code newValue} and {@code performWrite}""], [130, ""     * values, one of the following will happen:""], [131, ""     * <ul>""], [132, ""     *     <li>{@code base} doesn't contain any disallowed property: NOP</li>""], [133, ""     *     <li>{@code base} contains a disallowed property but its value is the same as {@code newValue}: NOP</li>""], [134, ""     *     <li>{@code base} contains a conflicting disallowed property and configuration tells we should also set, but""], [135, ""     *     {@code performWrite=false}: NOP</li>""], [136, ""     *     <li>{@code base} contains a conflicting disallowed property and configuration tells we should also set, and""], [137, ""     *     {@code performWrite=true}: {@code base} will be overwritten by {@code key=newValue}</li>""], [138, ""     *     <li>{@code base} contains a conflicting disallowed property and configuration tells we should not set:""], [139, ""     *     {@code Exception toThrow} is thrown</li>""], [140, ""     * </ul>""], [141, ""     * @param base the {@link Configuration} to check""], [142, ""     * @param newValue the new value to assign if {@code performWrite=true} and if configuration value""], [143, ""     * {@code oozie.configuration.check-and-set.*} is set""], [144, ""     * @param toThrow the {@link Exception} to throw when {@code oozie.configuration.check-and-set.*} is unset""], [145, ""     * @param performWrite""], [146, ""     * @param <E> {@link Exception} type""], [147, ""     * @throws E the {@link Exception} to throw when {@code oozie.configuration.check-and-set.*} is unset""], [148, ""     */""], [149, ""    public static <E extends Exception> void checkAndSetDisallowedProperties(final Configuration base,""], [150, ""                                                                             final String newValue,""], [151, ""                                                                             final E toThrow,""], [152, ""                                                                             final boolean performWrite) throws E {""], [153, ""        Preconditions.checkNotNull(base, \""base\"");""], [154, ""        Preconditions.checkNotNull(base, \""newValue\"");""], [155, ""        Preconditions.checkNotNull(base, \""toThrow\"");""], [156, """"], [157, ""        for (final String defaultDisallowedProperty : PropertiesUtils.DEFAULT_DISALLOWED_PROPERTIES) {""], [158, ""            checkAndSetConfigValue(base, defaultDisallowedProperty, newValue, toThrow, performWrite);""], [159, ""        }""], [160, ""    }""], [161, """"], [162, ""    private static <E extends Exception> void checkAndSetConfigValue(final Configuration base,""], [163, ""                                                                     final String key,""], [164, ""                                                                     final String newValue,""], [165, ""                                                                     final E toThrow,""], [166, ""                                                                     final boolean performWrite) throws E {""], [167, ""        final boolean shouldCheckAndSet = ConfigurationService.getBoolean(\""oozie.configuration.check-and-set.\"" + key, false);""], [168, ""        final boolean isPresent = base.get(key) != null;""], [169, ""        if (isPresent && !base.get(key).equals(newValue)) {""], [170, ""            LOG.trace(\""Base configuration contains config property [{0}={1}] that is different from new value [{2}]\"",""], [171, ""                    key,""], [172, ""                    base.get(key),""], [173, ""                    newValue);""], [174, ""            if (shouldCheckAndSet && performWrite) {""], [175, ""                LOG.trace(\""Setting [{0}] to [{1}]\"", key, newValue);""], [176, ""                base.set(key, newValue);""], [177, ""            }""], [178, ""            else if (!shouldCheckAndSet) {""], [179, ""                LOG.error(\""Cannot set [{0}] to [{1}]. {2}\"", key, newValue, toThrow.getMessage());""], [180, ""                throw toThrow;""], [181, ""            }""], [182, ""        }""], [183, ""    }""]], ""deleted"": []}"	96
CVE-2018-11799	GHSA-wg5w-vv93-3f7w	org.apache.oozie:oozie-core	0	5.0.0	5.1.0	https://github.com/apache/oozie	d50df341432df1049c6c85bf2dcda9eb0be04d73	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/jar/oozie-core-5.0.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/jar/oozie-core-5.1.0.jar	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/java/core/src/main/java/org/apache/oozie/util/PropertiesUtils.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/java/core/src/main/java/org/apache/oozie/util/PropertiesUtils.java	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/before/class/core/src/main/java/org/apache/oozie/util/PropertiesUtils.class	proc/changes/CVE-2018-11799/d50df341432df1049c6c85bf2dcda9eb0be04d73/after/class/core/src/main/java/org/apache/oozie/util/PropertiesUtils.class	PropertiesUtils	[PropertiesUtils::checkDefaultDisallowedProperties]	org.apache.oozie.util	org.apache.oozie.util	"{""added"": [[28, ""import com.google.common.collect.ImmutableSet;""], [30, ""import org.apache.hadoop.mapreduce.MRJobConfig;""], [32, ""import org.apache.oozie.client.OozieClient;""], [57, ""    public static final Set<String> DEFAULT_DISALLOWED_PROPERTIES = ImmutableSet.of(OozieClient.USER_NAME, MRJobConfig.USER_NAME);""], [120, ""    public static void checkDefaultDisallowedProperties(final Configuration conf) throws CommandException {""], [121, ""        checkDisallowedProperties(conf, DEFAULT_DISALLOWED_PROPERTIES);""], [122, ""    }""]], ""deleted"": []}"	82
CVE-2018-17197	GHSA-3448-vfvv-xp9g	org.apache.tika:tika-parsers	1.8	1.19.1	1.20	https://github.com/apache/tika	0c49c851979163334ea05cbebdd11ff87feba62d	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/jar/tika-parsers-1.19.1.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/jar/tika-parsers-1.20.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.class	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.class	AbstractDBParser	[AbstractDBParser::parse]	org.apache.tika.parser.jdbc	org.apache.tika.parser.jdbc	"{""added"": [[28, ""import org.apache.tika.exception.CorruptedFileException;""], [30, ""import org.apache.tika.extractor.EmbeddedDocumentUtil;""], [59, ""        EmbeddedDocumentUtil embeddedDocumentUtil = new EmbeddedDocumentUtil(context);""], [68, ""            if (e.getClass().toString().contains(\""SQLiteException\"") && e.getMessage() != null""], [69, ""                && (e.getMessage().contains(\""[SQLITE_ERROR]\"") || e.getMessage().contains(\""[SQLITE_CORRUPT]\""))) {""], [70, ""                throw new CorruptedFileException(\""Corrupt SQLITE\"", e);""], [71, ""            }""], [72, """"], [84, ""                JDBCTableReader tableReader = getTableReader(connection, tableName, embeddedDocumentUtil);""], [191, ""     * @return a reader""], [192, ""     * @deprecated use {@link #getTableReader(Connection, String, EmbeddedDocumentUtil)}""], [194, ""    @Deprecated""], [197, ""    /**""], [198, ""     * Given a connection and a table name, return the JDBCTableReader for this db.""], [199, ""     *""], [200, ""     * @param connection""], [201, ""     * @param tableName""], [202, ""     * @param embeddedDocumentUtil embedded doc util""], [203, ""     * @return""], [204, ""     */""], [205, ""    abstract protected JDBCTableReader getTableReader(Connection connection,""], [206, ""                                                      String tableName,""], [207, ""                                                      EmbeddedDocumentUtil embeddedDocumentUtil);""], [208, """"]], ""deleted"": [[76, ""                JDBCTableReader tableReader = getTableReader(connection, tableName, context);""], [183, ""     * @return""]]}"	109
CVE-2018-17197	GHSA-3448-vfvv-xp9g	org.apache.tika:tika-parsers	1.8	1.19.1	1.20	https://github.com/apache/tika	0c49c851979163334ea05cbebdd11ff87feba62d	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/jar/tika-parsers-1.19.1.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/jar/tika-parsers-1.20.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.class	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.class	JDBCTableReader	[JDBCTableReader::JDBCTableReader, JDBCTableReader::JDBCTableReader]	org.apache.tika.parser.jdbc	org.apache.tika.parser.jdbc	"{""added"": [[65, ""    public JDBCTableReader(Connection connection, String tableName, EmbeddedDocumentUtil embeddedDocumentUtil) {""], [66, ""        System.out.println(\""new table: \""+tableName);""], [69, ""        this.embeddedDocumentUtil = embeddedDocumentUtil;""]], ""deleted"": [[65, ""    public JDBCTableReader(Connection connection, String tableName, ParseContext context) {""], [68, ""        embeddedDocumentUtil = new EmbeddedDocumentUtil(context);""]]}"	249
CVE-2018-17197	GHSA-3448-vfvv-xp9g	org.apache.tika:tika-parsers	1.8	1.19.1	1.20	https://github.com/apache/tika	0c49c851979163334ea05cbebdd11ff87feba62d	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/jar/tika-parsers-1.19.1.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/jar/tika-parsers-1.20.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.class	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3DBParser.class	SQLite3DBParser	[SQLite3DBParser::getTableReader, SQLite3DBParser::getTableReader]	org.apache.tika.parser.jdbc	org.apache.tika.parser.jdbc	"{""added"": [[33, ""import org.apache.tika.extractor.EmbeddedDocumentUtil;""], [134, ""        return new SQLite3TableReader(connection, tableName, new EmbeddedDocumentUtil(context));""], [135, ""    }""], [136, """"], [137, ""    @Override""], [138, ""    protected JDBCTableReader getTableReader(Connection connection, String tableName, EmbeddedDocumentUtil embeddedDocumentUtil) {""], [139, ""        return new SQLite3TableReader(connection, tableName, embeddedDocumentUtil);""]], ""deleted"": [[133, ""        return new SQLite3TableReader(connection, tableName, context);""]]}"	93
CVE-2018-17197	GHSA-3448-vfvv-xp9g	org.apache.tika:tika-parsers	1.8	1.19.1	1.20	https://github.com/apache/tika	0c49c851979163334ea05cbebdd11ff87feba62d	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/jar/tika-parsers-1.19.1.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/jar/tika-parsers-1.20.jar	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/java/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/before/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.class	proc/changes/CVE-2018-17197/0c49c851979163334ea05cbebdd11ff87feba62d/after/class/tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.class	SQLite3TableReader	[SQLite3TableReader::SQLite3TableReader, SQLite3TableReader::SQLite3TableReader]	org.apache.tika.parser.jdbc	org.apache.tika.parser.jdbc	"{""added"": [[26, ""import org.apache.tika.extractor.EmbeddedDocumentUtil;""], [43, ""    public SQLite3TableReader(Connection connection, String tableName, EmbeddedDocumentUtil embeddedDocumentUtil) {""], [44, ""        super(connection, tableName, embeddedDocumentUtil);""]], ""deleted"": [[42, ""    public SQLite3TableReader(Connection connection, String tableName, ParseContext context) {""], [43, ""        super(connection, tableName, context);""]]}"	30
CVE-2018-17187	GHSA-xvch-r4wf-h8w9	org.apache.qpid:proton-j	0.3	0.29.0	0.30.0	https://github.com/apache/qpid-proton-j	0cb8ca03cec42120dcfc434561592d89a89a805e	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/jar/proton-j-0.29.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/jar/proton-j-0.30.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapper.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapper.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapper.class	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SimpleSslTransportWrapper.class	SimpleSslTransportWrapper	[SimpleSslTransportWrapper::process]	org.apache.qpid.proton.engine.impl.ssl	org.apache.qpid.proton.engine.impl.ssl	"{""added"": [[363, ""            if(_logger.isLoggable(Level.FINEST)){""], [364, ""                _logger.log(Level.FINEST, e.getMessage(), e);""], [365, ""            } else {""], [366, ""                _logger.log(Level.WARNING, e.getMessage());""], [367, ""            }""], [370, """"], [371, ""            throw new TransportException(e);""]], ""deleted"": [[363, ""            _logger.log(Level.WARNING, e.getMessage());""]]}"	333
CVE-2018-17187	GHSA-xvch-r4wf-h8w9	org.apache.qpid:proton-j	0.3	0.29.0	0.30.0	https://github.com/apache/qpid-proton-j	0cb8ca03cec42120dcfc434561592d89a89a805e	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/jar/proton-j-0.29.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/jar/proton-j-0.30.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslDomainImpl.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslDomainImpl.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslDomainImpl.class	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslDomainImpl.class	SslDomainImpl	[SslDomainImpl::setPeerAuthentication, SslDomainImpl::getPeerAuthentication]	org.apache.qpid.proton.engine.impl.ssl	org.apache.qpid.proton.engine.impl.ssl	"{""added"": [[29, ""    private VerifyMode _verifyMode;""], [103, ""        if(_verifyMode == null)""], [104, ""        {""], [105, ""           return _mode == Mode.SERVER ? VerifyMode.ANONYMOUS_PEER : VerifyMode.VERIFY_PEER_NAME;""], [106, ""        }""], [107, """"]], ""deleted"": [[22, ""import org.apache.qpid.proton.ProtonUnsupportedOperationException;""], [30, ""    private VerifyMode _verifyMode = VerifyMode.ANONYMOUS_PEER;""], [97, ""        if(verifyMode == VerifyMode.VERIFY_PEER_NAME)""], [98, ""        {""], [99, ""            throw new ProtonUnsupportedOperationException();""], [100, ""        }""]]}"	119
CVE-2018-17187	GHSA-xvch-r4wf-h8w9	org.apache.qpid:proton-j	0.3	0.29.0	0.30.0	https://github.com/apache/qpid-proton-j	0cb8ca03cec42120dcfc434561592d89a89a805e	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/jar/proton-j-0.29.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/jar/proton-j-0.30.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.class	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.class	SslEngineFacadeFactory	[SslEngineFacadeFactory::createAndInitialiseSslEngine]	org.apache.qpid.proton.engine.impl.ssl	org.apache.qpid.proton.engine.impl.ssl	"{""added"": [[56, ""import javax.net.ssl.SSLParameters;""], [236, """"], [237, ""            if(domain.getPeerAuthentication() == SslDomain.VerifyMode.VERIFY_PEER_NAME)""], [238, ""            {""], [239, ""                SSLParameters sslParameters = sslEngine.getSSLParameters();""], [240, ""                sslParameters.setEndpointIdentificationAlgorithm(\""HTTPS\"");""], [241, ""                sslEngine.setSSLParameters(sslParameters);""], [242, ""            }""]], ""deleted"": []}"	495
CVE-2018-17187	GHSA-xvch-r4wf-h8w9	org.apache.qpid:proton-j	0.3	0.29.0	0.30.0	https://github.com/apache/qpid-proton-j	0cb8ca03cec42120dcfc434561592d89a89a805e	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/jar/proton-j-0.29.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/jar/proton-j-0.30.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslImpl.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/java/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslImpl.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslImpl.class	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/class/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslImpl.class	SslImpl	[SslImpl::SslImpl]	org.apache.qpid.proton.engine.impl.ssl	org.apache.qpid.proton.engine.impl.ssl	"{""added"": [[28, ""import org.apache.qpid.proton.engine.SslDomain.VerifyMode;""], [58, """"], [59, ""        if(_domain.getMode() == null) {""], [60, ""            throw new IllegalStateException(\""Client/server mode must be configured, SslDomain must have init called.\"");""], [61, ""        }""], [62, """"], [63, ""        if(_peerDetails == null && _domain.getPeerAuthentication() == VerifyMode.VERIFY_PEER_NAME) {""], [64, ""            throw new IllegalArgumentException(\""Peer hostname verification is enabled, but no peer details were provided\"");""], [65, ""        }""]], ""deleted"": []}"	215
CVE-2018-17187	GHSA-xvch-r4wf-h8w9	org.apache.qpid:proton-j	0.3	0.29.0	0.30.0	https://github.com/apache/qpid-proton-j	0cb8ca03cec42120dcfc434561592d89a89a805e	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/jar/proton-j-0.29.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/jar/proton-j-0.30.0.jar	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/java/proton-j/src/main/java/org/apache/qpid/proton/reactor/impl/IOHandler.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/java/proton-j/src/main/java/org/apache/qpid/proton/reactor/impl/IOHandler.java	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/before/class/proton-j/src/main/java/org/apache/qpid/proton/reactor/impl/IOHandler.class	proc/changes/CVE-2018-17187/0cb8ca03cec42120dcfc434561592d89a89a805e/after/class/proton-j/src/main/java/org/apache/qpid/proton/reactor/impl/IOHandler.class	IOHandler	[IOHandler::Callback]	org.apache.qpid.proton.reactor.impl	org.apache.qpid.proton.reactor.impl	"{""added"": [[40, ""import org.apache.qpid.proton.engine.TransportException;""], [236, ""                } catch (IOException | TransportException e) {""]], ""deleted"": [[235, ""                } catch (IOException e) {""]]}"	319
CVE-2020-11050	GHSA-gw55-jm4h-x339	org.java-websocket:Java-WebSocket	0	1.4.1	1.5.0	https://github.com/TooTallNate/Java-WebSocket	2dbe2d3c4a3ba63a0132a256ccefbfceb69531c9	proc/changes/CVE-2020-11050/2dbe2d3c4a3ba63a0132a256ccefbfceb69531c9/before/jar/Java-WebSocket-1.4.1.jar	proc/changes/CVE-2020-11050/2dbe2d3c4a3ba63a0132a256ccefbfceb69531c9/after/jar/Java-WebSocket-1.5.0.jar	proc/changes/CVE-2020-11050/2dbe2d3c4a3ba63a0132a256ccefbfceb69531c9/before/java/src/main/java/org/java_websocket/client/WebSocketClient.java	proc/changes/CVE-2020-11050/2dbe2d3c4a3ba63a0132a256ccefbfceb69531c9/after/java/src/main/java/org/java_websocket/client/WebSocketClient.java	proc/changes/CVE-2020-11050/2dbe2d3c4a3ba63a0132a256ccefbfceb69531c9/before/class/src/main/java/org/java_websocket/client/WebSocketClient.class	proc/changes/CVE-2020-11050/2dbe2d3c4a3ba63a0132a256ccefbfceb69531c9/after/class/src/main/java/org/java_websocket/client/WebSocketClient.class	WebSocketClient	[WebSocketClient::run, WebSocketClient::onSetSSLParameters]	org.java_websocket.client	org.java_websocket.client	"{""added"": [[472, ""\t\t\tif (socket instanceof SSLSocket) {""], [473, ""\t\t\t\tSSLSocket sslSocket = (SSLSocket)socket;""], [474, ""\t\t\t\tSSLParameters sslParameters = sslSocket.getSSLParameters();""], [475, ""\t\t\t\tonSetSSLParameters(sslParameters);""], [476, ""\t\t\t\tsslSocket.setSSLParameters(sslParameters);""], [477, ""\t\t\t}""], [478, """"], [519, ""\t/**""], [520, ""\t * Apply specific""], [521, ""\t * @param sslParameters the SSLParameters which will be used for the SSLSocket""], [522, ""\t */""], [523, ""\tprotected void onSetSSLParameters(SSLParameters sslParameters) {""], [524, ""\t\t// Make sure we perform hostname validation""], [525, ""\t\tsslParameters.setEndpointIdentificationAlgorithm(\""HTTPS\"");""], [526, ""\t}""], [527, """"]], ""deleted"": [[452, """"], [467, """"]]}"	495
CVE-2020-1953	GHSA-7qx4-pp76-vrqh	org.apache.commons:commons-configuration2	2.2	2.6	2.7	https://github.com/apache/commons-configuration	add7375cf37fd316d4838c6c56b054fc293b4641	proc/changes/CVE-2020-1953/add7375cf37fd316d4838c6c56b054fc293b4641/before/jar/commons-configuration2-2.6.jar	proc/changes/CVE-2020-1953/add7375cf37fd316d4838c6c56b054fc293b4641/after/jar/commons-configuration2-2.7.jar	proc/changes/CVE-2020-1953/add7375cf37fd316d4838c6c56b054fc293b4641/before/java/src/main/java/org/apache/commons/configuration2/YAMLConfiguration.java	proc/changes/CVE-2020-1953/add7375cf37fd316d4838c6c56b054fc293b4641/after/java/src/main/java/org/apache/commons/configuration2/YAMLConfiguration.java	proc/changes/CVE-2020-1953/add7375cf37fd316d4838c6c56b054fc293b4641/before/class/src/main/java/org/apache/commons/configuration2/YAMLConfiguration.class	proc/changes/CVE-2020-1953/add7375cf37fd316d4838c6c56b054fc293b4641/after/class/src/main/java/org/apache/commons/configuration2/YAMLConfiguration.class	YAMLConfiguration	[YAMLConfiguration::read, YAMLConfiguration::createClassLoadingDisablingConstructor, YAMLConfiguration::read, YAMLConfiguration::read, YAMLConfiguration::read, YAMLConfiguration::createYamlForReading]	org.apache.commons.configuration2	org.apache.commons.configuration2	"{""added"": [[21, ""import org.apache.commons.configuration2.ex.ConfigurationRuntimeException;""], [27, ""import org.yaml.snakeyaml.constructor.Constructor;""], [28, ""import org.yaml.snakeyaml.representer.Representer;""], [71, ""            final Yaml yaml = createYamlForReading(new LoaderOptions());""], [86, ""            final Yaml yaml = createYamlForReading(options);""], [123, ""            final Yaml yaml = createYamlForReading(new LoaderOptions());""], [138, ""            final Yaml yaml = createYamlForReading(options);""], [148, ""    /**""], [149, ""     * Creates a {@code Yaml} object for reading a Yaml file. The object is""], [150, ""     * configured with some default settings.""], [151, ""     *""], [152, ""     * @param options options for loading the file""], [153, ""     * @return the {@code Yaml} instance for loading a file""], [154, ""     */""], [155, ""    private static Yaml createYamlForReading(LoaderOptions options)""], [156, ""    {""], [157, ""        return new Yaml(createClassLoadingDisablingConstructor(), new Representer(), new DumperOptions(), options);""], [158, ""    }""], [159, """"], [160, ""    /**""], [161, ""     * Returns a {@code Constructor} object for the YAML parser that prevents""], [162, ""     * all classes from being loaded. This effectively disables the dynamic""], [163, ""     * creation of Java objects that are declared in YAML files to be loaded.""], [164, ""     *""], [165, ""     * @return the {@code Constructor} preventing object creation""], [166, ""     */""], [167, ""    private static Constructor createClassLoadingDisablingConstructor()""], [168, ""    {""], [169, ""        return new Constructor()""], [170, ""        {""], [171, ""            @Override""], [172, ""            protected Class<?> getClassForName(String name)""], [173, ""            {""], [174, ""                throw new ConfigurationRuntimeException(\""Class loading is disabled.\"");""], [175, ""            }""], [176, ""        };""], [177, ""    }""]], ""deleted"": [[68, ""            final Yaml yaml = new Yaml();""], [83, ""            final Yaml yaml = new Yaml(options);""], [120, ""            final Yaml yaml = new Yaml();""], [135, ""            final Yaml yaml = new Yaml(options);""]]}"	112
CVE-2020-1929	GHSA-2m7g-9q74-9m3q	org.apache.beam:beam-sdks-java-io-mongodb	2.10.0	2.16.0	2.17.0	https://github.com/apache/beam	a7dd23d95d2d214b4110781b5a28802bd43b834b	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/jar/beam-sdks-java-io-mongodb-2.16.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/jar/beam-sdks-java-io-mongodb-2.17.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.class	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.class	MongoDbIO	[MongoDbIO::getOptions, MongoDbIO::getOptions]	org.apache.beam.sdk.io.mongodb	org.apache.beam.sdk.io.mongodb	"{""added"": [[42, ""import javax.net.ssl.SSLContext;""], [344, ""      int maxConnectionIdleTime,""], [345, ""      boolean sslEnabled,""], [346, ""      boolean sslInvalidHostNameAllowed,""], [347, ""      boolean ignoreSSLCertificate) {""], [351, ""      optionsBuilder.sslEnabled(sslEnabled).sslInvalidHostNameAllowed(sslInvalidHostNameAllowed);""], [352, ""      if (ignoreSSLCertificate) {""], [353, ""        SSLContext sslContext = SSLUtils.ignoreSSLCertificate();""], [354, ""        optionsBuilder.sslContext(sslContext);""], [355, ""        optionsBuilder.socketFactory(sslContext.getSocketFactory());""], [356, ""      }""], [394, ""                      spec.sslInvalidHostNameAllowed(),""], [395, ""                      spec.ignoreSSLCertificate())))) {""], [423, ""                      spec.sslInvalidHostNameAllowed(),""], [424, ""                      spec.ignoreSSLCertificate())))) {""], [715, ""                  spec.sslInvalidHostNameAllowed(),""], [716, ""                  spec.ignoreSSLCertificate())));""], [898, ""                        spec.sslInvalidHostNameAllowed(),""], [899, ""                        spec.ignoreSSLCertificate())));""]], ""deleted"": [[343, ""      int maxConnectionIdleTime, boolean sslEnabled, boolean sslInvalidHostNameAllowed) {""], [347, ""      optionsBuilder""], [348, ""          .sslEnabled(sslEnabled)""], [349, ""          .sslInvalidHostNameAllowed(sslInvalidHostNameAllowed)""], [350, ""          .sslContext(SSLUtils.ignoreSSLCertificate());""], [388, ""                      spec.sslInvalidHostNameAllowed())))) {""], [416, ""                      spec.sslInvalidHostNameAllowed())))) {""], [707, ""                  spec.sslInvalidHostNameAllowed())));""], [889, ""                        spec.sslInvalidHostNameAllowed())));""]]}"	584
CVE-2020-1929	GHSA-2m7g-9q74-9m3q	org.apache.beam:beam-sdks-java-io-mongodb	2.10.0	2.16.0	2.17.0	https://github.com/apache/beam	a7dd23d95d2d214b4110781b5a28802bd43b834b	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/jar/beam-sdks-java-io-mongodb-2.16.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/jar/beam-sdks-java-io-mongodb-2.17.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO$BoundedMongoDbSource.class	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO$BoundedMongoDbSource.class	MongoDbIO$BoundedMongoDbSource	[MongoDbIO::BoundedMongoDbSource::getEstimatedSizeBytes, MongoDbIO::BoundedMongoDbSource::split]	org.apache.beam.sdk.io.mongodb	org.apache.beam.sdk.io.mongodb	"{""added"": [[42, ""import javax.net.ssl.SSLContext;""], [344, ""      int maxConnectionIdleTime,""], [345, ""      boolean sslEnabled,""], [346, ""      boolean sslInvalidHostNameAllowed,""], [347, ""      boolean ignoreSSLCertificate) {""], [351, ""      optionsBuilder.sslEnabled(sslEnabled).sslInvalidHostNameAllowed(sslInvalidHostNameAllowed);""], [352, ""      if (ignoreSSLCertificate) {""], [353, ""        SSLContext sslContext = SSLUtils.ignoreSSLCertificate();""], [354, ""        optionsBuilder.sslContext(sslContext);""], [355, ""        optionsBuilder.socketFactory(sslContext.getSocketFactory());""], [356, ""      }""], [394, ""                      spec.sslInvalidHostNameAllowed(),""], [395, ""                      spec.ignoreSSLCertificate())))) {""], [423, ""                      spec.sslInvalidHostNameAllowed(),""], [424, ""                      spec.ignoreSSLCertificate())))) {""], [715, ""                  spec.sslInvalidHostNameAllowed(),""], [716, ""                  spec.ignoreSSLCertificate())));""], [898, ""                        spec.sslInvalidHostNameAllowed(),""], [899, ""                        spec.ignoreSSLCertificate())));""]], ""deleted"": [[343, ""      int maxConnectionIdleTime, boolean sslEnabled, boolean sslInvalidHostNameAllowed) {""], [347, ""      optionsBuilder""], [348, ""          .sslEnabled(sslEnabled)""], [349, ""          .sslInvalidHostNameAllowed(sslInvalidHostNameAllowed)""], [350, ""          .sslContext(SSLUtils.ignoreSSLCertificate());""], [388, ""                      spec.sslInvalidHostNameAllowed())))) {""], [416, ""                      spec.sslInvalidHostNameAllowed())))) {""], [707, ""                  spec.sslInvalidHostNameAllowed())));""], [889, ""                        spec.sslInvalidHostNameAllowed())));""]]}"	584
CVE-2020-1929	GHSA-2m7g-9q74-9m3q	org.apache.beam:beam-sdks-java-io-mongodb	2.10.0	2.16.0	2.17.0	https://github.com/apache/beam	a7dd23d95d2d214b4110781b5a28802bd43b834b	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/jar/beam-sdks-java-io-mongodb-2.16.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/jar/beam-sdks-java-io-mongodb-2.17.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO$Write$WriteFn.class	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO$Write$WriteFn.class	MongoDbIO$Write$WriteFn	[MongoDbIO::Write::WriteFn::createMongoClient]	org.apache.beam.sdk.io.mongodb	org.apache.beam.sdk.io.mongodb	"{""added"": [[42, ""import javax.net.ssl.SSLContext;""], [344, ""      int maxConnectionIdleTime,""], [345, ""      boolean sslEnabled,""], [346, ""      boolean sslInvalidHostNameAllowed,""], [347, ""      boolean ignoreSSLCertificate) {""], [351, ""      optionsBuilder.sslEnabled(sslEnabled).sslInvalidHostNameAllowed(sslInvalidHostNameAllowed);""], [352, ""      if (ignoreSSLCertificate) {""], [353, ""        SSLContext sslContext = SSLUtils.ignoreSSLCertificate();""], [354, ""        optionsBuilder.sslContext(sslContext);""], [355, ""        optionsBuilder.socketFactory(sslContext.getSocketFactory());""], [356, ""      }""], [394, ""                      spec.sslInvalidHostNameAllowed(),""], [395, ""                      spec.ignoreSSLCertificate())))) {""], [423, ""                      spec.sslInvalidHostNameAllowed(),""], [424, ""                      spec.ignoreSSLCertificate())))) {""], [715, ""                  spec.sslInvalidHostNameAllowed(),""], [716, ""                  spec.ignoreSSLCertificate())));""], [898, ""                        spec.sslInvalidHostNameAllowed(),""], [899, ""                        spec.ignoreSSLCertificate())));""]], ""deleted"": [[343, ""      int maxConnectionIdleTime, boolean sslEnabled, boolean sslInvalidHostNameAllowed) {""], [347, ""      optionsBuilder""], [348, ""          .sslEnabled(sslEnabled)""], [349, ""          .sslInvalidHostNameAllowed(sslInvalidHostNameAllowed)""], [350, ""          .sslContext(SSLUtils.ignoreSSLCertificate());""], [388, ""                      spec.sslInvalidHostNameAllowed())))) {""], [416, ""                      spec.sslInvalidHostNameAllowed())))) {""], [707, ""                  spec.sslInvalidHostNameAllowed())));""], [889, ""                        spec.sslInvalidHostNameAllowed())));""]]}"	584
CVE-2020-1929	GHSA-2m7g-9q74-9m3q	org.apache.beam:beam-sdks-java-io-mongodb	2.10.0	2.16.0	2.17.0	https://github.com/apache/beam	a7dd23d95d2d214b4110781b5a28802bd43b834b	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/jar/beam-sdks-java-io-mongodb-2.16.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/jar/beam-sdks-java-io-mongodb-2.17.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO$BoundedMongoDbReader.class	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/MongoDbIO$BoundedMongoDbReader.class	MongoDbIO$BoundedMongoDbReader	[MongoDbIO::BoundedMongoDbReader::createClient]	org.apache.beam.sdk.io.mongodb	org.apache.beam.sdk.io.mongodb	"{""added"": [[42, ""import javax.net.ssl.SSLContext;""], [344, ""      int maxConnectionIdleTime,""], [345, ""      boolean sslEnabled,""], [346, ""      boolean sslInvalidHostNameAllowed,""], [347, ""      boolean ignoreSSLCertificate) {""], [351, ""      optionsBuilder.sslEnabled(sslEnabled).sslInvalidHostNameAllowed(sslInvalidHostNameAllowed);""], [352, ""      if (ignoreSSLCertificate) {""], [353, ""        SSLContext sslContext = SSLUtils.ignoreSSLCertificate();""], [354, ""        optionsBuilder.sslContext(sslContext);""], [355, ""        optionsBuilder.socketFactory(sslContext.getSocketFactory());""], [356, ""      }""], [394, ""                      spec.sslInvalidHostNameAllowed(),""], [395, ""                      spec.ignoreSSLCertificate())))) {""], [423, ""                      spec.sslInvalidHostNameAllowed(),""], [424, ""                      spec.ignoreSSLCertificate())))) {""], [715, ""                  spec.sslInvalidHostNameAllowed(),""], [716, ""                  spec.ignoreSSLCertificate())));""], [898, ""                        spec.sslInvalidHostNameAllowed(),""], [899, ""                        spec.ignoreSSLCertificate())));""]], ""deleted"": [[343, ""      int maxConnectionIdleTime, boolean sslEnabled, boolean sslInvalidHostNameAllowed) {""], [347, ""      optionsBuilder""], [348, ""          .sslEnabled(sslEnabled)""], [349, ""          .sslInvalidHostNameAllowed(sslInvalidHostNameAllowed)""], [350, ""          .sslContext(SSLUtils.ignoreSSLCertificate());""], [388, ""                      spec.sslInvalidHostNameAllowed())))) {""], [416, ""                      spec.sslInvalidHostNameAllowed())))) {""], [707, ""                  spec.sslInvalidHostNameAllowed())));""], [889, ""                        spec.sslInvalidHostNameAllowed())));""]]}"	584
CVE-2020-1929	GHSA-2m7g-9q74-9m3q	org.apache.beam:beam-sdks-java-io-mongodb	2.10.0	2.16.0	2.17.0	https://github.com/apache/beam	a7dd23d95d2d214b4110781b5a28802bd43b834b	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/jar/beam-sdks-java-io-mongodb-2.16.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/jar/beam-sdks-java-io-mongodb-2.17.0.jar	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/SSLUtils.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/java/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/SSLUtils.java	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/before/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/SSLUtils.class	proc/changes/CVE-2020-1929/a7dd23d95d2d214b4110781b5a28802bd43b834b/after/class/sdks/java/io/mongodb/src/main/java/org/apache/beam/sdk/io/mongodb/SSLUtils.class	SSLUtils	[SSLUtils::ignoreSSLCertificate]	org.apache.beam.sdk.io.mongodb	org.apache.beam.sdk.io.mongodb	"{""added"": [], ""deleted"": [[22, ""import javax.net.ssl.HttpsURLConnection;""], [58, ""      HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());""]]}"	41
CVE-2020-8929	GHSA-g5vf-v6wf-7w2r	com.google.crypto.tink:tink	0	1.4.0	1.5.0	https://github.com/google/tink	93d839a5865b9d950dffdc9d0bc99b71280a8899	proc/changes/CVE-2020-8929/93d839a5865b9d950dffdc9d0bc99b71280a8899/before/jar/tink-1.4.0.jar	proc/changes/CVE-2020-8929/93d839a5865b9d950dffdc9d0bc99b71280a8899/after/jar/tink-1.5.0.jar	proc/changes/CVE-2020-8929/93d839a5865b9d950dffdc9d0bc99b71280a8899/before/java/java_src/src/main/java/com/google/crypto/tink/PrimitiveSet.java	proc/changes/CVE-2020-8929/93d839a5865b9d950dffdc9d0bc99b71280a8899/after/java/java_src/src/main/java/com/google/crypto/tink/PrimitiveSet.java	proc/changes/CVE-2020-8929/93d839a5865b9d950dffdc9d0bc99b71280a8899/before/class/java_src/src/main/java/com/google/crypto/tink/PrimitiveSet.class	proc/changes/CVE-2020-8929/93d839a5865b9d950dffdc9d0bc99b71280a8899/after/class/java_src/src/main/java/com/google/crypto/tink/PrimitiveSet.class	PrimitiveSet	[PrimitiveSet::getPrimitive, PrimitiveSet::addPrimitive]	com.google.crypto.tink	com.google.crypto.tink	"{""added"": [[22, ""import com.google.crypto.tink.subtle.Hex;""], [119, ""    List<Entry<P>> found = primitives.get(new Prefix(identifier));""], [138, ""  private final ConcurrentMap<Prefix, List<Entry<P>>> primitives =""], [139, ""      new ConcurrentHashMap<Prefix, List<Entry<P>>>();""], [187, ""    // Cannot use [] as keys in hash map, convert to Prefix wrapper class.""], [188, ""    Prefix identifier = new Prefix(entry.getIdentifier());""], [202, """"], [203, ""  private static class Prefix implements Comparable<Prefix> {""], [204, ""    private final byte[] prefix;""], [205, """"], [206, ""    private Prefix(byte[] prefix) {""], [207, ""      this.prefix = Arrays.copyOf(prefix, prefix.length);""], [208, ""    }""], [209, """"], [210, ""    @Override""], [211, ""    public int hashCode() {""], [212, ""      return Arrays.hashCode(prefix);""], [213, ""    }""], [214, """"], [215, ""    @Override""], [216, ""    public boolean equals(Object o) {""], [217, ""      if (!(o instanceof Prefix)) {""], [218, ""        return false;""], [219, ""      }""], [220, ""      Prefix other = (Prefix) o;""], [221, ""      return Arrays.equals(prefix, other.prefix);""], [222, ""    }""], [223, """"], [224, ""    @Override""], [225, ""    public int compareTo(Prefix o) {""], [226, ""      if (prefix.length != o.prefix.length) {""], [227, ""        return prefix.length - o.prefix.length;""], [228, ""      }""], [229, ""      for (int i = 0; i < prefix.length; i++) {""], [230, ""        if (prefix[i] != o.prefix[i]) {""], [231, ""          return prefix[i] - o.prefix[i];""], [232, ""        }""], [233, ""      }""], [234, ""      return 0;""], [235, ""    }""], [236, """"], [237, ""    @Override""], [238, ""    public String toString() {""], [239, ""      return Hex.encode(prefix);""], [240, ""    }""], [241, ""  }""], [242, """"]], ""deleted"": [[22, ""import java.nio.charset.Charset;""], [52, ""  private static final Charset UTF_8 = Charset.forName(\""UTF-8\"");""], [120, ""    List<Entry<P>> found = primitives.get(new String(identifier, UTF_8));""], [139, ""  private ConcurrentMap<java.lang.String, List<Entry<P>>> primitives =""], [140, ""      new ConcurrentHashMap<java.lang.String, List<Entry<P>>>();""], [188, ""    // Cannot use [] as keys in hash map, convert to string.""], [189, ""    String identifier = new String(entry.getIdentifier(), UTF_8);""]]}"	154
CVE-2020-15250	GHSA-269g-pwp5-87pp	junit:junit	4.7	4.13	4.13.1	https://github.com/junit-team/junit4	610155b8c22138329f0723eec22521627dbc52ae	proc/changes/CVE-2020-15250/610155b8c22138329f0723eec22521627dbc52ae/before/jar/junit-4.13.jar	proc/changes/CVE-2020-15250/610155b8c22138329f0723eec22521627dbc52ae/after/jar/junit-4.13.1.jar	proc/changes/CVE-2020-15250/610155b8c22138329f0723eec22521627dbc52ae/before/java/src/main/java/org/junit/rules/TemporaryFolder.java	proc/changes/CVE-2020-15250/610155b8c22138329f0723eec22521627dbc52ae/after/java/src/main/java/org/junit/rules/TemporaryFolder.java	proc/changes/CVE-2020-15250/610155b8c22138329f0723eec22521627dbc52ae/before/class/src/main/java/org/junit/rules/TemporaryFolder.class	proc/changes/CVE-2020-15250/610155b8c22138329f0723eec22521627dbc52ae/after/class/src/main/java/org/junit/rules/TemporaryFolder.class	TemporaryFolder	[TemporaryFolder::createTemporaryFolderWithFileApi, TemporaryFolder::createTemporaryFolderIn, TemporaryFolder::createTemporaryFolderWithNioApi]	org.junit.rules	org.junit.rules	"{""added"": [[7, ""import java.lang.reflect.Array;""], [8, ""import java.lang.reflect.InvocationTargetException;""], [9, ""import java.lang.reflect.Method;""], [235, ""    private static File createTemporaryFolderIn(File parentFolder) throws IOException {""], [236, ""        try {""], [237, ""            return createTemporaryFolderWithNioApi(parentFolder);""], [238, ""        } catch (ClassNotFoundException ignore) {""], [239, ""            // Fallback for Java 5 and 6""], [240, ""            return createTemporaryFolderWithFileApi(parentFolder);""], [241, ""        } catch (InvocationTargetException e) {""], [242, ""            Throwable cause = e.getCause();""], [243, ""            if (cause instanceof IOException) {""], [244, ""                throw (IOException) cause;""], [245, ""            }""], [246, ""            if (cause instanceof RuntimeException) {""], [247, ""                throw (RuntimeException) cause;""], [248, ""            }""], [249, ""            IOException exception = new IOException(\""Failed to create temporary folder in \"" + parentFolder);""], [250, ""            exception.initCause(cause);""], [251, ""            throw exception;""], [252, ""        } catch (Exception e) {""], [253, ""            throw new RuntimeException(\""Failed to create temporary folder in \"" + parentFolder, e);""], [254, ""        }""], [255, ""    }""], [256, """"], [257, ""    private static File createTemporaryFolderWithNioApi(File parentFolder) throws ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {""], [258, ""        Class<?> filesClass = Class.forName(\""java.nio.file.Files\"");""], [259, ""        Object fileAttributeArray = Array.newInstance(Class.forName(\""java.nio.file.attribute.FileAttribute\""), 0);""], [260, ""        Class<?> pathClass = Class.forName(\""java.nio.file.Path\"");""], [261, ""        Object tempDir;""], [262, ""        if (parentFolder != null) {""], [263, ""            Method createTempDirectoryMethod = filesClass.getDeclaredMethod(\""createTempDirectory\"", pathClass, String.class, fileAttributeArray.getClass());""], [264, ""            Object parentPath = File.class.getDeclaredMethod(\""toPath\"").invoke(parentFolder);""], [265, ""            tempDir = createTempDirectoryMethod.invoke(null, parentPath, TMP_PREFIX, fileAttributeArray);""], [266, ""        } else {""], [267, ""            Method createTempDirectoryMethod = filesClass.getDeclaredMethod(\""createTempDirectory\"", String.class, fileAttributeArray.getClass());""], [268, ""            tempDir = createTempDirectoryMethod.invoke(null, TMP_PREFIX, fileAttributeArray);""], [269, ""        }""], [270, ""        return (File) pathClass.getDeclaredMethod(\""toFile\"").invoke(tempDir);""], [271, ""    }""], [272, """"], [273, ""    private static File createTemporaryFolderWithFileApi(File parentFolder) throws IOException {""]], ""deleted"": [[232, ""    private File createTemporaryFolderIn(File parentFolder) throws IOException {""]]}"	193
CVE-2020-26259	GHSA-jfvx-7wrx-43fh	com.thoughtworks.xstream:xstream	0	1.4.14-jdk7	1.4.15	https://github.com/x-stream/xstream	0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738	proc/changes/CVE-2020-26259/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738/before/jar/xstream-1.4.14-jdk7.jar	proc/changes/CVE-2020-26259/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738/after/jar/xstream-1.4.15.jar	proc/changes/CVE-2020-26259/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738/before/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2020-26259/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738/after/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2020-26259/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738/before/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	proc/changes/CVE-2020-26259/0bcbf50126a62dfcd65f93a0da0c6d1ae92aa738/after/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	XStream	[XStream::setupSecurity]	com.thoughtworks.xstream	com.thoughtworks.xstream	"{""added"": [[340, ""    private static final Pattern JAXWS_FILE_STREAM = Pattern.compile(\"".*\\\\.ReadAllStream\\\\$FileStream\"");""], [650, ""            \""jdk.nashorn.internal.objects.NativeString\"" });""], [651, ""        denyTypesByRegExp(new Pattern[]{LAZY_ITERATORS, JAVAX_CRYPTO, JAXWS_FILE_STREAM});""]], ""deleted"": [[649, ""            \""jdk.nashorn.internal.objects.NativeString\""});""], [650, ""        denyTypesByRegExp(new Pattern[]{LAZY_ITERATORS, JAVAX_CRYPTO});""]]}"	1296
CVE-2020-26258	GHSA-4cch-wxpw-8p28	com.thoughtworks.xstream:xstream	0	1.4.14-jdk7	1.4.15	https://github.com/x-stream/xstream	6740c04b217aef02d44fba26402b35e0f6f493ce	proc/changes/CVE-2020-26258/6740c04b217aef02d44fba26402b35e0f6f493ce/before/jar/xstream-1.4.14-jdk7.jar	proc/changes/CVE-2020-26258/6740c04b217aef02d44fba26402b35e0f6f493ce/after/jar/xstream-1.4.15.jar	proc/changes/CVE-2020-26258/6740c04b217aef02d44fba26402b35e0f6f493ce/before/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2020-26258/6740c04b217aef02d44fba26402b35e0f6f493ce/after/java/xstream/src/java/com/thoughtworks/xstream/XStream.java	proc/changes/CVE-2020-26258/6740c04b217aef02d44fba26402b35e0f6f493ce/before/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	proc/changes/CVE-2020-26258/6740c04b217aef02d44fba26402b35e0f6f493ce/after/class/xstream/src/java/com/thoughtworks/xstream/XStream.class	XStream	[XStream::setupSecurity]	com.thoughtworks.xstream	com.thoughtworks.xstream	"{""added"": [[645, ""        denyTypes(new String[]{""], [646, ""            \""java.beans.EventHandler\"", //""], [647, ""            \""java.lang.ProcessBuilder\"", //""], [648, ""            \""javax.imageio.ImageIO$ContainsFilter\"", //""], [649, ""            \""jdk.nashorn.internal.objects.NativeString\""});""]], ""deleted"": [[645, ""        denyTypes(new String[]{\""java.beans.EventHandler\"", \""java.lang.ProcessBuilder\"", \""javax.imageio.ImageIO$ContainsFilter\""});""]]}"	1295
CVE-2020-35460	GHSA-p9j6-4pjr-gp48	net.sf.mpxj:mpxj	0	8.3.4	8.3.5	https://github.com/joniles/mpxj	8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d	proc/changes/CVE-2020-35460/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d/before/jar/mpxj-8.3.4.jar	proc/changes/CVE-2020-35460/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d/after/jar/mpxj-8.3.5.jar	proc/changes/CVE-2020-35460/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d/before/java/src/main/java/net/sf/mpxj/common/InputStreamHelper.java	proc/changes/CVE-2020-35460/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d/after/java/src/main/java/net/sf/mpxj/common/InputStreamHelper.java	proc/changes/CVE-2020-35460/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d/before/class/src/main/java/net/sf/mpxj/common/InputStreamHelper.class	proc/changes/CVE-2020-35460/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d/after/class/src/main/java/net/sf/mpxj/common/InputStreamHelper.class	InputStreamHelper	[InputStreamHelper::processZipStream]	net.sf.mpxj.common	net.sf.mpxj.common	"{""added"": [[117, ""      String canonicalDestinationDirPath = dir.getCanonicalPath();""], [128, """"], [129, ""         // https://snyk.io/research/zip-slip-vulnerability""], [130, ""         String canonicalDestinationFile = file.getCanonicalPath();""], [131, ""         if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator))""], [132, ""         {""], [133, ""            throw new IOException(\""Entry is outside of the target dir: \"" + entry.getName());""], [134, ""         }""], [135, """"]], ""deleted"": []}"	91
CVE-2019-17572	GHSA-5x3v-2gxr-59m2	org.apache.rocketmq:rocketmq-broker	4.2.0	4.6.0	4.6.1	https://github.com/apache/rocketmq	f8f6fbe4aa7f5dee937e688322628c366b12a552	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/jar/rocketmq-broker-4.6.0.jar	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/jar/rocketmq-broker-4.6.1.jar	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/java/broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.java	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/java/broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.java	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/class/broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.class	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/class/broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.class	AbstractSendMessageProcessor	[AbstractSendMessageProcessor::msgCheck]	org.apache.rocketmq.broker.processor	org.apache.rocketmq.broker.processor	"{""added"": [[19, ""import io.netty.channel.ChannelHandlerContext;""], [28, ""import org.apache.rocketmq.broker.topic.TopicValidator;""], [174, """"], [175, ""        if (!TopicValidator.validateTopic(requestHeader.getTopic(), response)) {""]], ""deleted"": [[24, """"], [25, ""import io.netty.channel.ChannelHandlerContext;""], [174, ""        if (!this.brokerController.getTopicConfigManager().isTopicCanSendMessage(requestHeader.getTopic())) {""], [175, ""            String errorMsg = \""the topic[\"" + requestHeader.getTopic() + \""] is conflict with system reserved words.\"";""], [176, ""            log.warn(errorMsg);""], [177, ""            response.setCode(ResponseCode.SYSTEM_ERROR);""], [178, ""            response.setRemark(errorMsg);""]]}"	279
CVE-2019-17572	GHSA-5x3v-2gxr-59m2	org.apache.rocketmq:rocketmq-broker	4.2.0	4.6.0	4.6.1	https://github.com/apache/rocketmq	f8f6fbe4aa7f5dee937e688322628c366b12a552	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/jar/rocketmq-broker-4.6.0.jar	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/jar/rocketmq-broker-4.6.1.jar	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/java/broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/java/broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/class/broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.class	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/class/broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.class	AdminBrokerProcessor	[AdminBrokerProcessor::updateAndCreateTopic, AdminBrokerProcessor::updateAndCreateAccessConfig, AdminBrokerProcessor::updateGlobalWhiteAddrsConfig]	org.apache.rocketmq.broker.processor	org.apache.rocketmq.broker.processor	"{""added"": [[41, ""import org.apache.rocketmq.broker.topic.TopicValidator;""], [42, ""import org.apache.rocketmq.common.AclConfig;""], [80, ""import org.apache.rocketmq.common.protocol.header.CreateAccessConfigRequestHeader;""], [82, ""import org.apache.rocketmq.common.protocol.header.DeleteAccessConfigRequestHeader;""], [86, ""import org.apache.rocketmq.common.protocol.header.GetBrokerAclConfigResponseHeader;""], [87, ""import org.apache.rocketmq.common.protocol.header.GetBrokerClusterAclConfigResponseBody;""], [88, ""import org.apache.rocketmq.common.protocol.header.GetBrokerClusterAclConfigResponseHeader;""], [111, ""import org.apache.rocketmq.common.protocol.header.UpdateGlobalWhiteAddrsConfigRequestHeader;""], [120, ""import org.apache.rocketmq.logging.InternalLogger;""], [121, ""import org.apache.rocketmq.logging.InternalLoggerFactory;""], [262, ""        if (!TopicValidator.validateTopic(requestHeader.getTopic(), response)) {""], [263, ""            return response;""], [264, ""        }""], [265, """"], [320, ""        accessConfig.setTopicPerms(UtilAll.string2List(requestHeader.getTopicPerms(), \"",\""));""], [321, ""        accessConfig.setGroupPerms(UtilAll.string2List(requestHeader.getGroupPerms(), \"",\""));""], [394, ""            if (accessValidator.updateGlobalWhiteAddrsConfig(UtilAll.string2List(requestHeader.getGlobalWhiteAddrs(), \"",\""))) {""]], ""deleted"": [[45, ""import org.apache.rocketmq.common.AclConfig;""], [52, ""import org.apache.rocketmq.common.protocol.header.CreateAccessConfigRequestHeader;""], [53, ""import org.apache.rocketmq.common.protocol.header.DeleteAccessConfigRequestHeader;""], [54, ""import org.apache.rocketmq.common.protocol.header.GetBrokerAclConfigResponseHeader;""], [55, ""import org.apache.rocketmq.common.protocol.header.UpdateGlobalWhiteAddrsConfigRequestHeader;""], [56, ""import org.apache.rocketmq.common.protocol.header.GetBrokerClusterAclConfigResponseHeader;""], [57, ""import org.apache.rocketmq.common.protocol.header.GetBrokerClusterAclConfigResponseBody;""], [58, ""import org.apache.rocketmq.logging.InternalLogger;""], [59, ""import org.apache.rocketmq.logging.InternalLoggerFactory;""], [315, ""        accessConfig.setTopicPerms(UtilAll.String2List(requestHeader.getTopicPerms(),\"",\""));""], [316, ""        accessConfig.setGroupPerms(UtilAll.String2List(requestHeader.getGroupPerms(),\"",\""));""], [389, ""            if (accessValidator.updateGlobalWhiteAddrsConfig(UtilAll.String2List(requestHeader.getGlobalWhiteAddrs(),\"",\""))) {""]]}"	1367
CVE-2019-17572	GHSA-5x3v-2gxr-59m2	org.apache.rocketmq:rocketmq-broker	4.2.0	4.6.0	4.6.1	https://github.com/apache/rocketmq	f8f6fbe4aa7f5dee937e688322628c366b12a552	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/jar/rocketmq-broker-4.6.0.jar	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/jar/rocketmq-broker-4.6.1.jar	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/java/broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/java/broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.java	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/before/class/broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.class	proc/changes/CVE-2019-17572/f8f6fbe4aa7f5dee937e688322628c366b12a552/after/class/broker/src/main/java/org/apache/rocketmq/broker/topic/TopicConfigManager.class	TopicConfigManager	[TopicConfigManager::isTopicCanSendMessage]	org.apache.rocketmq.broker.topic	org.apache.rocketmq.broker.topic	"{""added"": [], ""deleted"": [[155, ""    public boolean isTopicCanSendMessage(final String topic) {""], [156, ""        return !topic.equals(MixAll.AUTO_CREATE_TOPIC_KEY_TOPIC);""], [157, ""    }""], [158, """"]]}"	393
CVE-2019-13990	GHSA-9qcf-c26r-x5rf	org.quartz-scheduler:quartz	0	2.3.1	2.3.2	https://github.com/quartz-scheduler/quartz	a1395ba118df306c7fe67c24fb0c9a95a4473140	proc/changes/CVE-2019-13990/a1395ba118df306c7fe67c24fb0c9a95a4473140/before/jar/quartz-2.3.1.jar	proc/changes/CVE-2019-13990/a1395ba118df306c7fe67c24fb0c9a95a4473140/after/jar/quartz-2.3.2.jar	proc/changes/CVE-2019-13990/a1395ba118df306c7fe67c24fb0c9a95a4473140/before/java/quartz-core/src/main/java/org/quartz/xml/XMLSchedulingDataProcessor.java	proc/changes/CVE-2019-13990/a1395ba118df306c7fe67c24fb0c9a95a4473140/after/java/quartz-core/src/main/java/org/quartz/xml/XMLSchedulingDataProcessor.java	proc/changes/CVE-2019-13990/a1395ba118df306c7fe67c24fb0c9a95a4473140/before/class/quartz-core/src/main/java/org/quartz/xml/XMLSchedulingDataProcessor.class	proc/changes/CVE-2019-13990/a1395ba118df306c7fe67c24fb0c9a95a4473140/after/class/quartz-core/src/main/java/org/quartz/xml/XMLSchedulingDataProcessor.class	XMLSchedulingDataProcessor	[XMLSchedulingDataProcessor::initDocumentParser]	org.quartz.xml	org.quartz.xml	"{""added"": [[200, ""        docBuilderFactory.setFeature(\""http://apache.org/xml/features/disallow-doctype-decl\"", true);""], [201, ""        docBuilderFactory.setFeature(\""http://apache.org/xml/features/nonvalidating/load-external-dtd\"", false);""], [202, ""        docBuilderFactory.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);""], [203, ""        docBuilderFactory.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);""], [204, ""        docBuilderFactory.setXIncludeAware(false);""], [205, ""        docBuilderFactory.setExpandEntityReferences(false);""], [206, """"]], ""deleted"": []}"	760
CVE-2019-10770	GHSA-r2wf-q3x4-hrv9	io.ratpack:ratpack-core	0	1.7.5	1.7.6	https://github.com/ratpack/ratpack	a3cbb13be1527874528c3b99fc33517c0297b6d3	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/before/jar/ratpack-core-1.7.5.jar	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/after/jar/ratpack-core-1.7.6.jar	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/before/java/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer.java	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/after/java/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer.java	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/before/class/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer.class	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/after/class/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer.class	ErrorPageRenderer	[ErrorPageRenderer::throwable]	ratpack.error.internal	ratpack.error.internal	"{""added"": [[84, ""      w.escapeln(throwable.toString());""], [123, """"], [124, ""    BodyWriter escapeln(String string) {""], [125, ""      return println(HTML_ESCAPER.escape(string));""], [126, ""    }""]], ""deleted"": [[84, ""      w.println(throwable.toString());""]]}"	147
CVE-2019-10770	GHSA-r2wf-q3x4-hrv9	io.ratpack:ratpack-core	0	1.7.5	1.7.6	https://github.com/ratpack/ratpack	a3cbb13be1527874528c3b99fc33517c0297b6d3	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/before/jar/ratpack-core-1.7.5.jar	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/after/jar/ratpack-core-1.7.6.jar	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/before/java/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer.java	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/after/java/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer.java	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/before/class/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer$BodyWriter.class	proc/changes/CVE-2019-10770/a3cbb13be1527874528c3b99fc33517c0297b6d3/after/class/ratpack-core/src/main/java/ratpack/error/internal/ErrorPageRenderer$BodyWriter.class	ErrorPageRenderer$BodyWriter	[ErrorPageRenderer::BodyWriter::escapeln]	ratpack.error.internal	ratpack.error.internal	"{""added"": [[84, ""      w.escapeln(throwable.toString());""], [123, """"], [124, ""    BodyWriter escapeln(String string) {""], [125, ""      return println(HTML_ESCAPER.escape(string));""], [126, ""    }""]], ""deleted"": [[84, ""      w.println(throwable.toString());""]]}"	147
CVE-2019-17638	GHSA-x3rh-m7vp-35f2	org.eclipse.jetty:jetty-server	9.4.27	9.4.29.v20200521	9.4.30.v20200611	https://github.com/eclipse/jetty.project	ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/before/jar/jetty-server-9.4.29.v20200521.jar	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/after/jar/jetty-server-9.4.30.v20200611.jar	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/before/java/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.java	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/after/java/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.java	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/before/class/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection$SendCallback.class	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/after/class/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection$SendCallback.class	HttpConnection$SendCallback	[HttpConnection::SendCallback::releaseHeader, HttpConnection::SendCallback::release, HttpConnection::SendCallback::releaseChunk, HttpConnection::SendCallback::process]	org.eclipse.jetty.server	org.eclipse.jetty.server	"{""added"": [[690, ""        private ByteBuffer _chunk;""], [737, ""                HttpGenerator.Result result = _generator.generateResponse(_info, _head, _header, _chunk, _content, _lastContent);""], [760, ""                        if (_header.capacity() >= _config.getResponseHeaderSize())""], [762, ""                        releaseHeader();""], [768, ""                        _chunk = _bufferPool.acquire(HttpGenerator.CHUNK_SIZE, CHUNK_BUFFER_DIRECT);""], [773, ""                        releaseChunk();""], [774, ""                        _chunk = _bufferPool.acquire(_config.getResponseHeaderSize(), CHUNK_BUFFER_DIRECT);""], [782, ""                            BufferUtil.clear(_chunk);""], [793, ""                        if (BufferUtil.hasContent(_chunk))""], [796, ""                            bytes += _chunk.remaining();""], [807, ""                                getEndPoint().write(this, _header, _chunk, _content);""], [810, ""                                getEndPoint().write(this, _header, _chunk);""], [819, ""                                getEndPoint().write(this, _chunk, _content);""], [822, ""                                getEndPoint().write(this, _chunk);""], [866, ""            releaseHeader();""], [867, ""            releaseChunk();""], [868, ""            return complete;""], [869, ""        }""], [870, """"], [871, ""        private void releaseHeader()""], [872, ""        {""], [876, ""        }""], [877, """"], [878, ""        private void releaseChunk()""], [879, ""        {""], [880, ""            if (_chunk != null)""], [881, ""                _bufferPool.release(_chunk);""], [882, ""            _chunk = null;""]], ""deleted"": [[75, ""    private volatile ByteBuffer _chunk = null;""], [445, ""        // Not in a race here with onFillable, because it has given up control before calling handle.""], [446, ""        // in a slight race with #completed, but not sure what to do with that anyway.""], [447, ""        if (_chunk != null)""], [448, ""            _bufferPool.release(_chunk);""], [449, ""        _chunk = null;""], [740, ""            ByteBuffer chunk = _chunk;""], [743, ""                HttpGenerator.Result result = _generator.generateResponse(_info, _head, _header, chunk, _content, _lastContent);""], [766, ""                        int capacity = _header.capacity();""], [767, ""                        _bufferPool.release(_header);""], [768, ""                        if (capacity >= _config.getResponseHeaderSize())""], [775, ""                        chunk = _chunk = _bufferPool.acquire(HttpGenerator.CHUNK_SIZE, CHUNK_BUFFER_DIRECT);""], [780, ""                        if (_chunk != null)""], [781, ""                            _bufferPool.release(_chunk);""], [782, ""                        chunk = _chunk = _bufferPool.acquire(_config.getResponseHeaderSize(), CHUNK_BUFFER_DIRECT);""], [790, ""                            BufferUtil.clear(chunk);""], [801, ""                        if (BufferUtil.hasContent(chunk))""], [804, ""                            bytes += chunk.remaining();""], [815, ""                                getEndPoint().write(this, _header, chunk, _content);""], [818, ""                                getEndPoint().write(this, _header, chunk);""], [827, ""                                getEndPoint().write(this, chunk, _content);""], [830, ""                                getEndPoint().write(this, chunk);""], [877, ""            return complete;""]]}"	727
CVE-2019-17638	GHSA-x3rh-m7vp-35f2	org.eclipse.jetty:jetty-server	9.4.27	9.4.29.v20200521	9.4.30.v20200611	https://github.com/eclipse/jetty.project	ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/before/jar/jetty-server-9.4.29.v20200521.jar	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/after/jar/jetty-server-9.4.30.v20200611.jar	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/before/java/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.java	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/after/java/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.java	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/before/class/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.class	proc/changes/CVE-2019-17638/ff8ae56fa939c3477a0cdd1ff56ce3d902f08fba/after/class/jetty-server/src/main/java/org/eclipse/jetty/server/HttpConnection.class	HttpConnection	[HttpConnection::onCompleted]	org.eclipse.jetty.server	org.eclipse.jetty.server	"{""added"": [[690, ""        private ByteBuffer _chunk;""], [737, ""                HttpGenerator.Result result = _generator.generateResponse(_info, _head, _header, _chunk, _content, _lastContent);""], [760, ""                        if (_header.capacity() >= _config.getResponseHeaderSize())""], [762, ""                        releaseHeader();""], [768, ""                        _chunk = _bufferPool.acquire(HttpGenerator.CHUNK_SIZE, CHUNK_BUFFER_DIRECT);""], [773, ""                        releaseChunk();""], [774, ""                        _chunk = _bufferPool.acquire(_config.getResponseHeaderSize(), CHUNK_BUFFER_DIRECT);""], [782, ""                            BufferUtil.clear(_chunk);""], [793, ""                        if (BufferUtil.hasContent(_chunk))""], [796, ""                            bytes += _chunk.remaining();""], [807, ""                                getEndPoint().write(this, _header, _chunk, _content);""], [810, ""                                getEndPoint().write(this, _header, _chunk);""], [819, ""                                getEndPoint().write(this, _chunk, _content);""], [822, ""                                getEndPoint().write(this, _chunk);""], [866, ""            releaseHeader();""], [867, ""            releaseChunk();""], [868, ""            return complete;""], [869, ""        }""], [870, """"], [871, ""        private void releaseHeader()""], [872, ""        {""], [876, ""        }""], [877, """"], [878, ""        private void releaseChunk()""], [879, ""        {""], [880, ""            if (_chunk != null)""], [881, ""                _bufferPool.release(_chunk);""], [882, ""            _chunk = null;""]], ""deleted"": [[75, ""    private volatile ByteBuffer _chunk = null;""], [445, ""        // Not in a race here with onFillable, because it has given up control before calling handle.""], [446, ""        // in a slight race with #completed, but not sure what to do with that anyway.""], [447, ""        if (_chunk != null)""], [448, ""            _bufferPool.release(_chunk);""], [449, ""        _chunk = null;""], [740, ""            ByteBuffer chunk = _chunk;""], [743, ""                HttpGenerator.Result result = _generator.generateResponse(_info, _head, _header, chunk, _content, _lastContent);""], [766, ""                        int capacity = _header.capacity();""], [767, ""                        _bufferPool.release(_header);""], [768, ""                        if (capacity >= _config.getResponseHeaderSize())""], [775, ""                        chunk = _chunk = _bufferPool.acquire(HttpGenerator.CHUNK_SIZE, CHUNK_BUFFER_DIRECT);""], [780, ""                        if (_chunk != null)""], [781, ""                            _bufferPool.release(_chunk);""], [782, ""                        chunk = _chunk = _bufferPool.acquire(_config.getResponseHeaderSize(), CHUNK_BUFFER_DIRECT);""], [790, ""                            BufferUtil.clear(chunk);""], [801, ""                        if (BufferUtil.hasContent(chunk))""], [804, ""                            bytes += chunk.remaining();""], [815, ""                                getEndPoint().write(this, _header, chunk, _content);""], [818, ""                                getEndPoint().write(this, _header, chunk);""], [827, ""                                getEndPoint().write(this, chunk, _content);""], [830, ""                                getEndPoint().write(this, chunk);""], [877, ""            return complete;""]]}"	727
CVE-2020-5289	GHSA-2mxr-89gf-rc4v	com.yahoo.elide:elide-core	0	4.5.13	4.5.14	https://github.com/yahoo/elide	7239e47eca00226550300e5e67cdabbf12145ef0	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/jar/elide-core-4.5.13.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/jar/elide-core-4.5.14.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/java/elide-core/src/main/java/com/yahoo/elide/core/EntityBinding.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/java/elide-core/src/main/java/com/yahoo/elide/core/EntityBinding.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/class/elide-core/src/main/java/com/yahoo/elide/core/EntityBinding.class	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/class/elide-core/src/main/java/com/yahoo/elide/core/EntityBinding.class	EntityBinding	[EntityBinding::getAnnotation]	com.yahoo.elide.core	com.yahoo.elide.core	"{""added"": [[569, ""        Annotation annotation = annotations.computeIfAbsent(annotationClass, cls -> Optional.ofNullable(""], [570, ""                EntityDictionary.getFirstAnnotation(entityClass, Collections.singletonList(annotationClass)))""], [571, ""                .orElse(NO_ANNOTATION));""]], ""deleted"": [[569, ""        Annotation annotation = annotations.get(annotationClass);""], [570, ""        if (annotation == null) {""], [571, ""            annotation = EntityDictionary.getFirstAnnotation(entityClass, Collections.singletonList(annotationClass));""], [572, ""            if (annotation == null) {""], [573, ""                annotation = NO_ANNOTATION;""], [574, ""            }""], [575, ""            annotations.putIfAbsent(annotationClass, annotation);""], [576, ""        }""]]}"	406
CVE-2020-5289	GHSA-2mxr-89gf-rc4v	com.yahoo.elide:elide-core	0	4.5.13	4.5.14	https://github.com/yahoo/elide	7239e47eca00226550300e5e67cdabbf12145ef0	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/jar/elide-core-4.5.13.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/jar/elide-core-4.5.14.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/java/elide-core/src/main/java/com/yahoo/elide/core/PersistentResource.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/java/elide-core/src/main/java/com/yahoo/elide/core/PersistentResource.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/class/elide-core/src/main/java/com/yahoo/elide/core/PersistentResource.class	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/class/elide-core/src/main/java/com/yahoo/elide/core/PersistentResource.class	PersistentResource	[PersistentResource::getRelationChecked, PersistentResource::filter, PersistentResource::getPermissionFilterExpression, PersistentResource::getRelationCheckedFiltered, PersistentResource::getRelation, PersistentResource::clearRelation, PersistentResource::getRelation, PersistentResource::buildIdFilterExpression, PersistentResource::shouldSkipCollection, PersistentResource::checkIncludeSparseField, PersistentResource::filter, PersistentResource::checkFieldAwareDeferPermissions, PersistentResource::updateToOneRelation, PersistentResource::updateToManyRelation, PersistentResource::getRelationUnchecked, PersistentResource::loadRecords, PersistentResource::updateRelation]	com.yahoo.elide.core	com.yahoo.elide.core	"{""added"": [[98, ""    /**""], [237, ""            RequestScope requestScope) {""], [308, ""        Set<PersistentResource> existingResources = filter(ReadPermission.class, filter,""], [372, ""        Set<PersistentResource> resources = filter(ReadPermission.class, Optional.empty(),""], [405, ""            Set<PersistentResource> resourceIdentifiers,""], [406, ""            Set<PersistentResource> mine) {""], [482, ""            Set<PersistentResource> resourceIdentifiers,""], [483, ""            Set<PersistentResource> mine) {""], [530, ""        Set<PersistentResource> mine = filter(ReadPermission.class, Optional.empty(),""], [531, ""                getRelationUncheckedUnfiltered(relationName));""], [820, ""            List<String> ids,""], [821, ""            Optional<FilterExpression> filter,""], [822, ""            Optional<Sorting> sorting,""], [823, ""            Optional<Pagination> pagination) {""], [855, ""        Set<PersistentResource> existingResources = filter(ReadPermission.class, filter,""], [856, ""                getRelation(relation, Optional.ofNullable(filterExpression), sorting, pagination, true));""], [881, ""            Class<?> entityType,""], [882, ""            EntityDictionary dictionary,""], [883, ""            RequestScope scope) {""], [911, ""            Optional<FilterExpression> filterExpression,""], [912, ""            Optional<Sorting> sorting,""], [913, ""            Optional<Pagination> pagination) {""], [915, ""        return filter(ReadPermission.class, filterExpression,""], [928, ""            Optional<FilterExpression> filterExpression,""], [929, ""            Optional<Sorting> sorting,""], [930, ""            Optional<Pagination> pagination,""], [931, ""            boolean checked) {""], [978, ""            Optional<FilterExpression> filterExpression,""], [979, ""            Optional<Sorting> sorting,""], [980, ""            Optional<Pagination> pagination) {""], [998, ""            Optional<FilterExpression> filterExpression,""], [999, ""            Optional<Sorting> sorting,""], [1000, ""            Optional<Pagination> pagination) {""], [1051, ""            RequestScope requestScope) {""], [1555, ""     * Verify fields have ReadPermission on filter join.""], [1562, ""            Optional<FilterExpression> filter,""], [1563, ""            Set<PersistentResource> resources) {""], [1575, ""                    // Verify fields have ReadPermission on filter join""], [1576, ""                    if (filter.isPresent()""], [1577, ""                            && !filter.get().accept(new VerifyFieldAccessFilterExpressionVisitor(resource))) {""], [1578, ""                        continue;""], [1579, ""                    }""], [1643, ""            String fieldName,""], [1644, ""            Object modified,""], [1645, ""            Object original) {""], [1656, ""            String fieldName) {""]], ""deleted"": [[98, ""   /**""], [237, ""                                                                      RequestScope requestScope) {""], [308, ""        Set<PersistentResource> existingResources = filter(ReadPermission.class,""], [372, ""        Set<PersistentResource> resources = filter(ReadPermission.class,""], [405, ""                                           Set<PersistentResource> resourceIdentifiers,""], [406, ""                                           Set<PersistentResource> mine) {""], [482, ""                                          Set<PersistentResource> resourceIdentifiers,""], [483, ""                                          Set<PersistentResource> mine) {""], [530, ""        Set<PersistentResource> mine = filter(ReadPermission.class, getRelationUncheckedUnfiltered(relationName));""], [819, ""                                          List<String> ids,""], [820, ""                                          Optional<FilterExpression> filter,""], [821, ""                                          Optional<Sorting> sorting,""], [822, ""                                          Optional<Pagination> pagination) {""], [854, ""        Set<PersistentResource> existingResources = filter(ReadPermission.class,""], [855, ""            getRelation(relation, Optional.ofNullable(filterExpression), sorting, pagination, true));""], [880, ""                                                            Class<?> entityType,""], [881, ""                                                            EntityDictionary dictionary,""], [882, ""                                                            RequestScope scope) {""], [910, ""                                                              Optional<FilterExpression> filterExpression,""], [911, ""                                                              Optional<Sorting> sorting,""], [912, ""                                                              Optional<Pagination> pagination) {""], [914, ""        return filter(ReadPermission.class,""], [927, ""                                                Optional<FilterExpression> filterExpression,""], [928, ""                                                Optional<Sorting> sorting,""], [929, ""                                                Optional<Pagination> pagination,""], [930, ""                                                boolean checked) {""], [977, ""                                                         Optional<FilterExpression> filterExpression,""], [978, ""                                                         Optional<Sorting> sorting,""], [979, ""                                                         Optional<Pagination> pagination) {""], [997, ""                                                         Optional<FilterExpression> filterExpression,""], [998, ""                                                         Optional<Sorting> sorting,""], [999, ""                                                         Optional<Pagination> pagination) {""], [1050, ""                                                RequestScope requestScope) {""], [1560, ""                                                    Set<PersistentResource> resources) {""], [1635, ""                                                                        String fieldName,""], [1636, ""                                                                        Object modified,""], [1637, ""                                                                        Object original) {""], [1648, ""                                                     String fieldName) {""]]}"	1075
CVE-2020-5289	GHSA-2mxr-89gf-rc4v	com.yahoo.elide:elide-core	0	4.5.13	4.5.14	https://github.com/yahoo/elide	7239e47eca00226550300e5e67cdabbf12145ef0	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/jar/elide-core-4.5.13.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/jar/elide-core-4.5.14.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/java/elide-core/src/main/java/com/yahoo/elide/core/PersistentResourceSet.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/java/elide-core/src/main/java/com/yahoo/elide/core/PersistentResourceSet.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/class/elide-core/src/main/java/com/yahoo/elide/core/PersistentResourceSet.class	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/class/elide-core/src/main/java/com/yahoo/elide/core/PersistentResourceSet.class	PersistentResourceSet	[PersistentResourceSet::spliterator]	com.yahoo.elide.core	com.yahoo.elide.core	"{""added"": [[12, ""import java.util.Spliterator;""], [13, ""import java.util.Spliterators;""], [56, """"], [57, ""    @Override""], [58, ""    public Spliterator<PersistentResource<T>> spliterator() {""], [59, ""        return Spliterators.spliteratorUnknownSize(iterator(), 0);""], [60, ""    }""]], ""deleted"": []}"	42
CVE-2020-5289	GHSA-2mxr-89gf-rc4v	com.yahoo.elide:elide-core	0	4.5.13	4.5.14	https://github.com/yahoo/elide	7239e47eca00226550300e5e67cdabbf12145ef0	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/jar/elide-core-4.5.13.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/jar/elide-core-4.5.14.jar	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/java/elide-core/src/main/java/com/yahoo/elide/core/RequestScope.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/java/elide-core/src/main/java/com/yahoo/elide/core/RequestScope.java	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/before/class/elide-core/src/main/java/com/yahoo/elide/core/RequestScope.class	proc/changes/CVE-2020-5289/7239e47eca00226550300e5e67cdabbf12145ef0/after/class/elide-core/src/main/java/com/yahoo/elide/core/RequestScope.class	RequestScope	[RequestScope::getLoadFilterExpression]	com.yahoo.elide.core	com.yahoo.elide.core	"{""added"": [[272, ""        Optional<FilterExpression> filterExpression;""], [275, ""            filterExpression =  getFilterExpressionByType(typeName);""], [277, ""            filterExpression = Optional.of(globalFilterExpression);""], [279, ""        return filterExpression;""]], ""deleted"": [[27, ""import com.yahoo.elide.core.filter.expression.AndFilterExpression;""], [273, ""        Optional<FilterExpression> permissionFilter;""], [274, ""        permissionFilter = getPermissionExecutor().getReadPermissionFilter(loadClass);""], [275, ""        Optional<FilterExpression> globalFilterExpressionOptional;""], [278, ""            globalFilterExpressionOptional =  getFilterExpressionByType(typeName);""], [280, ""            globalFilterExpressionOptional = Optional.of(globalFilterExpression);""], [282, """"], [283, ""        if (globalFilterExpressionOptional.isPresent() && permissionFilter.isPresent()) {""], [284, ""            return Optional.of(new AndFilterExpression(globalFilterExpressionOptional.get(),""], [285, ""                    permissionFilter.get()));""], [286, ""        }""], [287, ""        if (globalFilterExpressionOptional.isPresent()) {""], [288, ""            return globalFilterExpressionOptional;""], [289, ""        }""], [290, ""        if (permissionFilter.isPresent()) {""], [291, ""            return permissionFilter;""], [292, ""        }""], [293, ""        return Optional.empty();""]]}"	328
CVE-2019-17555	GHSA-477x-w7m6-c6ph	org.apache.olingo:odata-client-core	4.0.0	4.6.0	4.7.0	https://github.com/apache/olingo-odata4	98d445a87447a5424cf5405a559708323f94d94f	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/before/jar/odata-client-core-4.6.0.jar	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/after/jar/odata-client-core-4.7.0.jar	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/before/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl.java	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/after/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl.java	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/before/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl$AsyncResponseWrapperImpl.class	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/after/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl$AsyncResponseWrapperImpl.class	AsyncBatchRequestWrapperImpl$AsyncResponseWrapperImpl	[AsyncBatchRequestWrapperImpl::AsyncResponseWrapperImpl::retrieveMonitorDetails]	org.apache.olingo.client.core.communication.request	org.apache.olingo.client.core.communication.request	"{""added"": [[3, "" * or more contributor license agreements. See the NOTICE file""], [5, "" * regarding copyright ownership. The ASF licenses this file""], [8, "" * with the License. You may obtain a copy of the License at""], [10, "" * http://www.apache.org/licenses/LICENSE-2.0""], [15, "" * KIND, either express or implied. See the License for the""], [37, ""    implements AsyncBatchRequestWrapper {""], [76, ""      extends AsyncRequestWrapperImpl<ODataBatchResponse>.AsyncResponseWrapperImpl {""], [103, ""        this.retryAfter = parseReplyAfter(headers.iterator().next());""]], ""deleted"": [[3, "" * or more contributor license agreements.  See the NOTICE file""], [5, "" * regarding copyright ownership.  The ASF licenses this file""], [8, "" * with the License.  You may obtain a copy of the License at""], [10, "" *   http://www.apache.org/licenses/LICENSE-2.0""], [15, "" * KIND, either express or implied.  See the License for the""], [37, ""        implements AsyncBatchRequestWrapper {""], [76, ""          extends AsyncRequestWrapperImpl<ODataBatchResponse>.AsyncResponseWrapperImpl {""], [103, ""        this.retryAfter = Integer.parseInt(headers.iterator().next());""]]}"	70
CVE-2019-17555	GHSA-477x-w7m6-c6ph	org.apache.olingo:odata-client-core	4.0.0	4.6.0	4.7.0	https://github.com/apache/olingo-odata4	98d445a87447a5424cf5405a559708323f94d94f	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/before/jar/odata-client-core-4.6.0.jar	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/after/jar/odata-client-core-4.7.0.jar	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/before/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.java	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/after/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.java	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/before/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl$AsyncResponseWrapperImpl.class	proc/changes/CVE-2019-17555/98d445a87447a5424cf5405a559708323f94d94f/after/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl$AsyncResponseWrapperImpl.class	AsyncRequestWrapperImpl$AsyncResponseWrapperImpl	[AsyncRequestWrapperImpl::AsyncResponseWrapperImpl::getODataResponse, AsyncRequestWrapperImpl::AsyncResponseWrapperImpl::parseReplyAfter, AsyncRequestWrapperImpl::AsyncResponseWrapperImpl::retrieveMonitorDetails]	org.apache.olingo.client.core.communication.request	org.apache.olingo.client.core.communication.request	"{""added"": [[144, ""    static final int DEFAULT_RETRY_AFTER = 5;""], [145, ""    static final int MAX_RETRY_AFTER = 10;""], [146, """"], [151, ""    protected int retryAfter = DEFAULT_RETRY_AFTER;""], [202, ""            this.retryAfter = parseReplyAfter(headers[0].getValue());""], [207, ""            Thread.sleep((long) retryAfter * 1000);""], [225, ""    int parseReplyAfter(String value) {""], [226, ""      if (value == null || value.isEmpty()) {""], [227, ""        return DEFAULT_RETRY_AFTER;""], [228, """"], [229, ""      try {""], [230, ""        int n = Integer.parseInt(value);""], [231, ""        if (n < 0) {""], [232, ""          return DEFAULT_RETRY_AFTER;""], [233, ""        }""], [234, ""        return Math.min(n, MAX_RETRY_AFTER);""], [235, ""      } catch (NumberFormatException e) {""], [236, ""        return DEFAULT_RETRY_AFTER;""], [237, ""      }""], [238, ""    }""], [239, """"], [285, ""        this.retryAfter = parseReplyAfter(headers[0].getValue());""]], ""deleted"": [[148, ""    protected int retryAfter = 5;""], [199, ""            this.retryAfter = Integer.parseInt(headers[0].getValue());""], [204, ""            Thread.sleep((long)retryAfter * 1000);""], [267, ""        this.retryAfter = Integer.parseInt(headers[0].getValue());""]]}"	233
CVE-2019-12422	GHSA-r679-m633-g7wc	org.apache.shiro:shiro-core	0	1.4.1	1.4.2	https://github.com/apache/shiro	a8018783373ff5e5210225069c9919e071597d5e	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/before/jar/shiro-core-1.4.1.jar	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/after/jar/shiro-core-1.4.2.jar	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/before/java/crypto/cipher/src/main/java/org/apache/shiro/crypto/AesCipherService.java	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/after/java/crypto/cipher/src/main/java/org/apache/shiro/crypto/AesCipherService.java	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/before/class/crypto/cipher/src/main/java/org/apache/shiro/crypto/AesCipherService.class	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/after/class/crypto/cipher/src/main/java/org/apache/shiro/crypto/AesCipherService.class	AesCipherService	[AesCipherService::createParameterSpec, AesCipherService::AesCipherService]	org.apache.shiro.crypto	org.apache.shiro.crypto	"{""added"": [[21, ""import javax.crypto.spec.GCMParameterSpec;""], [22, ""import java.security.spec.AlgorithmParameterSpec;""], [23, """"], [30, "" * Note that this class retains changes the parent class's default {@link OperationMode#CBC CBC} mode to {@link OperationMode#GCM GCM} of operation""], [65, ""     * <td>{@link OperationMode#GCM GCM}<b>*</b></td>""], [81, ""     * <b>*</b> The {@link OperationMode#GCM GCM} operation mode is used instead of the JDK default {@code ECB} to""], [86, ""     * <b>**</b>In conjunction with the default {@code GCM} operation mode, initialization vectors are generated by""], [91, ""        setMode(OperationMode.GCM);""], [92, ""        setStreamingMode(OperationMode.GCM);""], [95, ""    @Override""], [96, ""    protected AlgorithmParameterSpec createParameterSpec(byte[] iv, boolean streaming) {""], [97, """"], [98, ""        if ((streaming && OperationMode.GCM.name().equals(getStreamingModeName()))""], [99, ""        || (!streaming && OperationMode.GCM.name().equals(getModeName()))) {""], [100, ""            return new GCMParameterSpec(getKeySize(), iv);""], [101, ""        }""], [102, """"], [103, ""        return super.createParameterSpec(iv, streaming);""], [104, ""    }""]], ""deleted"": [[27, "" * Note that this class retains the parent class's default {@link OperationMode#CBC CBC} mode of operation""], [62, ""     * <td>{@link OperationMode#CBC CBC}<b>*</b></td>""], [78, ""     * <b>*</b> The {@link OperationMode#CBC CBC} operation mode is used instead of the JDK default {@code ECB} to""], [83, ""     * <b>**</b>In conjunction with the default {@code CBC} operation mode, initialization vectors are generated by""]]}"	19
CVE-2019-12422	GHSA-r679-m633-g7wc	org.apache.shiro:shiro-core	0	1.4.1	1.4.2	https://github.com/apache/shiro	a8018783373ff5e5210225069c9919e071597d5e	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/before/jar/shiro-core-1.4.1.jar	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/after/jar/shiro-core-1.4.2.jar	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/before/java/crypto/cipher/src/main/java/org/apache/shiro/crypto/JcaCipherService.java	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/after/java/crypto/cipher/src/main/java/org/apache/shiro/crypto/JcaCipherService.java	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/before/class/crypto/cipher/src/main/java/org/apache/shiro/crypto/JcaCipherService.class	proc/changes/CVE-2019-12422/a8018783373ff5e5210225069c9919e071597d5e/after/class/crypto/cipher/src/main/java/org/apache/shiro/crypto/JcaCipherService.class	JcaCipherService	[JcaCipherService::initNewCipher, JcaCipherService::createParameterSpec]	org.apache.shiro.crypto	org.apache.shiro.crypto	"{""added"": [[593, ""        AlgorithmParameterSpec ivSpec = null;""], [594, """"], [596, ""            ivSpec = createParameterSpec(iv, streaming);""], [603, """"], [604, ""    protected AlgorithmParameterSpec createParameterSpec(byte[] iv, boolean streaming) {""], [605, ""        return new IvParameterSpec(iv);""], [606, ""    }""]], ""deleted"": [[593, ""        IvParameterSpec ivSpec = null;""], [595, ""            ivSpec = new IvParameterSpec(iv);""]]}"	302
CVE-2020-1925	GHSA-v4qh-6367-4cx2	org.apache.olingo:odata-client-core	4.0.0	4.7.0	4.7.1	https://github.com/apache/olingo-odata4	9f9aebde557b791f275d6156d8bec12ac334425d	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/jar/odata-client-core-4.7.0.jar	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/jar/odata-client-core-4.7.1.jar	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl.java	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl.java	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl$AsyncResponseWrapperImpl.class	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncBatchRequestWrapperImpl$AsyncResponseWrapperImpl.class	AsyncBatchRequestWrapperImpl$AsyncResponseWrapperImpl	[AsyncBatchRequestWrapperImpl::AsyncResponseWrapperImpl::retrieveMonitorDetails]	org.apache.olingo.client.core.communication.request	org.apache.olingo.client.core.communication.request	"{""added"": [[97, ""        this.location = createLocation(headers.iterator().next());""]], ""deleted"": [[21, ""import java.net.URI;""], [98, ""        this.location = URI.create(headers.iterator().next());""]]}"	69
CVE-2020-1925	GHSA-v4qh-6367-4cx2	org.apache.olingo:odata-client-core	4.0.0	4.7.0	4.7.1	https://github.com/apache/olingo-odata4	9f9aebde557b791f275d6156d8bec12ac334425d	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/jar/odata-client-core-4.7.0.jar	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/jar/odata-client-core-4.7.1.jar	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.java	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.java	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl$AsyncResponseWrapperImpl.class	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl$AsyncResponseWrapperImpl.class	AsyncRequestWrapperImpl$AsyncResponseWrapperImpl	[AsyncRequestWrapperImpl::AsyncResponseWrapperImpl::createLocation, AsyncRequestWrapperImpl::AsyncResponseWrapperImpl::retrieveMonitorDetails]	org.apache.olingo.client.core.communication.request	org.apache.olingo.client.core.communication.request	"{""added"": [[23, ""import java.util.Objects;""], [90, ""    Objects.requireNonNull(this.uri, \""Target URI can't be null\"");""], [144, ""  private URI checkLocation(URI uri) {""], [145, ""    if (!this.uri.getScheme().equals(uri.getScheme())) {""], [146, ""      throw new AsyncRequestException(\""Unexpected scheme in the Location header\"");""], [147, ""    }""], [148, ""    if (!this.uri.getHost().equals(uri.getHost())) {""], [149, ""      throw new AsyncRequestException(\""Unexpected host name in the Location header\"");""], [150, ""    }""], [151, ""    if (this.uri.getPort() != uri.getPort()) {""], [152, ""      throw new AsyncRequestException(\""Unexpected port in the Location header\"");""], [153, ""    }""], [154, ""    return uri;""], [155, ""  }""], [156, """"], [240, ""    URI createLocation(String string) {""], [241, ""      return checkLocation(URI.create(string));""], [242, ""    }""], [243, """"], [296, ""        this.location = createLocation(headers[0].getValue());""]], ""deleted"": [[277, ""        this.location = URI.create(headers[0].getValue());""]]}"	251
CVE-2020-1925	GHSA-v4qh-6367-4cx2	org.apache.olingo:odata-client-core	4.0.0	4.7.0	4.7.1	https://github.com/apache/olingo-odata4	9f9aebde557b791f275d6156d8bec12ac334425d	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/jar/odata-client-core-4.7.0.jar	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/jar/odata-client-core-4.7.1.jar	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.java	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/java/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.java	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/before/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.class	proc/changes/CVE-2020-1925/9f9aebde557b791f275d6156d8bec12ac334425d/after/class/lib/client-core/src/main/java/org/apache/olingo/client/core/communication/request/AsyncRequestWrapperImpl.class	AsyncRequestWrapperImpl	[AsyncRequestWrapperImpl::AsyncRequestWrapperImpl, AsyncRequestWrapperImpl::checkLocation]	org.apache.olingo.client.core.communication.request	org.apache.olingo.client.core.communication.request	"{""added"": [[23, ""import java.util.Objects;""], [90, ""    Objects.requireNonNull(this.uri, \""Target URI can't be null\"");""], [144, ""  private URI checkLocation(URI uri) {""], [145, ""    if (!this.uri.getScheme().equals(uri.getScheme())) {""], [146, ""      throw new AsyncRequestException(\""Unexpected scheme in the Location header\"");""], [147, ""    }""], [148, ""    if (!this.uri.getHost().equals(uri.getHost())) {""], [149, ""      throw new AsyncRequestException(\""Unexpected host name in the Location header\"");""], [150, ""    }""], [151, ""    if (this.uri.getPort() != uri.getPort()) {""], [152, ""      throw new AsyncRequestException(\""Unexpected port in the Location header\"");""], [153, ""    }""], [154, ""    return uri;""], [155, ""  }""], [156, """"], [240, ""    URI createLocation(String string) {""], [241, ""      return checkLocation(URI.create(string));""], [242, ""    }""], [243, """"], [296, ""        this.location = createLocation(headers[0].getValue());""]], ""deleted"": [[277, ""        this.location = URI.create(headers[0].getValue());""]]}"	251
CVE-2019-17556	GHSA-gj76-429m-56wc	org.apache.olingo:odata-client-proxy	4.0.0	4.6.0	4.7.0	https://github.com/apache/olingo-odata4	db50f59689155d8055e268863689771c3536d0e0	proc/changes/CVE-2019-17556/db50f59689155d8055e268863689771c3536d0e0/before/jar/odata-client-proxy-4.6.0.jar	proc/changes/CVE-2019-17556/db50f59689155d8055e268863689771c3536d0e0/after/jar/odata-client-proxy-4.7.0.jar	proc/changes/CVE-2019-17556/db50f59689155d8055e268863689771c3536d0e0/before/java/ext/client-proxy/src/main/java/org/apache/olingo/ext/proxy/AbstractService.java	proc/changes/CVE-2019-17556/db50f59689155d8055e268863689771c3536d0e0/after/java/ext/client-proxy/src/main/java/org/apache/olingo/ext/proxy/AbstractService.java	proc/changes/CVE-2019-17556/db50f59689155d8055e268863689771c3536d0e0/before/class/ext/client-proxy/src/main/java/org/apache/olingo/ext/proxy/AbstractService.class	proc/changes/CVE-2019-17556/db50f59689155d8055e268863689771c3536d0e0/after/class/ext/client-proxy/src/main/java/org/apache/olingo/ext/proxy/AbstractService.class	AbstractService	[AbstractService::createObjectInputStream, AbstractService::getAllowedClasses, AbstractService::AbstractService]	org.apache.olingo.ext.proxy	org.apache.olingo.ext.proxy	"{""added"": [[22, ""import java.io.IOException;""], [23, ""import java.io.InputStream;""], [26, ""import java.util.Collections;""], [27, ""import java.util.HashSet;""], [29, ""import java.util.Set;""], [35, ""import org.apache.commons.io.serialization.ValidatingObjectInputStream;""], [42, ""import org.apache.olingo.commons.api.ex.ODataRuntimeException;""], [61, ""  /**""], [62, ""   * A set of classes which are allowed to be deserialized by default.""], [63, ""   */""], [64, ""  private static final Set<String> DEFAULT_ALLOWED_CLASSES;""], [65, ""  static {""], [66, ""    DEFAULT_ALLOWED_CLASSES = Collections.singleton(\""org.apache.olingo.*\"");""], [67, ""  }""], [68, """"], [92, ""      ois = createObjectInputStream(gzis);""], [105, ""    } else {""], [168, """"], [169, ""  /**""], [170, ""   * Returns a set of classes which are allowed for deserialization.<br/>""], [171, ""   * By default, only classes from the \""org.apache.olingo\"" package are allowed.""], [172, ""   * Subclasses should override this method if they expect other classes to be deserialized.""], [173, ""   *""], [174, ""   * @return A set of classes which are allowed for deserialization.""], [175, ""   */""], [176, ""  protected Set<String> getAllowedClasses() {""], [177, ""    return Collections.emptySet();""], [178, ""  }""], [179, """"], [180, ""  /**""], [181, ""   * Wraps a specified {@link InputStream} into a {@link ValidatingObjectInputStream}""], [182, ""   * which allowed only a limited set of classes for deserialization.""], [183, ""   * The method calls {@link #getAllowedClasses()} to get a set of classes""], [184, ""   * which allowed for deserialization.""], [185, ""   *""], [186, ""   * @param is The input stream to be wrapped.""], [187, ""   * @return An instance of {@link ValidatingObjectInputStream}.""], [188, ""   * @throws IOException If something went wrong.""], [189, ""   */""], [190, ""  private ObjectInputStream createObjectInputStream(InputStream is) throws IOException {""], [191, ""    ValidatingObjectInputStream vois = new ValidatingObjectInputStream(is);""], [192, ""    Set<String> allowedClasses = new HashSet<>();""], [193, ""    allowedClasses.addAll(DEFAULT_ALLOWED_CLASSES);""], [194, ""    allowedClasses.addAll(getAllowedClasses());""], [195, ""    for (String clazz : allowedClasses) {""], [196, ""      vois.accept(clazz);""], [197, ""    }""], [198, ""    return vois;""], [199, ""  }""]], ""deleted"": [[34, ""import org.apache.olingo.commons.api.ex.ODataRuntimeException;""], [78, ""      ois = new ObjectInputStream(gzis);""], [91, ""    }else{""]]}"	124
CVE-2020-1963	GHSA-5wm5-8q42-rhxg	org.apache.ignite:ignite-core	0	2.8.0	2.8.1	https://github.com/apache/ignite	02b0439639a9dab264cdb3ed4081c231e0079c13	proc/changes/CVE-2020-1963/02b0439639a9dab264cdb3ed4081c231e0079c13/before/jar/ignite-core-2.8.0.jar	proc/changes/CVE-2020-1963/02b0439639a9dab264cdb3ed4081c231e0079c13/after/jar/ignite-core-2.8.1.jar	proc/changes/CVE-2020-1963/02b0439639a9dab264cdb3ed4081c231e0079c13/before/java/modules/core/src/main/java/org/apache/ignite/internal/cluster/DistributedBaselineConfiguration.java	proc/changes/CVE-2020-1963/02b0439639a9dab264cdb3ed4081c231e0079c13/after/java/modules/core/src/main/java/org/apache/ignite/internal/cluster/DistributedBaselineConfiguration.java	proc/changes/CVE-2020-1963/02b0439639a9dab264cdb3ed4081c231e0079c13/before/class/modules/core/src/main/java/org/apache/ignite/internal/cluster/DistributedBaselineConfiguration.class	proc/changes/CVE-2020-1963/02b0439639a9dab264cdb3ed4081c231e0079c13/after/class/modules/core/src/main/java/org/apache/ignite/internal/cluster/DistributedBaselineConfiguration.class	DistributedBaselineConfiguration	[DistributedBaselineConfiguration::setDefaultValue, DistributedBaselineConfiguration::DistributedBaselineConfiguration, DistributedBaselineConfiguration::makeUpdateListener]	org.apache.ignite.internal.cluster	org.apache.ignite.internal.cluster	"{""added"": [[31, ""import static org.apache.ignite.internal.cluster.DistributedConfigurationUtils.makeUpdateListener;""], [32, ""import static org.apache.ignite.internal.cluster.DistributedConfigurationUtils.setDefaultValue;""], [90, ""                    baselineAutoAdjustEnabled.addListener(makeUpdateListener(PROPERTY_UPDATE_MESSAGE, log));""], [91, ""                    baselineAutoAdjustTimeout.addListener(makeUpdateListener(PROPERTY_UPDATE_MESSAGE, log));""]], ""deleted"": [[20, ""import java.io.Serializable;""], [21, ""import java.util.Objects;""], [25, ""import org.apache.ignite.internal.IgniteInternalFuture;""], [26, ""import org.apache.ignite.internal.processors.configuration.distributed.DistributePropertyListener;""], [29, ""import org.apache.ignite.internal.processors.configuration.distributed.DistributedProperty;""], [34, ""import org.apache.ignite.lang.IgniteInClosure;""], [35, ""import org.jetbrains.annotations.NotNull;""], [95, ""                    baselineAutoAdjustEnabled.addListener(makeUpdateListener());""], [96, ""                    baselineAutoAdjustTimeout.addListener(makeUpdateListener());""], [109, ""    /**""], [110, ""     * @param property Property which value should be set.""], [111, ""     * @param value Default value.""], [112, ""     * @param log Logger.""], [113, ""     * @param <T> Property type.""], [114, ""     */""], [115, ""    private <T extends Serializable> void setDefaultValue(DistributedProperty<T> property, T value, IgniteLogger log) {""], [116, ""        if (property.get() == null) {""], [117, ""            try {""], [118, ""                property.propagateAsync(null, value)""], [119, ""                    .listen((IgniteInClosure<IgniteInternalFuture<?>>)future -> {""], [120, ""                        if (future.error() != null)""], [121, ""                            log.error(\""Cannot set default value of '\"" + property.getName() + '\\'', future.error());""], [122, ""                    });""], [123, ""            }""], [124, ""            catch (IgniteCheckedException e) {""], [125, ""                log.error(\""Cannot initiate setting default value of '\"" + property.getName() + '\\'', e);""], [126, ""            }""], [127, ""        }""], [128, ""    }""], [129, """"], [130, ""    /**""], [131, ""     * @param <T> Type of property value.""], [132, ""     * @return Update property listener.""], [133, ""     */""], [134, ""    @NotNull private <T> DistributePropertyListener<T> makeUpdateListener() {""], [135, ""        return (name, oldVal, newVal) -> {""], [136, ""            if (!Objects.equals(oldVal, newVal))""], [137, ""                log.info(format(PROPERTY_UPDATE_MESSAGE, name, oldVal, newVal));""], [138, ""        };""], [139, ""    }""], [140, """"]]}"	72
CVE-2012-0881	GHSA-vmqm-g3vh-847m	xerces:xercesImpl	0	2.11.0	2.12.0	https://github.com/apache/xerces2-j	992b5d9c24102ad20330d36c0a71162753a37449	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/jar/xercesImpl-2.11.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/jar/xercesImpl-2.12.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/java/src/org/apache/xerces/impl/dtd/DTDGrammar.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/java/src/org/apache/xerces/impl/dtd/DTDGrammar.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/class/src/org/apache/xerces/impl/dtd/DTDGrammar$QNameHashtable.class	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/class/src/org/apache/xerces/impl/dtd/DTDGrammar$QNameHashtable.class	DTDGrammar$QNameHashtable	[DTDGrammar::QNameHashtable::get, DTDGrammar::QNameHashtable::rehash, DTDGrammar::QNameHashtable::hash, DTDGrammar::QNameHashtable::put, DTDGrammar::QNameHashtable::hash0, DTDGrammar::QNameHashtable::rebalance, DTDGrammar::QNameHashtable::rehashCommon]	org.apache.xerces.impl.dtd	org.apache.xerces.impl.dtd	"{""added"": [[22, ""import java.util.Random;""], [2643, """"], [2644, ""        private static final class PrimeNumberSequenceGenerator {""], [2645, """"], [2646, ""            private static int [] PRIMES = {""], [2647, ""                3,   5,   7,  11,  13,  17,  19,  23,  29,  31,  37,  41,  43,  47,  53,  59,""], [2648, ""               61,  67,  71,  73,  79,  83,  89,  97, 101, 103, 107, 109, 113, 127, 131, 137,""], [2649, ""              139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,""], [2650, ""              229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,""], [2651, ""              317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,""], [2652, ""              421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,""], [2653, ""              521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,""], [2654, ""              619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727};""], [2655, """"], [2656, ""            static void generateSequence(int[] arrayToFill) {""], [2657, ""                Random r = new Random();""], [2658, ""                for (int i = 0; i < arrayToFill.length; ++i) {""], [2659, ""                    arrayToFill[i] = PRIMES[r.nextInt(PRIMES.length)];""], [2660, ""                }""], [2661, ""            }""], [2662, ""        }""], [2675, """"], [2676, ""        /** Maximum hash collisions per bucket for a table with load factor == 1. */""], [2677, ""        private static final int MAX_HASH_COLLISIONS = 40;""], [2678, """"], [2679, ""        private static final int MULTIPLIERS_SIZE = 1 << 5;""], [2680, ""        private static final int MULTIPLIERS_MASK = MULTIPLIERS_SIZE - 1;""], [2686, """"], [2687, ""        /** actual table size **/""], [2688, ""        private int fTableSize = HASHTABLE_SIZE;""], [2689, """"], [2690, ""        /** The total number of entries in the hash table. */""], [2691, ""        private int fCount = 0;""], [2692, """"], [2693, ""        /**""], [2694, ""         * Array of randomly selected hash function multipliers or <code>null</code>""], [2695, ""         * if the default String.hashCode() function should be used.""], [2696, ""         */""], [2697, ""        private int[] fHashMultipliers;""], [2705, ""            int hash = (hash(key) & 0x7FFFFFFF) % fTableSize;""], [2714, ""                if (++fCount > fTableSize) {""], [2715, ""                    // Rehash the table if the number of entries""], [2716, ""                    // would exceed the number of buckets.""], [2717, ""                    rehash();""], [2718, ""                }""], [2739, ""                if (!found) {""], [2743, ""                    if (++fCount > fTableSize) {""], [2744, ""                        // Rehash the table if the number of entries""], [2745, ""                        // would exceed the number of buckets.""], [2746, ""                        rehash();""], [2747, ""                    }""], [2748, ""                    else if (count > MAX_HASH_COLLISIONS) {""], [2749, ""                        // Select a new hash function and rehash the table if""], [2750, ""                        // MAX_HASH_COLLISIONS is exceeded.""], [2751, ""                        rebalance();""], [2752, ""                    }""], [2763, ""            int hash = (hash(key) & 0x7FFFFFFF) % fTableSize;""], [2781, """"], [2782, ""        public int hash(String symbol) {""], [2783, ""            if (fHashMultipliers == null) {""], [2784, ""                return symbol.hashCode();""], [2785, ""            }""], [2786, ""            return hash0(symbol);""], [2787, ""        } // hash(String):int""], [2788, """"], [2789, ""        private int hash0(String symbol) {""], [2790, ""            int code = 0;""], [2791, ""            final int length = symbol.length();""], [2792, ""            final int[] multipliers = fHashMultipliers;""], [2793, ""            for (int i = 0; i < length; ++i) {""], [2794, ""                code = code * multipliers[i & MULTIPLIERS_MASK] + symbol.charAt(i);""], [2795, ""            }""], [2796, ""            return code;""], [2797, ""        } // hash0(String):int""], [2798, """"], [2799, ""        private void rehash() {""], [2800, ""            rehashCommon(fHashTable.length * 2 + 1);""], [2801, ""        } // rehash()""], [2802, """"], [2803, ""        private void rebalance() {""], [2804, ""            if (fHashMultipliers == null) {""], [2805, ""                fHashMultipliers = new int[MULTIPLIERS_SIZE];""], [2806, ""            }""], [2807, ""            PrimeNumberSequenceGenerator.generateSequence(fHashMultipliers);""], [2808, ""            rehashCommon(fHashTable.length);""], [2809, ""        } // rebalance()""], [2810, """"], [2811, ""        private void rehashCommon(final int newCapacity) {""], [2812, """"], [2813, ""            final int oldCapacity = fHashTable.length;""], [2814, ""            final Object[][] oldTable = fHashTable;""], [2815, """"], [2816, ""            final Object[][] newTable = new Object[newCapacity][];""], [2817, """"], [2818, ""            fHashTable = newTable;""], [2819, ""            fTableSize = fHashTable.length;""], [2820, """"], [2821, ""            for (int i = 0; i < oldCapacity; ++i) {""], [2822, ""                final Object[] oldBucket = oldTable[i];""], [2823, ""                if (oldBucket != null) {""], [2824, ""                    final int oldCount = ((int[]) oldBucket[0])[0];""], [2825, ""                    boolean oldBucketReused = false;""], [2826, ""                    int k = 1;""], [2827, ""                    for (int j = 0; j < oldCount; ++j) {""], [2828, ""                        final String key = (String) oldBucket[k];""], [2829, ""                        final Object value = oldBucket[k+1];""], [2830, """"], [2831, ""                        final int hash = (hash(key) & 0x7FFFFFFF) % fTableSize;""], [2832, ""                        Object[] bucket = fHashTable[hash];""], [2833, """"], [2834, ""                        if (bucket == null) {""], [2835, ""                            if (oldBucketReused) {""], [2836, ""                                bucket = new Object[1 + 2*INITIAL_BUCKET_SIZE];""], [2837, ""                                bucket[0] = new int[]{1};""], [2838, ""                            }""], [2839, ""                            else {""], [2840, ""                                bucket = oldBucket;""], [2841, ""                                ((int[])bucket[0])[0] = 1;""], [2842, ""                                oldBucketReused = true;""], [2843, ""                            }""], [2844, ""                            bucket[1] = key;""], [2845, ""                            bucket[2] = value;""], [2846, ""                            fHashTable[hash] = bucket;""], [2847, ""                        }""], [2848, ""                        else {""], [2849, ""                            int count = ((int[])bucket[0])[0];""], [2850, ""                            int offset = 1 + 2*count;""], [2851, ""                            if (offset == bucket.length) {""], [2852, ""                                int newSize = count + INITIAL_BUCKET_SIZE;""], [2853, ""                                Object[] newBucket = new Object[1 + 2*newSize];""], [2854, ""                                System.arraycopy(bucket, 0, newBucket, 0, offset);""], [2855, ""                                bucket = newBucket;""], [2856, ""                                fHashTable[hash] = bucket;""], [2857, ""                            }""], [2858, ""                            bucket[offset++] = key;""], [2859, ""                            bucket[offset]= value;""], [2860, ""                            ((int[])bucket[0])[0] = ++count;""], [2861, ""                        }""], [2862, ""                        k += 2;""], [2863, ""                    }""], [2864, ""                }""], [2865, ""            }""], [2866, """"], [2867, ""        } // rehashCommon(int)""]], ""deleted"": [[2666, ""            int hash = (key.hashCode() & 0x7FFFFFFF) % HASHTABLE_SIZE;""], [2695, ""                if (! found) {""], [2709, ""            int hash = (key.hashCode() & 0x7FFFFFFF) % HASHTABLE_SIZE;""]]}"	1612
CVE-2012-0881	GHSA-vmqm-g3vh-847m	xerces:xercesImpl	0	2.11.0	2.12.0	https://github.com/apache/xerces2-j	992b5d9c24102ad20330d36c0a71162753a37449	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/jar/xercesImpl-2.11.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/jar/xercesImpl-2.12.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/java/src/org/apache/xerces/util/SoftReferenceSymbolTable.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/java/src/org/apache/xerces/util/SoftReferenceSymbolTable.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/class/src/org/apache/xerces/util/SoftReferenceSymbolTable.class	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/class/src/org/apache/xerces/util/SoftReferenceSymbolTable.class	SoftReferenceSymbolTable	[SoftReferenceSymbolTable::rebalance, SoftReferenceSymbolTable::addSymbol, SoftReferenceSymbolTable::addSymbol, SoftReferenceSymbolTable::rehashCommon]	org.apache.xerces.util	org.apache.xerces.util	"{""added"": [[130, ""        int collisionCount = 0;""], [140, ""            ++collisionCount;""], [147, ""        }""], [148, ""        else if (collisionCount >= fCollisionThreshold) {""], [149, ""            // Select a new hash function and rehash the table if""], [150, ""            // the collision threshold is exceeded.""], [151, ""            rebalance();""], [152, ""            bucket = hash(symbol) % fTableSize;""], [153, ""        }""], [176, ""        int collisionCount = 0;""], [186, ""                        ++collisionCount;""], [192, ""            ++collisionCount;""], [199, ""        }""], [200, ""        else if (collisionCount >= fCollisionThreshold) {""], [201, ""            // Select a new hash function and rehash the table if""], [202, ""            // the collision threshold is exceeded.""], [203, ""            rebalance();""], [204, ""            bucket = hash(buffer, offset, length) % fTableSize;""], [205, ""        }""], [238, ""    /**""], [239, ""     * Randomly selects a new hash function and reorganizes this SymbolTable""], [240, ""     * in order to more evenly distribute its entries across the table. This""], [241, ""     * method is called automatically when the number keys in one of the""], [242, ""     * SymbolTable's buckets exceeds the given collision threshold.""], [243, ""     */""], [244, ""    protected void rebalance() {""], [245, ""        if (fHashMultipliers == null) {""], [246, ""            fHashMultipliers = new int[MULTIPLIERS_SIZE];""], [247, ""        }""], [248, ""        PrimeNumberSequenceGenerator.generateSequence(fHashMultipliers);""], [249, ""        rehashCommon(fBuckets.length);""], [250, ""    }""], [251, """"], [269, ""                    int index = hash(data.symbol) % newCapacity;""]], ""deleted"": [[145, ""        }""], [188, ""        }""], [238, ""                    int index = hash(data.characters, 0, data.characters.length) % newCapacity;""]]}"	236
CVE-2012-0881	GHSA-vmqm-g3vh-847m	xerces:xercesImpl	0	2.11.0	2.12.0	https://github.com/apache/xerces2-j	992b5d9c24102ad20330d36c0a71162753a37449	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/jar/xercesImpl-2.11.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/jar/xercesImpl-2.12.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/java/src/org/apache/xerces/util/SymbolHash.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/java/src/org/apache/xerces/util/SymbolHash.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/class/src/org/apache/xerces/util/SymbolHash.class	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/class/src/org/apache/xerces/util/SymbolHash.class	SymbolHash	[SymbolHash::makeClone, SymbolHash::hash, SymbolHash::hash0, SymbolHash::SymbolHash, SymbolHash::clear, SymbolHash::rebalance, SymbolHash::rehashCommon, SymbolHash::rehash, SymbolHash::put]	org.apache.xerces.util	org.apache.xerces.util	"{""added"": [[34, """"], [36, ""    protected static final int TABLE_SIZE = 101;""], [37, """"], [38, ""    /** Maximum hash collisions per bucket. */""], [39, ""    protected static final int MAX_HASH_COLLISIONS = 40;""], [40, """"], [41, ""    protected static final int MULTIPLIERS_SIZE = 1 << 5;""], [42, ""    protected static final int MULTIPLIERS_MASK = MULTIPLIERS_SIZE - 1;""], [47, """"], [48, ""    /** Actual table size **/""], [49, ""    protected int fTableSize;""], [56, """"], [57, ""    /**""], [58, ""     * Array of randomly selected hash function multipliers or <code>null</code>""], [59, ""     * if the default String.hashCode() function should be used.""], [60, ""     */""], [61, ""    protected int[] fHashMultipliers;""], [69, ""        this(TABLE_SIZE);""], [95, """"], [96, ""        // search for identical key""], [97, ""        int collisionCount = 0;""], [100, ""        for (Entry entry = fBuckets[bucket]; entry != null; entry = entry.next) {""], [101, ""            if (key.equals(entry.key)) {""], [102, ""                // replace old value""], [103, ""                entry.value = value;""], [104, ""                return;""], [106, ""            ++collisionCount;""], [108, """"], [109, ""        if (fNum >= fTableSize) {""], [110, ""            // Rehash the table if the number of entries""], [111, ""            // would exceed the number of buckets.""], [112, ""            rehash();""], [113, ""            bucket = hash % fTableSize;""], [114, ""        }""], [115, ""        else if (collisionCount >= MAX_HASH_COLLISIONS && key instanceof String) {""], [116, ""            // Select a new hash function and rehash the table if""], [117, ""            // MAX_HASH_COLLISIONS is exceeded.""], [118, ""            rebalance();""], [119, ""            bucket = hash(key) % fTableSize;""], [120, ""        }""], [121, """"], [122, ""        // create new entry""], [123, ""        Entry entry = new Entry(key, value, fBuckets[bucket]);""], [124, ""        fBuckets[bucket] = entry;""], [125, ""        ++fNum;""], [190, ""        newTable.fHashMultipliers = fHashMultipliers != null ? (int[]) fHashMultipliers.clone() : null;""], [208, ""        fHashMultipliers = null;""], [226, ""        if (fHashMultipliers == null || !(key instanceof String)) {""], [227, ""            return key.hashCode() & 0x7FFFFFFF;""], [228, ""        }""], [229, ""        return hash0((String) key);""], [230, ""    } // hash(Object):int""], [231, """"], [232, ""    private int hash0(String symbol) {""], [233, ""        int code = 0;""], [234, ""        final int length = symbol.length();""], [235, ""        final int[] multipliers = fHashMultipliers;""], [236, ""        for (int i = 0; i < length; ++i) {""], [237, ""            code = code * multipliers[i & MULTIPLIERS_MASK] + symbol.charAt(i);""], [238, ""        }""], [239, ""        return code & 0x7FFFFFFF;""], [240, ""    } // hash0(String):int""], [249, ""        rehashCommon((fBuckets.length << 1) + 1);""], [250, ""    }""], [251, """"], [252, ""    /**""], [253, ""     * Randomly selects a new hash function and reorganizes this SymbolHash""], [254, ""     * in order to more evenly distribute its entries across the table. This""], [255, ""     * method is called automatically when the number keys in one of the""], [256, ""     * SymbolHash's buckets exceeds MAX_HASH_COLLISIONS.""], [257, ""     */""], [258, ""    protected void rebalance() {""], [259, ""        if (fHashMultipliers == null) {""], [260, ""            fHashMultipliers = new int[MULTIPLIERS_SIZE];""], [261, ""        }""], [262, ""        PrimeNumberSequenceGenerator.generateSequence(fHashMultipliers);""], [263, ""        rehashCommon(fBuckets.length);""], [264, ""    }""], [265, """"], [266, ""    private void rehashCommon(final int newCapacity) {""], [267, """"]], ""deleted"": [[34, """"], [36, ""    protected int fTableSize = 101;""], [54, ""        fBuckets = new Entry[fTableSize];""], [82, ""        Entry entry = search(key, bucket);""], [83, """"], [84, ""        // replace old value""], [85, ""        if (entry != null) {""], [86, ""            entry.value = value;""], [87, ""        }""], [88, ""        // create new entry""], [89, ""        else {""], [90, ""            if (fNum >= fTableSize) {""], [91, ""                // Rehash the table if the number of entries""], [92, ""                // would exceed the number of buckets.""], [93, ""                rehash();""], [94, ""                bucket = hash % fTableSize;""], [96, ""            entry = new Entry(key, value, fBuckets[bucket]);""], [97, ""            fBuckets[bucket] = entry;""], [98, ""            fNum++;""], [198, ""        return key.hashCode() & 0x7FFFFFFF;""], [199, ""    }""], [208, """"], [212, ""        final int newCapacity = (oldCapacity << 1) + 1;""]]}"	161
CVE-2012-0881	GHSA-vmqm-g3vh-847m	xerces:xercesImpl	0	2.11.0	2.12.0	https://github.com/apache/xerces2-j	992b5d9c24102ad20330d36c0a71162753a37449	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/jar/xercesImpl-2.11.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/jar/xercesImpl-2.12.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/java/src/org/apache/xerces/util/SymbolTable.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/java/src/org/apache/xerces/util/SymbolTable.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/class/src/org/apache/xerces/util/SymbolTable.class	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/class/src/org/apache/xerces/util/SymbolTable.class	SymbolTable	[SymbolTable::hash, SymbolTable::hash0, SymbolTable::rehashCommon, SymbolTable::SymbolTable, SymbolTable::addSymbol, SymbolTable::hash0, SymbolTable::rehash, SymbolTable::rebalance, SymbolTable::addSymbol, SymbolTable::hash]	org.apache.xerces.util	org.apache.xerces.util	"{""added"": [[87, """"], [88, ""    /** Maximum hash collisions per bucket for a table with load factor == 1. */""], [89, ""    protected static final int MAX_HASH_COLLISIONS = 40;""], [90, """"], [91, ""    protected static final int MULTIPLIERS_SIZE = 1 << 5;""], [92, ""    protected static final int MULTIPLIERS_MASK = MULTIPLIERS_SIZE - 1;""], [113, """"], [114, ""    /**""], [115, ""     * A new hash function is selected and the table is rehashed when""], [116, ""     * the number of keys in the bucket exceeds this threshold.""], [117, ""     */""], [118, ""    protected final int fCollisionThreshold;""], [119, """"], [120, ""    /**""], [121, ""     * Array of randomly selected hash function multipliers or <code>null</code>""], [122, ""     * if the default String.hashCode() function should be used.""], [123, ""     */""], [124, ""    protected int[] fHashMultipliers;""], [157, ""        fCollisionThreshold = (int)(MAX_HASH_COLLISIONS * loadFactor);""], [196, ""        int collisionCount = 0;""], [202, ""            ++collisionCount;""], [209, ""        }""], [210, ""        else if (collisionCount >= fCollisionThreshold) {""], [211, ""            // Select a new hash function and rehash the table if""], [212, ""            // the collision threshold is exceeded.""], [213, ""            rebalance();""], [214, ""            bucket = hash(symbol) % fTableSize;""], [215, ""        }""], [238, ""        int collisionCount = 0;""], [244, ""                        ++collisionCount;""], [250, ""            ++collisionCount;""], [257, ""        }""], [258, ""        else if (collisionCount >= fCollisionThreshold) {""], [259, ""            // Select a new hash function and rehash the table if""], [260, ""            // the collision threshold is exceeded.""], [261, ""            rebalance();""], [262, ""            bucket = hash(buffer, offset, length) % fTableSize;""], [263, ""        }""], [282, ""        if (fHashMultipliers == null) {""], [283, ""            return symbol.hashCode() & 0x7FFFFFFF;""], [284, ""        }""], [285, ""        return hash0(symbol);""], [287, """"], [288, ""    private int hash0(String symbol) {""], [289, ""        int code = 0;""], [290, ""        final int length = symbol.length();""], [291, ""        final int[] multipliers = fHashMultipliers;""], [292, ""        for (int i = 0; i < length; ++i) {""], [293, ""            code = code * multipliers[i & MULTIPLIERS_MASK] + symbol.charAt(i);""], [294, ""        }""], [295, ""        return code & 0x7FFFFFFF;""], [296, ""    } // hash0(String):int""], [310, ""        if (fHashMultipliers == null) {""], [311, ""            int code = 0;""], [312, ""            for (int i = 0; i < length; ++i) {""], [313, ""                code = code * 31 + buffer[offset + i];""], [314, ""            }""], [315, ""            return code & 0x7FFFFFFF;""], [316, ""        }""], [317, ""        return hash0(buffer, offset, length);""], [319, ""    } // hash(char[],int,int):int""], [320, """"], [321, ""    private int hash0(char[] buffer, int offset, int length) {""], [323, ""        final int[] multipliers = fHashMultipliers;""], [325, ""            code = code * multipliers[i & MULTIPLIERS_MASK] + buffer[offset + i];""], [328, ""    } // hash0(char[],int,int):int""], [338, ""        rehashCommon(fBuckets.length * 2 + 1);""], [339, ""    }""], [340, """"], [341, ""    /**""], [342, ""     * Randomly selects a new hash function and reorganizes this SymbolTable""], [343, ""     * in order to more evenly distribute its entries across the table. This""], [344, ""     * method is called automatically when the number keys in one of the""], [345, ""     * SymbolTable's buckets exceeds the given collision threshold.""], [346, ""     */""], [347, ""    protected void rebalance() {""], [348, ""        if (fHashMultipliers == null) {""], [349, ""            fHashMultipliers = new int[MULTIPLIERS_SIZE];""], [350, ""        }""], [351, ""        PrimeNumberSequenceGenerator.generateSequence(fHashMultipliers);""], [352, ""        rehashCommon(fBuckets.length);""], [353, ""    }""], [354, """"], [355, ""    private void rehashCommon(final int newCapacity) {""], [356, """"], [371, ""                int index = hash(e.symbol) % newCapacity;""]], ""deleted"": [[188, ""        }""], [227, ""        }""], [246, ""        return symbol.hashCode() & 0x7FFFFFFF;""], [264, ""            code = code * 31 + buffer[offset + i];""], [267, """"], [268, ""    } // hash(char[],int,int):int""], [278, """"], [282, ""        int newCapacity = oldCapacity * 2 + 1;""], [294, ""                int index = hash(e.characters, 0, e.characters.length) % newCapacity;""]]}"	193
CVE-2012-0881	GHSA-vmqm-g3vh-847m	xerces:xercesImpl	0	2.11.0	2.12.0	https://github.com/apache/xerces2-j	992b5d9c24102ad20330d36c0a71162753a37449	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/jar/xercesImpl-2.11.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/jar/xercesImpl-2.12.0.jar	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/java/src/org/apache/xerces/util/XMLAttributesImpl.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/java/src/org/apache/xerces/util/XMLAttributesImpl.java	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/before/class/src/org/apache/xerces/util/XMLAttributesImpl.class	proc/changes/CVE-2012-0881/992b5d9c24102ad20330d36c0a71162753a37449/after/class/src/org/apache/xerces/util/XMLAttributesImpl.class	XMLAttributesImpl	[XMLAttributesImpl::prepareAndPopulateTableViewNS, XMLAttributesImpl::hash, XMLAttributesImpl::getTableViewBucket, XMLAttributesImpl::hash, XMLAttributesImpl::hash0, XMLAttributesImpl::prepareAndPopulateTableView, XMLAttributesImpl::rebalanceTableView, XMLAttributesImpl::rebalanceTableViewNS, XMLAttributesImpl::prepareTableView, XMLAttributesImpl::checkManyDuplicatesNS, XMLAttributesImpl::checkDuplicatesNS, XMLAttributesImpl::addAttribute, XMLAttributesImpl::growTableView, XMLAttributesImpl::prepareAndPopulateTableView, XMLAttributesImpl::getTableViewBucket]	org.apache.xerces.util	org.apache.xerces.util	"{""added"": [[53, ""    /** Maximum hash collisions per bucket. */""], [54, ""    protected static final int MAX_HASH_COLLISIONS = 40;""], [55, """"], [56, ""    protected static final int MULTIPLIERS_SIZE = 1 << 5;""], [57, ""    protected static final int MULTIPLIERS_MASK = MULTIPLIERS_SIZE - 1;""], [58, """"], [112, """"], [113, ""    /**""], [114, ""     * Array of randomly selected hash function multipliers or <code>null</code>""], [115, ""     * if the default String.hashCode() function should be used.""], [116, ""     */""], [117, ""    protected int[] fHashMultipliers;""], [218, ""            if (!fIsTableViewConsistent || fLength == SIZE_LIMIT ||""], [219, ""                (fLength > SIZE_LIMIT && fLength > fTableViewBuckets)) {""], [248, ""                int collisionCount = 0;""], [255, ""                    ++collisionCount;""], [268, ""                    // Select a new hash function and rehash the table view""], [269, ""                    // if the collision threshold is exceeded.""], [270, ""                    if (collisionCount >= MAX_HASH_COLLISIONS) {""], [271, ""                        // The current attribute will be processed in the rehash.""], [272, ""                        // Need to set its name first.""], [273, ""                        fAttributes[index].name.setValues(name);""], [274, ""                        rebalanceTableView(fLength);""], [275, ""                    }""], [276, ""                    else {""], [277, ""                        // Update table view""], [278, ""                        fAttributes[index].next = fAttributeTableView[bucket];""], [279, ""                        fAttributeTableView[bucket] = fAttributes[index];""], [280, ""                    }""], [856, ""        final int length = fLength;""], [857, ""        if (length <= SIZE_LIMIT) {""], [858, ""            final Attribute[] attributes = fAttributes;""], [859, ""            for (int i = 0; i < length - 1; ++i) {""], [860, ""            \tAttribute att1 = attributes[i];""], [861, ""                for (int j = i + 1; j < length; ++j) {""], [862, ""                    Attribute att2 = attributes[j];""], [865, ""                        return att2.name;""], [869, ""            return null;""], [873, ""    \t    return checkManyDuplicatesNS();""], [874, ""    \t}""], [875, ""    }""], [876, """"], [877, ""    private QName checkManyDuplicatesNS() {""], [878, ""        // We don't want this table view to be read if someone calls""], [879, ""        // addAttribute so we invalidate it up front.""], [880, ""        fIsTableViewConsistent = false;""], [882, ""        prepareTableView();""], [884, ""        Attribute attr;""], [885, ""        int bucket;""], [886, """"], [887, ""        final int length = fLength;""], [888, ""        final Attribute[] attributes = fAttributes;""], [889, ""        final Attribute[] attributeTableView = fAttributeTableView;""], [890, ""        final int[] attributeTableViewChainState = fAttributeTableViewChainState;""], [891, ""        int largeCount = fLargeCount;""], [892, """"], [893, ""        for (int i = 0; i < length; ++i) {""], [894, ""            attr = attributes[i];""], [895, ""            bucket = getTableViewBucket(attr.name.localpart, attr.name.uri);""], [896, """"], [897, ""            // The chain is stale.""], [898, ""            // This must be a unique attribute.""], [899, ""            if (attributeTableViewChainState[bucket] != largeCount) {""], [900, ""                attributeTableViewChainState[bucket] = largeCount;""], [901, ""                attr.next = null;""], [902, ""                attributeTableView[bucket] = attr;""], [903, ""            }""], [904, ""            // This chain is active.""], [905, ""            // We need to check if any of the attributes has the same name.""], [906, ""            else {""], [907, ""                // Search the table.""], [908, ""                int collisionCount = 0;""], [909, ""                Attribute found = attributeTableView[bucket];""], [910, ""                while (found != null) {""], [911, ""                    if (found.name.localpart == attr.name.localpart &&""], [912, ""                        found.name.uri == attr.name.uri) {""], [913, ""                        return attr.name;""], [914, ""                    }""], [915, ""                    found = found.next;""], [916, ""                    ++collisionCount;""], [917, ""                }""], [919, ""                // Select a new hash function and rehash the table view""], [920, ""                // if the collision threshold is exceeded.""], [921, ""                if (collisionCount >= MAX_HASH_COLLISIONS) {""], [922, ""                    // The current attribute will be processed in the rehash.""], [923, ""                    rebalanceTableViewNS(i+1);""], [924, ""                    largeCount = fLargeCount;""], [925, ""                }""], [928, ""                    attr.next = attributeTableView[bucket];""], [929, ""                    attributeTableView[bucket] = attr;""], [932, ""        }""], [933, ""        return null;""], [984, ""        return (hash(qname) & 0x7FFFFFFF) % fTableViewBuckets;""], [998, ""            return (hash(localpart) & 0x7FFFFFFF) % fTableViewBuckets;""], [1001, ""            return (hash(localpart, uri) & 0x7FFFFFFF) % fTableViewBuckets;""], [1004, """"], [1005, ""    private int hash(String localpart) {""], [1006, ""        if (fHashMultipliers == null) {""], [1007, ""            return localpart.hashCode();""], [1008, ""        }""], [1009, ""        return hash0(localpart);""], [1010, ""    } // hash(String):int""], [1011, """"], [1012, ""    private int hash(String localpart, String uri) {""], [1013, ""        if (fHashMultipliers == null) {""], [1014, ""            return localpart.hashCode() + uri.hashCode() * 31;""], [1015, ""        }""], [1016, ""        return hash0(localpart) + hash0(uri) * fHashMultipliers[MULTIPLIERS_SIZE];""], [1017, ""    } // hash(String,String):int""], [1018, """"], [1019, ""    private int hash0(String symbol) {""], [1020, ""        int code = 0;""], [1021, ""        final int length = symbol.length();""], [1022, ""        final int[] multipliers = fHashMultipliers;""], [1023, ""        for (int i = 0; i < length; ++i) {""], [1024, ""            code = code * multipliers[i & MULTIPLIERS_MASK] + symbol.charAt(i);""], [1025, ""        }""], [1026, ""        return code;""], [1027, ""    } // hash0(String):int""], [1044, ""    /**""], [1045, ""     * Increases the capacity of the table view.""], [1046, ""     */""], [1047, ""    private void growTableView() {""], [1048, ""        final int length = fLength;""], [1049, ""        int tableViewBuckets = fTableViewBuckets;""], [1050, ""        do {""], [1051, ""            tableViewBuckets = (tableViewBuckets << 1) + 1;""], [1052, ""            if (tableViewBuckets < 0) {""], [1053, ""                tableViewBuckets = Integer.MAX_VALUE;""], [1054, ""                break;""], [1055, ""            }""], [1056, ""        }""], [1057, ""        while (length > tableViewBuckets);""], [1058, ""        fTableViewBuckets = tableViewBuckets;""], [1059, ""        fAttributeTableView = null;""], [1060, ""        fLargeCount = 1;""], [1061, ""    }""], [1062, """"], [1067, ""        if (fLength > fTableViewBuckets) {""], [1068, ""            growTableView();""], [1069, ""        }""], [1085, ""        prepareAndPopulateTableView(fLength);""], [1086, ""    }""], [1087, """"], [1088, ""    private void prepareAndPopulateTableView(final int count) {""], [1090, ""        // Need to populate the hash table with the attributes we've processed so far.""], [1093, ""        for (int i = 0; i < count; ++i) {""], [1108, """"], [1109, ""    private void prepareAndPopulateTableViewNS(final int count) {""], [1110, ""        prepareTableView();""], [1111, ""        // Need to populate the hash table with the attributes we've processed so far.""], [1112, ""        Attribute attr;""], [1113, ""        int bucket;""], [1114, ""        for (int i = 0; i < count; ++i) {""], [1115, ""            attr = fAttributes[i];""], [1116, ""            bucket = getTableViewBucket(attr.name.localpart, attr.name.uri);""], [1117, ""            if (fAttributeTableViewChainState[bucket] != fLargeCount) {""], [1118, ""                fAttributeTableViewChainState[bucket] = fLargeCount;""], [1119, ""                attr.next = null;""], [1120, ""                fAttributeTableView[bucket] = attr;""], [1121, ""            }""], [1122, ""            else {""], [1123, ""                // Update table view""], [1124, ""                attr.next = fAttributeTableView[bucket];""], [1125, ""                fAttributeTableView[bucket] = attr;""], [1126, ""            }""], [1127, ""        }""], [1128, ""    }""], [1129, """"], [1130, ""    /**""], [1131, ""     * Randomly selects a new hash function and reorganizes the table view""], [1132, ""     * in order to more evenly distribute its entries. This method is called""], [1133, ""     * automatically when the number of attributes in one bucket exceeds""], [1134, ""     * MAX_HASH_COLLISIONS.""], [1135, ""     */""], [1136, ""    private void rebalanceTableView(final int count) {""], [1137, ""        if (fHashMultipliers == null) {""], [1138, ""            fHashMultipliers = new int[MULTIPLIERS_SIZE + 1];""], [1139, ""        }""], [1140, ""        PrimeNumberSequenceGenerator.generateSequence(fHashMultipliers);""], [1141, ""        prepareAndPopulateTableView(count);""], [1142, ""    }""], [1143, """"], [1144, ""    /**""], [1145, ""     * Randomly selects a new hash function and reorganizes the table view""], [1146, ""     * in order to more evenly distribute its entries. This method is called""], [1147, ""     * automatically when the number of attributes in one bucket exceeds""], [1148, ""     * MAX_HASH_COLLISIONS.""], [1149, ""     */""], [1150, ""    private void rebalanceTableViewNS(final int count) {""], [1151, ""        if (fHashMultipliers == null) {""], [1152, ""            fHashMultipliers = new int[MULTIPLIERS_SIZE + 1];""], [1153, ""        }""], [1154, ""        PrimeNumberSequenceGenerator.generateSequence(fHashMultipliers);""], [1155, ""        prepareAndPopulateTableViewNS(count);""], [1156, ""    }""]], ""deleted"": [[206, ""            if (!fIsTableViewConsistent || fLength == SIZE_LIMIT) {""], [253, """"], [254, ""                    // Update table view""], [255, ""                    fAttributes[index].next = fAttributeTableView[bucket];""], [256, ""                    fAttributeTableView[bucket] = fAttributes[index];""], [832, ""        if (fLength <= SIZE_LIMIT) {""], [833, ""            for (int i = 0; i < fLength - 1; ++i) {""], [834, ""            \tAttribute att1 = fAttributes[i];""], [835, ""                for (int j = i + 1; j < fLength; ++j) {""], [836, ""                    Attribute att2 = fAttributes[j];""], [839, ""                        return att2.name;""], [846, ""            // We don't want this table view to be read if someone calls""], [847, ""            // addAttribute so we invalidate it up front.""], [848, ""            fIsTableViewConsistent = false;""], [849, """"], [850, ""            prepareTableView();""], [852, ""            Attribute attr;""], [853, ""            int bucket;""], [855, ""            for (int i = fLength - 1; i >= 0; --i) {""], [856, ""                attr = fAttributes[i];""], [857, ""                bucket = getTableViewBucket(attr.name.localpart, attr.name.uri);""], [859, ""                // The chain is stale.""], [860, ""                // This must be a unique attribute.""], [861, ""                if (fAttributeTableViewChainState[bucket] != fLargeCount) {""], [862, ""                    fAttributeTableViewChainState[bucket] = fLargeCount;""], [863, ""                    attr.next = null;""], [864, ""                    fAttributeTableView[bucket] = attr;""], [865, ""                }""], [866, ""                // This chain is active.""], [867, ""                // We need to check if any of the attributes has the same name.""], [869, ""                    // Search the table.""], [870, ""                    Attribute found = fAttributeTableView[bucket];""], [871, ""                    while (found != null) {""], [872, ""                        if (found.name.localpart == attr.name.localpart &&""], [873, ""                            found.name.uri == attr.name.uri) {""], [874, ""                            return attr.name;""], [875, ""                        }""], [876, ""                        found = found.next;""], [877, ""                    }""], [878, """"], [880, ""                    attr.next = fAttributeTableView[bucket];""], [881, ""                    fAttributeTableView[bucket] = attr;""], [884, ""    \t}""], [885, ""    \treturn null;""], [936, ""        return (qname.hashCode() & 0x7FFFFFFF) % fTableViewBuckets;""], [950, ""            return (localpart.hashCode() & 0x7FFFFFFF) % fTableViewBuckets;""], [953, ""            return ((localpart.hashCode() + uri.hashCode())""], [954, ""               & 0x7FFFFFFF) % fTableViewBuckets;""], [993, ""        // Need to populate the hash table with the attributes we've scanned so far.""], [996, ""        for (int i = 0; i < fLength; ++i) {""]]}"	514
CVE-2018-10899	GHSA-xcxf-7q4p-cj26	org.jolokia:jolokia-core	1.2	1.6.0	1.6.1	https://github.com/rhuss/jolokia	ec1cebda618e68d12c9b1906820564408cf950e1	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/jar/jolokia-core-1.6.0.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/jar/jolokia-core-1.6.1.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/java/agent/core/src/main/java/org/jolokia/backend/BackendManager.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/java/agent/core/src/main/java/org/jolokia/backend/BackendManager.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/class/agent/core/src/main/java/org/jolokia/backend/BackendManager.class	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/class/agent/core/src/main/java/org/jolokia/backend/BackendManager.class	BackendManager	[BackendManager::isOriginAllowed, BackendManager::isOriginAllowed]	org.jolokia.backend	org.jolokia.backend	"{""added"": [[227, ""     * @param pOrigin origin URL which needs to be checked. Can be null.""], [228, ""     * @param pOnlyWhenStrictCheckingIsEnabled whether do the check only when strict-checking is enabled.""], [229, ""     *                                         If true an no strict-checking is configured then always allow.""], [232, ""    public boolean isOriginAllowed(String pOrigin,boolean pOnlyWhenStrictCheckingIsEnabled) {""], [233, ""        return restrictor.isOriginAllowed(pOrigin, pOnlyWhenStrictCheckingIsEnabled);""]], ""deleted"": [[227, ""     * @param pOrigin origin URL which needs to be checked""], [228, ""     * @param pStrictChecking whether to a strict check (i.e. server side check)""], [231, ""    public boolean isOriginAllowed(String pOrigin,boolean pStrictChecking) {""], [232, ""        return restrictor.isOriginAllowed(pOrigin, pStrictChecking);""]]}"	276
CVE-2018-10899	GHSA-xcxf-7q4p-cj26	org.jolokia:jolokia-core	1.2	1.6.0	1.6.1	https://github.com/rhuss/jolokia	ec1cebda618e68d12c9b1906820564408cf950e1	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/jar/jolokia-core-1.6.0.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/jar/jolokia-core-1.6.1.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/java/agent/core/src/main/java/org/jolokia/http/AgentServlet.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/java/agent/core/src/main/java/org/jolokia/http/AgentServlet.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/class/agent/core/src/main/java/org/jolokia/http/AgentServlet.class	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/class/agent/core/src/main/java/org/jolokia/http/AgentServlet.class	AgentServlet	[AgentServlet::doOptions]	org.jolokia.http	org.jolokia.http	"{""added"": [[297, ""                        getOriginOrReferer(req),""]], ""deleted"": [[297, ""                        req.getHeader(\""Origin\""),""]]}"	399
CVE-2018-10899	GHSA-xcxf-7q4p-cj26	org.jolokia:jolokia-core	1.2	1.6.0	1.6.1	https://github.com/rhuss/jolokia	ec1cebda618e68d12c9b1906820564408cf950e1	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/jar/jolokia-core-1.6.0.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/jar/jolokia-core-1.6.1.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/java/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/java/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/class/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.class	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/class/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.class	HttpRequestHandler	[HttpRequestHandler::checkAccess, HttpRequestHandler::handleCorsPreflightRequest]	org.jolokia.http	org.jolokia.http	"{""added"": [[156, ""        if (backendManager.isOriginAllowed(pOrigin,false)) {""], [158, ""            ret.put(\""Access-Control-Allow-Origin\"",pOrigin == null || \""null\"".equals(pOrigin) ? \""*\"" : pOrigin);""], [164, ""            // Allow for one year. Changes in access.xml are reflected directly in the CORS request itself""], [286, ""        if (!backendManager.isOriginAllowed(pOrigin,true)) {""]], ""deleted"": [[156, ""        if (pOrigin != null && backendManager.isOriginAllowed(pOrigin,false)) {""], [158, ""            ret.put(\""Access-Control-Allow-Origin\"",\""null\"".equals(pOrigin) ? \""*\"" : pOrigin);""], [164, ""            // Allow for one year. Changes in access.xml are reflected directly in the  cors request itself""], [286, ""        if (pOrigin != null && !backendManager.isOriginAllowed(pOrigin,true)) {""]]}"	201
CVE-2018-10899	GHSA-xcxf-7q4p-cj26	org.jolokia:jolokia-core	1.2	1.6.0	1.6.1	https://github.com/rhuss/jolokia	ec1cebda618e68d12c9b1906820564408cf950e1	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/jar/jolokia-core-1.6.0.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/jar/jolokia-core-1.6.1.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/java/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/java/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/class/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.class	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/class/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.class	AbstractConstantRestrictor	[AbstractConstantRestrictor::isOriginAllowed, AbstractConstantRestrictor::isOriginAllowed]	org.jolokia.restrictor	org.jolokia.restrictor	"{""added"": [[76, ""    public boolean isOriginAllowed(String pOrigin, boolean pOnlyWhenStrictCheckingIsEnabled) {""]], ""deleted"": [[76, ""    public boolean isOriginAllowed(String pOrigin, boolean pIsStrictCheck) {""]]}"	31
CVE-2018-10899	GHSA-xcxf-7q4p-cj26	org.jolokia:jolokia-core	1.2	1.6.0	1.6.1	https://github.com/rhuss/jolokia	ec1cebda618e68d12c9b1906820564408cf950e1	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/jar/jolokia-core-1.6.0.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/jar/jolokia-core-1.6.1.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/java/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/java/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/class/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.class	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/class/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.class	PolicyRestrictor	[PolicyRestrictor::isOriginAllowed, PolicyRestrictor::isOriginAllowed, PolicyRestrictor::isAttributeReadAllowed]	org.jolokia.restrictor	org.jolokia.restrictor	"{""added"": [[123, ""    public boolean isOriginAllowed(String pOrigin, boolean pOnlyWhenStrictCheckingIsEnabled) {""], [124, ""        return corsChecker.check(pOrigin, pOnlyWhenStrictCheckingIsEnabled);""], [129, ""        return check(RequestType.READ, pName, pAttribute);""]], ""deleted"": [[123, ""    public boolean isOriginAllowed(String pOrigin, boolean pIsStrictCheck) {""], [124, ""        return corsChecker.check(pOrigin,pIsStrictCheck);""], [129, ""        return check(RequestType.READ,pName,pAttribute);""]]}"	83
CVE-2018-10899	GHSA-xcxf-7q4p-cj26	org.jolokia:jolokia-core	1.2	1.6.0	1.6.1	https://github.com/rhuss/jolokia	ec1cebda618e68d12c9b1906820564408cf950e1	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/jar/jolokia-core-1.6.0.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/jar/jolokia-core-1.6.1.jar	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/java/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/java/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.java	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/before/class/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.class	proc/changes/CVE-2018-10899/ec1cebda618e68d12c9b1906820564408cf950e1/after/class/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.class	CorsChecker	[CorsChecker::check, CorsChecker::check]	org.jolokia.restrictor.policy	org.jolokia.restrictor.policy	"{""added"": [[82, ""    public boolean check(String pOrigin, boolean pOnlyWhenStrictCheckingIsEnabled) {""], [85, ""        if (pOnlyWhenStrictCheckingIsEnabled && !strictChecking) {""], [89, ""        // If strict checking is enabled but Origin is null, the don't allow. This can""], [90, ""        // be the case when both Referer: and Origin: are set to null""], [91, ""        if (pOrigin == null && strictChecking) {""], [92, ""            return false;""], [93, ""        }""], [94, """"], [95, ""        if (patterns == null || patterns.size() == 0 || pOrigin == null) {""], [98, """"]], ""deleted"": [[82, ""    public boolean check(String pOrigin, boolean pIsStrictCheck) {""], [85, ""        if (pIsStrictCheck && !strictChecking) {""], [89, ""        if (patterns == null || patterns.size() == 0) {""]]}"	54
CVE-2013-6397	GHSA-j8qw-mwmv-28cg	org.apache.solr:solr-core	0	4.5.1	4.6.0	https://git-wip-us.apache.org/repos/asf/lucene-solr	da34b18cb3092df4972e2b6fa5178d1059923910	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/before/jar/solr-core-4.5.1.jar	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/after/jar/solr-core-4.6.0.jar	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/before/java/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.java	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/after/java/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.java	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/before/class/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.class	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/after/class/solr/core/src/java/org/apache/solr/cloud/ZkSolrResourceLoader.class	ZkSolrResourceLoader	[ZkSolrResourceLoader::openResource]	org.apache.solr.cloud	org.apache.solr.cloud	"{""added"": [[21, ""import java.io.File;""], [79, ""        byte[] bytes = zkController.getZkClient().getData(file, null, null, true);""], [87, ""      is = classLoader.getResourceAsStream(resource.replace(File.separatorChar, '/'));""]], ""deleted"": [[78, ""        byte[] bytes = zkController.getZkClient().getData(collectionZkPath + \""/\"" + resource, null, null, true);""], [86, ""      is = classLoader.getResourceAsStream(resource);""]]}"	81
CVE-2013-6397	GHSA-j8qw-mwmv-28cg	org.apache.solr:solr-core	0	4.5.1	4.6.0	https://git-wip-us.apache.org/repos/asf/lucene-solr	da34b18cb3092df4972e2b6fa5178d1059923910	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/before/jar/solr-core-4.5.1.jar	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/after/jar/solr-core-4.6.0.jar	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/before/java/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/after/java/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/before/class/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.class	proc/changes/CVE-2013-6397/da34b18cb3092df4972e2b6fa5178d1059923910/after/class/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.class	SolrResourceLoader	[SolrResourceLoader::openResource, SolrResourceLoader::getConfigDir]	org.apache.solr.core	org.apache.solr.core	"{""added"": [[58, ""import java.net.URI;""], [254, ""    return instanceDir + \""conf\"" + File.separator;""], [303, ""      File f0 = new File(resource), f = f0;""], [306, ""        f = new File(getConfigDir() + resource).getAbsoluteFile();""], [308, ""      boolean found = f.isFile() && f.canRead();""], [309, ""      if (!found) { // no success with $CWD/$configDir/$resource""], [310, ""        f = f0.getAbsoluteFile();""], [311, ""        found = f.isFile() && f.canRead();""], [312, ""      }""], [313, ""      // check that we don't escape instance dir""], [314, ""      if (found) {""], [315, ""        if (!Boolean.parseBoolean(System.getProperty(\""solr.allow.unsafe.resourceloading\"", \""false\""))) {""], [316, ""          final URI instanceURI = new File(getInstanceDir()).getAbsoluteFile().toURI().normalize();""], [317, ""          final URI fileURI = f.toURI().normalize();""], [318, ""          if (instanceURI.relativize(fileURI) == fileURI) {""], [319, ""            // no URI relativize possible, so they don't share same base folder""], [320, ""            throw new IOException(\""For security reasons, SolrResourceLoader cannot load files from outside the instance's directory: \"" + f +""], [321, ""                \""; if you want to override this safety feature and you are sure about the consequences, you can pass the system property \""+""], [322, ""                \""-Dsolr.allow.unsafe.resourceloading=true to your JVM\"");""], [323, ""          }""], [324, ""        }""], [325, ""        // relativize() returned a relative, new URI, so we are fine!""], [328, ""      // Delegate to the class loader (looking into $INSTANCE_DIR/lib jars).""], [329, ""      // We need a ClassLoader-compatible (forward-slashes) path here!""], [330, ""      is = classLoader.getResourceAsStream(resource.replace(File.separatorChar, '/'));""], [331, ""      // This is a hack just for tests (it is not done in ZKResourceLoader)!""], [332, ""      // -> the getConfigDir's path must not be absolute!""], [333, ""      if (is == null && System.getProperty(\""jetty.testMode\"") != null && !new File(getConfigDir()).isAbsolute()) {""], [334, ""        is = classLoader.getResourceAsStream((getConfigDir() + resource).replace(File.separatorChar, '/'));""], [335, ""      }""], [336, ""    } catch (IOException ioe) {""], [337, ""      throw ioe;""], [342, ""      throw new IOException(\""Can't find resource '\"" + resource + \""' in classpath or '\"" + new File(getConfigDir()).getAbsolutePath() + \""'\"");""]], ""deleted"": [[253, ""    return instanceDir + \""conf/\"";""], [302, ""      File f0 = new File(resource);""], [303, ""      File f = f0;""], [306, ""        f = new File(getConfigDir() + resource);""], [308, ""      if (f.isFile() && f.canRead()) {""], [310, ""      } else if (f != f0) { // no success with $CWD/$configDir/$resource""], [311, ""        if (f0.isFile() && f0.canRead())""], [312, ""          return new FileInputStream(f0);""], [314, ""      // delegate to the class loader (looking into $INSTANCE_DIR/lib jars)""], [315, ""      is = classLoader.getResourceAsStream(resource);""], [316, ""      if (is == null)""], [317, ""        is = classLoader.getResourceAsStream(getConfigDir() + resource);""], [322, ""      throw new IOException(\""Can't find resource '\"" + resource + \""' in classpath or '\"" + getConfigDir() + \""', cwd=\""+System.getProperty(\""user.dir\""));""]]}"	515
CVE-2019-1003005	GHSA-x5jm-rj37-5qh7	org.jenkins-ci.plugins:script-security	0	1.50	1.51	https://github.com/jenkinsci/script-security-plugin	35119273101af26792457ec177f34f6f4fa49d99	proc/changes/CVE-2019-1003005/35119273101af26792457ec177f34f6f4fa49d99/before/jar/script-security-1.50.jar	proc/changes/CVE-2019-1003005/35119273101af26792457ec177f34f6f4fa49d99/after/jar/script-security-1.51.jar	proc/changes/CVE-2019-1003005/35119273101af26792457ec177f34f6f4fa49d99/before/java/src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SecureGroovyScript.java	proc/changes/CVE-2019-1003005/35119273101af26792457ec177f34f6f4fa49d99/after/java/src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SecureGroovyScript.java	proc/changes/CVE-2019-1003005/35119273101af26792457ec177f34f6f4fa49d99/before/class/src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SecureGroovyScript$DescriptorImpl.class	proc/changes/CVE-2019-1003005/35119273101af26792457ec177f34f6f4fa49d99/after/class/src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SecureGroovyScript$DescriptorImpl.class	SecureGroovyScript$DescriptorImpl	[SecureGroovyScript::DescriptorImpl::doCheckScript]	org.jenkinsci.plugins.scriptsecurity.sandbox.groovy	org.jenkinsci.plugins.scriptsecurity.sandbox.groovy	"{""added"": [[75, ""import org.kohsuke.stapler.interceptor.RequirePOST;""], [411, ""        @RequirePOST""], [414, ""                new GroovyShell(Jenkins.getInstance().getPluginManager().uberClassLoader,""], [415, ""                        GroovySandbox.createSecureCompilerConfiguration()).parse(value);""]], ""deleted"": [[412, ""                new GroovyShell(Jenkins.getInstance().getPluginManager().uberClassLoader).parse(value);""]]}"	318
CVE-2018-1002200	GHSA-hcxq-x77q-3469	org.codehaus.plexus:plexus-archiver	0	3.5	3.6.0	https://github.com/codehaus-plexus/plexus-archiver	58bc24e465c0842981692adbf6d75680298989de	proc/changes/CVE-2018-1002200/58bc24e465c0842981692adbf6d75680298989de/before/jar/plexus-archiver-3.5.jar	proc/changes/CVE-2018-1002200/58bc24e465c0842981692adbf6d75680298989de/after/jar/plexus-archiver-3.6.0.jar	proc/changes/CVE-2018-1002200/58bc24e465c0842981692adbf6d75680298989de/before/java/src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java	proc/changes/CVE-2018-1002200/58bc24e465c0842981692adbf6d75680298989de/after/java/src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.java	proc/changes/CVE-2018-1002200/58bc24e465c0842981692adbf6d75680298989de/before/class/src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.class	proc/changes/CVE-2018-1002200/58bc24e465c0842981692adbf6d75680298989de/after/class/src/main/java/org/codehaus/plexus/archiver/AbstractUnArchiver.class	AbstractUnArchiver	[AbstractUnArchiver::extractFile]	org.codehaus.plexus.archiver	org.codehaus.plexus.archiver	"{""added"": [[311, ""        // Make sure that the resolved path of the extracted file doesn't escape the destination directory""], [312, ""        String canonicalDirPath = dir.getCanonicalPath();""], [313, ""        String canonicalDestPath = f.getCanonicalPath();""], [314, """"], [315, ""        if ( !canonicalDestPath.startsWith( canonicalDirPath ) )""], [316, ""        {""], [317, ""            throw new ArchiverException( \""Entry is outside of the target directory (\"" + entryName + \"")\"" );""], [318, ""        }""], [319, """"]], ""deleted"": []}"	271
CVE-2018-1309	GHSA-42wx-65g4-5cxv	org.apache.nifi:nifi-standard-processors	0.1.0	1.5.0	1.6.0	https://github.com/apache/nifi	28067a29fd13cdf8e21b440fc65c6dd67872522f	proc/changes/CVE-2018-1309/28067a29fd13cdf8e21b440fc65c6dd67872522f/before/jar/nifi-standard-processors-1.5.0.jar	proc/changes/CVE-2018-1309/28067a29fd13cdf8e21b440fc65c6dd67872522f/after/jar/nifi-standard-processors-1.6.0.jar	proc/changes/CVE-2018-1309/28067a29fd13cdf8e21b440fc65c6dd67872522f/before/java/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java	proc/changes/CVE-2018-1309/28067a29fd13cdf8e21b440fc65c6dd67872522f/after/java/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.java	proc/changes/CVE-2018-1309/28067a29fd13cdf8e21b440fc65c6dd67872522f/before/class/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.class	proc/changes/CVE-2018-1309/28067a29fd13cdf8e21b440fc65c6dd67872522f/after/class/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/SplitXml.class	SplitXml	[SplitXml::onTrigger]	org.apache.nifi.processors.standard	org.apache.nifi.processors.standard	"{""added"": [[19, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_COUNT;""], [20, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_ID;""], [21, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_INDEX;""], [22, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.SEGMENT_ORIGINAL_FILENAME;""], [23, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.copyAttributesToOriginal;""], [24, """"], [60, ""import org.apache.nifi.security.xml.XmlUtils;""], [175, ""            try (final InputStream in = new java.io.BufferedInputStream(rawIn)) {""], [177, ""                    final XMLReader reader = XmlUtils.createSafeSaxReader(saxParserFactory, parser);""]], ""deleted"": [[31, """"], [33, ""import javax.xml.parsers.SAXParser;""], [35, """"], [57, ""import org.apache.nifi.stream.io.BufferedInputStream;""], [67, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_COUNT;""], [68, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_ID;""], [69, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.FRAGMENT_INDEX;""], [70, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.SEGMENT_ORIGINAL_FILENAME;""], [71, ""import static org.apache.nifi.flowfile.attributes.FragmentAttributes.copyAttributesToOriginal;""], [72, """"], [178, ""            try (final InputStream in = new BufferedInputStream(rawIn)) {""], [179, ""                SAXParser saxParser = null;""], [181, ""                    saxParser = saxParserFactory.newSAXParser();""], [182, ""                    final XMLReader reader = saxParser.getXMLReader();""], [183, ""                    reader.setContentHandler(parser);""]]}"	284
CVE-2018-1000129	GHSA-hfpg-gqjw-779m	org.jolokia:jolokia-core	1.3.7	1.4.0	1.5.0	https://github.com/rhuss/jolokia	5895d5c137c335e6b473e9dcb9baf748851bbc5f	proc/changes/CVE-2018-1000129/5895d5c137c335e6b473e9dcb9baf748851bbc5f/before/jar/jolokia-core-1.4.0.jar	proc/changes/CVE-2018-1000129/5895d5c137c335e6b473e9dcb9baf748851bbc5f/after/jar/jolokia-core-1.5.0.jar	proc/changes/CVE-2018-1000129/5895d5c137c335e6b473e9dcb9baf748851bbc5f/before/java/agent/core/src/main/java/org/jolokia/http/AgentServlet.java	proc/changes/CVE-2018-1000129/5895d5c137c335e6b473e9dcb9baf748851bbc5f/after/java/agent/core/src/main/java/org/jolokia/http/AgentServlet.java	proc/changes/CVE-2018-1000129/5895d5c137c335e6b473e9dcb9baf748851bbc5f/before/class/agent/core/src/main/java/org/jolokia/http/AgentServlet.class	proc/changes/CVE-2018-1000129/5895d5c137c335e6b473e9dcb9baf748851bbc5f/after/class/agent/core/src/main/java/org/jolokia/http/AgentServlet.class	AgentServlet	[AgentServlet::handle, AgentServlet::getMimeType, AgentServlet::validateCallbackIfGiven, AgentServlet::sendResponse]	org.jolokia.http	org.jolokia.http	"{""added"": [[267, """"], [274, ""            // If a callback is given, check this is a valid javascript function name""], [275, ""            validateCallbackIfGiven(pReq);""], [276, """"], [283, ""            try {""], [284, ""                json = requestHandler.handleThrowable(""], [286, ""            } catch (Throwable exp2) {""], [287, ""                exp2.printStackTrace();""], [288, ""            }""], [300, """"], [474, ""        setContentType(pResp,""], [475, ""                       MimeTypeUtil.getResponseMimeType(""], [476, ""                           pReq.getParameter(ConfigKey.MIME_TYPE.getKeyValue()),""], [477, ""                           configMimeType, callback""], [478, ""                                                       ));""], [494, ""    private void validateCallbackIfGiven(HttpServletRequest pReq) {""], [495, ""        String callback = pReq.getParameter(ConfigKey.CALLBACK.getKeyValue());""], [496, ""        if (callback != null && !MimeTypeUtil.isValidCallback(callback)) {""], [497, ""            throw new IllegalArgumentException(\""Invalid callback name given, which must be a valid javascript function name\"");""], [498, ""        }""], [499, ""    }""]], ""deleted"": [[279, ""            json = requestHandler.handleThrowable(""], [383, ""    // Extract mime type for response (if not JSONP)""], [384, ""    private String getMimeType(HttpServletRequest pReq) {""], [385, ""        String requestMimeType = pReq.getParameter(ConfigKey.MIME_TYPE.getKeyValue());""], [386, ""        if (requestMimeType != null) {""], [387, ""            return requestMimeType;""], [388, ""        }""], [389, ""        return configMimeType;""], [390, ""    }""], [391, """"], [473, ""        setContentType(pResp, callback != null ? \""text/javascript\"" : getMimeType(pReq));""]]}"	374
CVE-2019-10463	GHSA-cqjv-whwg-wh47	org.jenkins-ci.plugins:dynatrace-dashboard	0	2.1.4	2.1.5	https://github.com/jenkinsci/dynatrace-plugin	b6e55709476d9f6dfaf75a4cd744fe1798868168	proc/changes/CVE-2019-10463/b6e55709476d9f6dfaf75a4cd744fe1798868168/before/jar/dynatrace-dashboard-2.1.4.jar	proc/changes/CVE-2019-10463/b6e55709476d9f6dfaf75a4cd744fe1798868168/after/jar/dynatrace-dashboard-2.1.5.jar	proc/changes/CVE-2019-10463/b6e55709476d9f6dfaf75a4cd744fe1798868168/before/java/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.java	proc/changes/CVE-2019-10463/b6e55709476d9f6dfaf75a4cd744fe1798868168/after/java/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.java	proc/changes/CVE-2019-10463/b6e55709476d9f6dfaf75a4cd744fe1798868168/before/class/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.class	proc/changes/CVE-2019-10463/b6e55709476d9f6dfaf75a4cd744fe1798868168/after/class/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.class	TAGlobalConfiguration	[TAGlobalConfiguration::doTestDynatraceConnection]	com.dynatrace.jenkins.dashboard	com.dynatrace.jenkins.dashboard	"{""added"": [[42, ""import jenkins.model.Jenkins;""], [190, ""\t\tfinal Jenkins instance = Jenkins.getInstance();""], [191, ""\t\tif (instance == null) {""], [192, ""\t\t\tthrow new IllegalStateException(\""Jenkins instance not available. Could not handle test connection request.\"");""], [193, ""\t\t}""], [194, ""\t\tinstance.checkPermission(Jenkins.ADMINISTER);""]], ""deleted"": [[189, """"]]}"	167
CVE-2017-12197	GHSA-x9rg-q5fx-fx66	org.kohsuke:libpam4j	0	1.9	1.10	https://github.com/letonez/libpam4j	84f32f4001fc6bdcc125ccc959081de022d18b6d	proc/changes/CVE-2017-12197/84f32f4001fc6bdcc125ccc959081de022d18b6d/before/jar/libpam4j-1.9.jar	proc/changes/CVE-2017-12197/84f32f4001fc6bdcc125ccc959081de022d18b6d/after/jar/libpam4j-1.10.jar	proc/changes/CVE-2017-12197/84f32f4001fc6bdcc125ccc959081de022d18b6d/before/java/src/main/java/org/jvnet/libpam/PAM.java	proc/changes/CVE-2017-12197/84f32f4001fc6bdcc125ccc959081de022d18b6d/after/java/src/main/java/org/jvnet/libpam/PAM.java	proc/changes/CVE-2017-12197/84f32f4001fc6bdcc125ccc959081de022d18b6d/before/class/src/main/java/org/jvnet/libpam/PAM.class	proc/changes/CVE-2017-12197/84f32f4001fc6bdcc125ccc959081de022d18b6d/after/class/src/main/java/org/jvnet/libpam/PAM.class	PAM	[PAM::authenticate]	org.jvnet.libpam	org.jvnet.libpam	"{""added"": [[127, ""            check(libpam.pam_acct_mgmt(pht,0),\""pam_acct_mgmt failed\"");""]], ""deleted"": [[127, ""            // several different error code seem to be used to represent authentication failures""], [128, ""//            check(libpam.pam_acct_mgmt(pht,0),\""pam_acct_mgmt failed\"");""]]}"	83
CVE-2015-5531	GHSA-jjq8-vfjq-j6v4	org.elasticsearch:elasticsearch	0	1.6.0	1.6.1	https://github.com/elastic/elasticsearch	df1427a2935237fb61fc641984f9c76478627fec	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/before/jar/elasticsearch-1.6.0.jar	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/after/jar/elasticsearch-1.6.1.jar	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/before/java/src/main/java/org/elasticsearch/env/Environment.java	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/after/java/src/main/java/org/elasticsearch/env/Environment.java	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/before/class/src/main/java/org/elasticsearch/env/Environment.class	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/after/class/src/main/java/org/elasticsearch/env/Environment.class	Environment	[Environment::resolveRepoURL, Environment::resolve]	org.elasticsearch.env	org.elasticsearch.env	"{""added"": [[32, ""import java.net.URI;""], [33, ""import java.net.URISyntaxException;""], [36, ""import java.nio.file.Paths;""], [191, ""    /**""], [192, ""     * Checks if the specified URL is pointing to the local file system and if it does, resolves the specified url""], [193, ""     * against the list of configured repository roots""], [194, ""     *""], [195, ""     * If the specified url doesn't match any of the roots, returns null.""], [196, ""     */""], [197, ""    public URL resolveRepoURL(URL url) {""], [198, ""        try {""], [199, ""            if (\""file\"".equalsIgnoreCase(url.getProtocol())) {""], [200, ""                if (url.getHost() == null || \""\"".equals(url.getHost())) {""], [201, ""                    // only local file urls are supported""], [202, ""                    File file = resolve(repoFiles, url.toURI());""], [203, ""                    if (file == null) {""], [204, ""                        // Couldn't resolve against known repo locations""], [205, ""                        return null;""], [206, ""                    }""], [207, ""                    // Normalize URL""], [208, ""                    return file.toURI().toURL();""], [209, ""                }""], [210, ""                return null;""], [211, ""            } else if (\""jar\"".equals(url.getProtocol())) {""], [212, ""                String file = url.toURI().getSchemeSpecificPart();""], [213, ""                int pos = file.indexOf(\""!/\"");""], [214, ""                if (pos < 0) {""], [215, ""                    return null;""], [216, ""                }""], [217, ""                String jarTail = file.substring(pos);""], [218, ""                String filePath = file.substring(0, pos);""], [219, ""                URL internalUrl = new URL(filePath);""], [220, ""                URL normalizedUrl = resolveRepoURL(internalUrl);""], [221, ""                if (normalizedUrl == null) {""], [222, ""                    return null;""], [223, ""                }""], [224, ""                return new URL(\""jar\"", \""\"", normalizedUrl.toExternalForm() + jarTail);""], [225, ""            } else {""], [226, ""                // It's not file or jar url and it didn't match the white list - reject""], [227, ""                return null;""], [228, ""            }""], [229, ""        } catch (MalformedURLException ex) {""], [230, ""            // cannot make sense of this file url""], [231, ""            return null;""], [232, ""        } catch (URISyntaxException ex) {""], [233, ""            return null;""], [234, ""        }""], [235, ""    }""], [236, """"], [310, ""    /**""], [311, ""     * Tries to resolve the given path against the list of available roots.""], [312, ""     *""], [313, ""     * If path starts with one of the listed roots, it returned back by this method, otherwise null is returned.""], [314, ""     */""], [315, ""    public static File resolve(File[] roots, URI uri) {""], [316, ""        return resolve(roots, Paths.get(uri).normalize().toString());""], [317, ""    }""]], ""deleted"": []}"	197
CVE-2015-5531	GHSA-jjq8-vfjq-j6v4	org.elasticsearch:elasticsearch	0	1.6.0	1.6.1	https://github.com/elastic/elasticsearch	df1427a2935237fb61fc641984f9c76478627fec	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/before/jar/elasticsearch-1.6.0.jar	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/after/jar/elasticsearch-1.6.1.jar	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/before/java/src/main/java/org/elasticsearch/repositories/uri/URLRepository.java	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/after/java/src/main/java/org/elasticsearch/repositories/uri/URLRepository.java	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/before/class/src/main/java/org/elasticsearch/repositories/uri/URLRepository.class	proc/changes/CVE-2015-5531/df1427a2935237fb61fc641984f9c76478627fec/after/class/src/main/java/org/elasticsearch/repositories/uri/URLRepository.class	URLRepository	[URLRepository::URLRepository, URLRepository::URLRepository, URLRepository::checkURL]	org.elasticsearch.repositories.uri	org.elasticsearch.repositories.uri	"{""added"": [[24, ""import org.elasticsearch.common.Strings;""], [29, ""import org.elasticsearch.common.util.URIPattern;""], [30, ""import org.elasticsearch.env.Environment;""], [38, ""import java.net.URISyntaxException;""], [54, ""    public final static String[] DEFAULT_SUPPORTED_PROTOCOLS = {\""http\"", \""https\"", \""ftp\"", \""file\"", \""jar\""};""], [55, """"], [56, ""    public final static String SUPPORTED_PROTOCOLS_SETTING = \""repositories.url.supported_protocols\"";""], [57, """"], [58, ""    public final static String ALLOWED_URLS_SETTING = \""repositories.url.allowed_urls\"";""], [59, """"], [60, ""    private final String[] supportedProtocols;""], [61, """"], [62, ""    private final URIPattern[] urlWhiteList;""], [63, """"], [64, ""    private final Environment environment;""], [65, """"], [81, ""    public URLRepository(RepositoryName name, RepositorySettings repositorySettings, IndexShardRepository indexShardRepository, Environment environment) throws IOException {""], [90, ""        supportedProtocols = settings.getAsArray(SUPPORTED_PROTOCOLS_SETTING, DEFAULT_SUPPORTED_PROTOCOLS);""], [91, ""        String[] urlWhiteList = settings.getAsArray(ALLOWED_URLS_SETTING, Strings.EMPTY_ARRAY);""], [92, ""        this.urlWhiteList = new URIPattern[urlWhiteList.length];""], [93, ""        for (int i = 0; i < urlWhiteList.length; i++) {""], [94, ""            this.urlWhiteList[i] = new URIPattern(urlWhiteList[i]);""], [95, ""        }""], [96, ""        this.environment = environment;""], [98, ""        URL normalizedURL = checkURL(url);""], [99, ""        blobStore = new URLBlobStore(componentSettings, normalizedURL);""], [140, ""    /**""], [141, ""     * Makes sure that the url is white listed or if it points to the local file system it matches one on of the root path in path.repo""], [142, ""     */""], [143, ""    private URL checkURL(URL url) {""], [144, ""        String protocol = url.getProtocol();""], [145, ""        if (protocol == null) {""], [146, ""            throw new RepositoryException(repositoryName, \""unknown url protocol from URL [\"" + url + \""]\"");""], [147, ""        }""], [148, ""        for (String supportedProtocol : supportedProtocols) {""], [149, ""            if (supportedProtocol.equals(protocol)) {""], [150, ""                try {""], [151, ""                    if (URIPattern.match(urlWhiteList, url.toURI())) {""], [152, ""                        // URL matches white list - no additional processing is needed""], [153, ""                        return url;""], [154, ""                    }""], [155, ""                } catch (URISyntaxException ex) {""], [156, ""                    logger.warn(\""cannot parse the specified url [{}]\"", url);""], [157, ""                    throw new RepositoryException(repositoryName, \""cannot parse the specified url [\"" + url + \""]\"");""], [158, ""                }""], [159, ""                // We didn't match white list - try to resolve against repo.path""], [160, ""                URL normalizedUrl = environment.resolveRepoURL(url);""], [161, ""                if (normalizedUrl == null) {""], [162, ""                    logger.warn(\""The specified url [{}] doesn't start with any repository paths specified by the path.repo setting: [{}] or by repositories.url.allowed_urls setting: [{}] \"", url, environment.repoFiles());""], [163, ""                    throw new RepositoryException(repositoryName, \""file url [\"" + url + \""] doesn't match any of the locations specified by path.repo or repositories.url.allowed_urls\"");""], [164, ""                }""], [165, ""                return normalizedUrl;""], [166, ""            }""], [167, ""        }""], [168, ""        throw new RepositoryException(repositoryName, \""unsupported url protocol [\"" + protocol + \""] from URL [\"" + url + \""]\"");""], [169, ""    }""], [170, """"]], ""deleted"": [[33, ""import org.elasticsearch.threadpool.ThreadPool;""], [66, ""    public URLRepository(RepositoryName name, RepositorySettings repositorySettings, IndexShardRepository indexShardRepository) throws IOException {""], [76, ""        blobStore = new URLBlobStore(componentSettings, url);""]]}"	105
CVE-2013-6430	GHSA-xjrf-8x4f-43h4	org.springframework:spring-web	0	3.2.1.RELEASE	3.2.2.RELEASE	https://github.com/spring-projects/spring-framework	7a7df6637478607bef0277bf52a4e0a03e20a248	proc/changes/CVE-2013-6430/7a7df6637478607bef0277bf52a4e0a03e20a248/before/jar/spring-web-3.2.1.RELEASE.jar	proc/changes/CVE-2013-6430/7a7df6637478607bef0277bf52a4e0a03e20a248/after/jar/spring-web-3.2.2.RELEASE.jar	proc/changes/CVE-2013-6430/7a7df6637478607bef0277bf52a4e0a03e20a248/before/java/org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java	proc/changes/CVE-2013-6430/7a7df6637478607bef0277bf52a4e0a03e20a248/after/java/org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java	proc/changes/CVE-2013-6430/7a7df6637478607bef0277bf52a4e0a03e20a248/before/class/org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.class	proc/changes/CVE-2013-6430/7a7df6637478607bef0277bf52a4e0a03e20a248/after/class/org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.class	JavaScriptUtils	[JavaScriptUtils::javaScriptEscape]	org.springframework.web.util	org.springframework.web.util	"{""added"": [[2, "" * Copyright 2002-2013 the original author or authors.""], [24, "" * <a href=\""https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Values,_variables,_and_literals#String_literals\"">""], [25, "" * JavaScript Guide</a> on Mozilla Developer Network.""], [29, "" * @author Rossen Stoyanchev""], [35, ""\t * Turn JavaScript special characters into escaped characters.""], [36, ""\t *""], [38, ""\t * @return the string with escaped characters""], [76, ""\t\t\telse if (c == '\\b') {""], [77, ""\t\t\t\tfiltered.append(\""\\\\b\"");""], [78, ""\t\t\t}""], [79, ""\t\t\t// No '\\v' in Java, use octal value for VT ascii char""], [80, ""\t\t\telse if (c == '\\013') {""], [81, ""\t\t\t\tfiltered.append(\""\\\\v\"");""], [82, ""\t\t\t}""], [83, ""\t\t\telse if (c == '<') {""], [84, ""\t\t\t\tfiltered.append(\""\\\\u003C\"");""], [85, ""\t\t\t}""], [86, ""\t\t\telse if (c == '>') {""], [87, ""\t\t\t\tfiltered.append(\""\\\\u003E\"");""], [88, ""\t\t\t}""], [89, ""\t\t\t// Unicode for PS (line terminator in ECMA-262)""], [90, ""\t\t\telse if (c == '\\u2028') {""], [91, ""\t\t\t\tfiltered.append(\""\\\\u2028\"");""], [92, ""\t\t\t}""], [93, ""\t\t\t// Unicode for LS (line terminator in ECMA-262)""], [94, ""\t\t\telse if (c == '\\u2029') {""], [95, ""\t\t\t\tfiltered.append(\""\\\\u2029\"");""], [96, ""\t\t\t}""]], ""deleted"": [[2, "" * Copyright 2002-2008 the original author or authors.""], [24, "" * <a href=\""http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Guide:Literals#String_Literals\"">""], [25, "" * Core JavaScript 1.5 Guide""], [26, "" * </a>""], [35, ""\t * Turn special characters into escaped characters conforming to JavaScript.""], [36, ""\t * Handles complete character set defined in HTML 4.01 recommendation.""], [38, ""\t * @return the escaped string""]]}"	63
CVE-2015-5258	GHSA-w5r6-gx3q-hmxj	org.springframework.social:spring-social-core	0	1.1.2.RELEASE	1.1.3.RELEASE	https://github.com/spring-projects/spring-social	5151e1158e1ed51369e7aba9e8092930d28c31d3	proc/changes/CVE-2015-5258/5151e1158e1ed51369e7aba9e8092930d28c31d3/before/jar/spring-social-core-1.1.2.RELEASE.jar	proc/changes/CVE-2015-5258/5151e1158e1ed51369e7aba9e8092930d28c31d3/after/jar/spring-social-core-1.1.3.RELEASE.jar	proc/changes/CVE-2015-5258/5151e1158e1ed51369e7aba9e8092930d28c31d3/before/java/spring-social-core/src/main/java/org/springframework/social/support/ClientHttpRequestFactorySelector.java	proc/changes/CVE-2015-5258/5151e1158e1ed51369e7aba9e8092930d28c31d3/after/java/spring-social-core/src/main/java/org/springframework/social/support/ClientHttpRequestFactorySelector.java	proc/changes/CVE-2015-5258/5151e1158e1ed51369e7aba9e8092930d28c31d3/before/class/spring-social-core/src/main/java/org/springframework/social/support/ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator.class	proc/changes/CVE-2015-5258/5151e1158e1ed51369e7aba9e8092930d28c31d3/after/class/spring-social-core/src/main/java/org/springframework/social/support/ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator.class	ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator	[ClientHttpRequestFactorySelector::HttpComponentsClientRequestFactoryCreator::getSSLContext, ClientHttpRequestFactorySelector::HttpComponentsClientRequestFactoryCreator::getAllTrustClient]	org.springframework.social.support	org.springframework.social.support	"{""added"": [[21, ""import java.security.GeneralSecurityException;""], [26, ""import javax.net.ssl.HostnameVerifier;""], [31, ""import org.apache.http.config.Registry;""], [32, ""import org.apache.http.config.RegistryBuilder;""], [33, ""import org.apache.http.conn.socket.ConnectionSocketFactory;""], [34, ""import org.apache.http.conn.socket.PlainConnectionSocketFactory;""], [35, ""import org.apache.http.conn.ssl.NoopHostnameVerifier;""], [39, ""import org.apache.http.impl.client.HttpClientBuilder;""], [41, ""import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;""], [43, ""import org.apache.http.ssl.SSLContextBuilder;""], [123, ""\t\t\t\tHttpClientBuilder clientBuilder = HttpClientBuilder.create();""], [124, ""\t\t\t\tSSLContext sslContext = new SSLContextBuilder().loadTrustMaterial(null, new TrustStrategy() {""], [128, ""\t\t\t\t}).build();""], [129, ""\t\t\t\tclientBuilder.setSSLContext(sslContext);""], [130, """"], [131, ""\t\t\t\tHostnameVerifier hostnameVerifier = new NoopHostnameVerifier();""], [132, """"], [133, ""\t\t\t\tSSLConnectionSocketFactory sslSocketFactory = new SSLConnectionSocketFactory(sslContext, hostnameVerifier);""], [134, ""\t\t\t\tRegistry<ConnectionSocketFactory> socketFactoryRegistry = RegistryBuilder.<ConnectionSocketFactory>create()""], [135, ""\t\t\t\t\t\t.register(\""http\"", PlainConnectionSocketFactory.getSocketFactory())""], [136, ""\t\t\t\t\t\t.register(\""https\"", sslSocketFactory)""], [137, ""\t\t\t\t\t\t.build();""], [138, """"], [139, ""\t\t\t\tPoolingHttpClientConnectionManager connMgr = new PoolingHttpClientConnectionManager( socketFactoryRegistry);""], [140, ""\t\t\t\tclientBuilder.setConnectionManager(connMgr);""], [141, """"], [142, ""\t\t\t\treturn clientBuilder.build();""], [143, ""\t\t\t} catch (GeneralSecurityException e) {""], [144, ""\t\t\t\t// shouldn't happen""], [145, ""\t\t\t\tthrow new RuntimeException(e);""]], ""deleted"": [[21, ""import java.security.KeyManagementException;""], [22, ""import java.security.KeyStore;""], [23, ""import java.security.KeyStoreException;""], [24, ""import java.security.NoSuchAlgorithmException;""], [34, ""import org.apache.http.conn.ssl.SSLContexts;""], [117, ""\t\t\treturn HttpClients.custom()""], [118, ""\t\t\t\t\t.setProxy(proxy)""], [119, ""\t\t\t\t\t.setSslcontext(getSSLContext())""], [120, ""\t\t\t\t\t.setHostnameVerifier(SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER)""], [121, ""\t\t\t\t\t.build();""], [122, ""\t\t}""], [123, """"], [124, ""\t\tprivate static SSLContext getSSLContext() {""], [126, ""\t\t\t\tKeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());""], [127, ""\t\t\t\tTrustStrategy allTrust = new TrustStrategy() {""], [128, ""\t\t\t\t\t@Override""], [132, ""\t\t\t\t};""], [133, ""\t\t\t\treturn SSLContexts.custom().useSSL().loadTrustMaterial(trustStore, allTrust).build();""], [134, ""\t\t\t} catch (KeyStoreException e) {""], [135, ""\t\t\t\te.printStackTrace();""], [136, ""\t\t\t} catch (KeyManagementException e) {""], [137, ""\t\t\t\te.printStackTrace();""], [138, ""\t\t\t} catch (NoSuchAlgorithmException e) {""], [139, ""\t\t\t\te.printStackTrace();""], [141, ""\t\t\treturn null;""]]}"	103
CVE-2013-2035	GHSA-49j7-qghp-5wj8	org.fusesource.hawtjni:hawtjni-runtime	0	1.7	1.8	https://github.com/fusesource/hawtjni	92c266170ce98edc200c656bd034a237098b8aa5	proc/changes/CVE-2013-2035/92c266170ce98edc200c656bd034a237098b8aa5/before/jar/hawtjni-runtime-1.7.jar	proc/changes/CVE-2013-2035/92c266170ce98edc200c656bd034a237098b8aa5/after/jar/hawtjni-runtime-1.8.jar	proc/changes/CVE-2013-2035/92c266170ce98edc200c656bd034a237098b8aa5/before/java/hawtjni-runtime/src/main/java/org/fusesource/hawtjni/runtime/Library.java	proc/changes/CVE-2013-2035/92c266170ce98edc200c656bd034a237098b8aa5/after/java/hawtjni-runtime/src/main/java/org/fusesource/hawtjni/runtime/Library.java	proc/changes/CVE-2013-2035/92c266170ce98edc200c656bd034a237098b8aa5/before/class/hawtjni-runtime/src/main/java/org/fusesource/hawtjni/runtime/Library.class	proc/changes/CVE-2013-2035/92c266170ce98edc200c656bd034a237098b8aa5/after/class/hawtjni-runtime/src/main/java/org/fusesource/hawtjni/runtime/Library.class	Library	[Library::isStale, Library::extract, Library::extract, Library::close, Library::exractAndLoad]	org.fusesource.hawtjni.runtime	org.fusesource.hawtjni.runtime	"{""added"": [[12, ""import java.io.*;""], [16, ""import java.util.Random;""], [207, """"], [212, ""            String []libNameParts = map(libName).split(\""\\\\.\"");""], [213, ""            String prefix = libNameParts[0]+\""-\"";""], [214, ""            String suffix = \"".\""+libNameParts[1];""], [215, """"], [218, ""                File target = extract(errors, resource, prefix, suffix, file(customPath));""], [219, ""                if( target!=null ) {""], [228, ""            File target = extract(errors, resource, prefix, suffix, file(customPath));""], [229, ""            if( target!=null ) {""], [263, ""    private File extract(ArrayList<String> errors, URL source, String prefix, String suffix, File directory) {""], [264, ""        File target = null;""], [266, ""            FileOutputStream os = null;""], [267, ""            InputStream is = null;""], [268, ""            try {""], [269, ""                target = File.createTempFile(prefix, suffix, directory);""], [280, ""                target.deleteOnExit();""], [281, ""                return target;""], [282, ""            } finally {""], [283, ""                close(os);""], [284, ""                close(is);""], [287, ""            if( target!=null ) {""], [289, ""            }""], [292, ""        return null;""], [295, ""    static private void close(Closeable file) {""], [296, ""        if(file!=null) {""], [298, ""                file.close();""], [299, ""            } catch (Exception ignore) {""]], ""deleted"": [[12, ""import java.io.File;""], [13, ""import java.io.FileOutputStream;""], [14, ""import java.io.IOException;""], [15, ""import java.io.InputStream;""], [209, """"], [214, """"], [217, ""                File target = file(customPath, map(libName));""], [218, ""                if( extract(errors, resource, target) ) {""], [227, ""            File target = file(customPath, map(libName));""], [228, ""            if( extract(errors, resource, target) ) {""], [262, ""    private boolean extract(ArrayList<String> errors, URL source, File target) {""], [263, ""        FileOutputStream os = null;""], [264, ""        InputStream is = null;""], [265, ""        boolean extracting = false;""], [267, ""            if (!target.exists() || isStale(source, target) ) {""], [272, ""                    extracting = true;""], [277, ""                    os.close();""], [278, ""                    is.close();""], [283, ""            try {""], [284, ""                if (os != null)""], [285, ""                    os.close();""], [286, ""            } catch (IOException e1) {""], [287, ""            }""], [288, ""            try {""], [289, ""                if (is != null)""], [290, ""                    is.close();""], [291, ""            } catch (IOException e1) {""], [292, ""            }""], [293, ""            if (extracting && target.exists())""], [296, ""            return false;""], [298, ""        return true;""], [301, ""    private boolean isStale(URL source, File target) {""], [302, """"], [303, ""        if( source.getProtocol().equals(\""jar\"") ) {""], [304, ""            // unwrap the jar protocol...""], [306, ""                String parts[] = source.getFile().split(Pattern.quote(\""!\""));""], [307, ""                source = new URL(parts[0]);""], [308, ""            } catch (MalformedURLException e) {""], [309, ""                return false;""], [310, ""            }""], [311, ""        }""], [312, """"], [313, ""        File sourceFile=null;""], [314, ""        if( source.getProtocol().equals(\""file\"") ) {""], [315, ""            sourceFile = new File(source.getFile());""], [316, ""        }""], [317, ""        if( sourceFile!=null && sourceFile.exists() ) {""], [318, ""            if( sourceFile.lastModified() > target.lastModified() ) {""], [319, ""                return true;""], [322, ""        return false;""]]}"	227
CVE-2014-1972	GHSA-c438-8cvq-pxxx	org.apache.tapestry:tapestry-core	0	5.3.5	5.3.6	https://git-wip-us.apache.org/repos/asf/tapestry-5.git	95846b173d83c2eb42db75dae3e7d5e13a633946	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/jar/tapestry-core-5.3.5.jar	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/jar/tapestry-core-5.3.6.jar	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/java/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.java	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/java/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.java	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/class/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.class	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/class/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataEncoderImpl.class	ClientDataEncoderImpl	[ClientDataEncoderImpl::validateHMAC, ClientDataEncoderImpl::decodeClientData, ClientDataEncoderImpl::ClientDataEncoderImpl, ClientDataEncoderImpl::ClientDataEncoderImpl, ClientDataEncoderImpl::createSink]	org.apache.tapestry5.internal.services	org.apache.tapestry5.internal.services	"{""added"": [[1, ""// Copyright 2009, 2012 The Apache Software Foundation""], [17, ""import org.apache.tapestry5.SymbolConstants;""], [18, ""import org.apache.tapestry5.internal.TapestryInternalUtils;""], [20, ""import org.apache.tapestry5.internal.util.MacOutputStream;""], [21, ""import org.apache.tapestry5.ioc.annotations.Symbol;""], [25, ""import org.slf4j.Logger;""], [27, ""import javax.crypto.spec.SecretKeySpec;""], [31, ""import java.io.UnsupportedEncodingException;""], [32, ""import java.security.Key;""], [39, ""    private final Key hmacKey;""], [40, """"], [41, ""    public ClientDataEncoderImpl(URLEncoder urlEncoder, @Symbol(SymbolConstants.HMAC_PASSPHRASE) String passphrase, Logger logger) throws UnsupportedEncodingException""], [44, """"], [45, ""        if (passphrase.equals(\""\""))""], [46, ""        {""], [47, ""            logger.error(String.format(\""The symbol '%s' has not been configured. \"" +""], [48, ""                    \""This is used to configure hash-based message authentication of Tapestry data stored in forms, or in the URL. \"" +""], [49, ""                    \""You application is less secure, and more vulnerable to denial-of-service attacks, when this symbol is left unconfigured.\"",""], [50, ""                    SymbolConstants.HMAC_PASSPHRASE));""], [51, """"], [52, ""            // Errors at lower levels if the passphrase is empty, so override the parameter to set a default value.""], [53, ""            passphrase = \""DEFAULT\"";""], [54, ""        }""], [55, """"], [56, ""        hmacKey = new SecretKeySpec(passphrase.getBytes(\""UTF8\""), \""HmacSHA1\"");""], [63, ""            return new ClientDataSinkImpl(urlEncoder, hmacKey);""], [64, ""        } catch (IOException ex)""], [73, ""        // what ClientDataSinkImpl does).""], [74, """"], [75, ""        int colonx = clientData.indexOf(':');""], [76, """"], [77, ""        if (colonx < 0)""], [78, ""        {""], [79, ""            throw new IllegalArgumentException(\""Client data must be prefixed with its HMAC code.\"");""], [80, ""        }""], [81, """"], [82, ""        // Extract the string presumably encoded by the server using the secret key.""], [83, """"], [84, ""        String storedHmacResult = clientData.substring(0, colonx);""], [85, """"], [86, ""        String clientStream = clientData.substring(colonx + 1);""], [90, ""            Base64InputStream b64in = new Base64InputStream(clientStream);""], [91, """"], [92, ""            validateHMAC(storedHmacResult, b64in);""], [93, """"], [94, ""            // After reading it once to validate, reset it for the actual read (which includes the GZip decompression).""], [95, """"], [96, ""            b64in.reset();""], [97, """"], [98, ""            BufferedInputStream buffered = new BufferedInputStream(new GZIPInputStream(b64in));""], [101, ""        } catch (IOException ex)""], [107, ""    private void validateHMAC(String storedHmacResult, Base64InputStream b64in) throws IOException""], [108, ""    {""], [109, ""        MacOutputStream macOs = MacOutputStream.streamFor(hmacKey);""], [110, """"], [111, ""        TapestryInternalUtils.copy(b64in, macOs);""], [112, """"], [113, ""        macOs.close();""], [114, """"], [115, ""        String actual = macOs.getResult();""], [116, """"], [117, ""        if (!storedHmacResult.equals(actual))""], [118, ""        {""], [119, ""            throw new IOException(\""Client data associated with the current request appears to have been tampered with \"" +""], [120, ""                    \""(the HMAC signature does not match).\"");""], [121, ""        }""], [122, ""    }""], [123, """"]], ""deleted"": [[1, ""// Copyright 2009 The Apache Software Foundation""], [31, ""    public ClientDataEncoderImpl(URLEncoder urlEncoder)""], [40, ""            return new ClientDataSinkImpl(urlEncoder);""], [41, ""        }""], [42, ""        catch (IOException ex)""], [51, ""        // what ClientDataSinkImpl does.""], [55, ""            BufferedInputStream buffered = new BufferedInputStream(""], [56, ""                    new GZIPInputStream(new Base64InputStream(clientData)));""], [59, ""        }""], [60, ""        catch (IOException ex)""]]}"	82
CVE-2014-1972	GHSA-c438-8cvq-pxxx	org.apache.tapestry:tapestry-core	0	5.3.5	5.3.6	https://git-wip-us.apache.org/repos/asf/tapestry-5.git	95846b173d83c2eb42db75dae3e7d5e13a633946	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/jar/tapestry-core-5.3.5.jar	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/jar/tapestry-core-5.3.6.jar	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/java/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataSinkImpl.java	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/java/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataSinkImpl.java	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/class/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataSinkImpl.class	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/class/tapestry-core/src/main/java/org/apache/tapestry5/internal/services/ClientDataSinkImpl.class	ClientDataSinkImpl	[ClientDataSinkImpl::ClientDataSinkImpl, ClientDataSinkImpl::getClientData, ClientDataSinkImpl::ClientDataSinkImpl]	org.apache.tapestry5.internal.services	org.apache.tapestry5.internal.services	"{""added"": [[1, ""// Copyright 2009, 2012 The Apache Software Foundation""], [18, ""import org.apache.tapestry5.internal.util.MacOutputStream;""], [19, ""import org.apache.tapestry5.internal.util.TeeOutputStream;""], [27, ""import java.security.Key;""], [40, ""    private final MacOutputStream macOutputStream;""], [41, """"], [42, ""    public ClientDataSinkImpl(URLEncoder urlEncoder, Key hmacKey) throws IOException""], [45, """"], [47, ""        macOutputStream =  MacOutputStream.streamFor(hmacKey);""], [49, ""        final BufferedOutputStream pipeline = new BufferedOutputStream(new GZIPOutputStream(""], [50, ""                new TeeOutputStream(macOutputStream, base64OutputStream)));""], [103, ""            } catch (IOException ex)""], [109, ""        return macOutputStream.getResult() + \"":\"" + base64OutputStream.toBase64();""]], ""deleted"": [[1, ""// Copyright 2009 The Apache Software Foundation""], [37, ""    public ClientDataSinkImpl(URLEncoder urlEncoder) throws IOException""], [42, ""        final BufferedOutputStream pipeline = new BufferedOutputStream(new GZIPOutputStream(base64OutputStream));""], [95, ""            }""], [96, ""            catch (IOException ex)""], [102, ""        return base64OutputStream.toBase64();""]]}"	79
CVE-2014-1972	GHSA-c438-8cvq-pxxx	org.apache.tapestry:tapestry-core	0	5.3.5	5.3.6	https://git-wip-us.apache.org/repos/asf/tapestry-5.git	95846b173d83c2eb42db75dae3e7d5e13a633946	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/jar/tapestry-core-5.3.5.jar	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/jar/tapestry-core-5.3.6.jar	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/java/tapestry-core/src/main/java/org/apache/tapestry5/services/TapestryModule.java	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/java/tapestry-core/src/main/java/org/apache/tapestry5/services/TapestryModule.java	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/before/class/tapestry-core/src/main/java/org/apache/tapestry5/services/TapestryModule.class	proc/changes/CVE-2014-1972/95846b173d83c2eb42db75dae3e7d5e13a633946/after/class/tapestry-core/src/main/java/org/apache/tapestry5/services/TapestryModule.class	TapestryModule	[TapestryModule::contributeFactoryDefaults]	org.apache.tapestry5.services	org.apache.tapestry5.services	"{""added"": [[2227, """"], [2228, ""        // Leaving this as the default results in a runtime error logged to the console (and a default password is used);""], [2229, ""        // you are expected to override this symbol.""], [2230, ""        configuration.add(SymbolConstants.HMAC_PASSPHRASE, \""\"");""]], ""deleted"": []}"	1518
CVE-2016-4437	GHSA-p836-389h-j692	org.apache.shiro:shiro-core	0	1.2.4	1.2.5	https://github.com/apache/shiro	64d9f8341e1aa7ef1a29744e16ea7c578ca5deee	proc/changes/CVE-2016-4437/64d9f8341e1aa7ef1a29744e16ea7c578ca5deee/before/jar/shiro-core-1.2.4.jar	proc/changes/CVE-2016-4437/64d9f8341e1aa7ef1a29744e16ea7c578ca5deee/after/jar/shiro-core-1.2.5.jar	proc/changes/CVE-2016-4437/64d9f8341e1aa7ef1a29744e16ea7c578ca5deee/before/java/core/src/main/java/org/apache/shiro/mgt/AbstractRememberMeManager.java	proc/changes/CVE-2016-4437/64d9f8341e1aa7ef1a29744e16ea7c578ca5deee/after/java/core/src/main/java/org/apache/shiro/mgt/AbstractRememberMeManager.java	proc/changes/CVE-2016-4437/64d9f8341e1aa7ef1a29744e16ea7c578ca5deee/before/class/core/src/main/java/org/apache/shiro/mgt/AbstractRememberMeManager.class	proc/changes/CVE-2016-4437/64d9f8341e1aa7ef1a29744e16ea7c578ca5deee/after/class/core/src/main/java/org/apache/shiro/mgt/AbstractRememberMeManager.class	AbstractRememberMeManager	[AbstractRememberMeManager::AbstractRememberMeManager]	org.apache.shiro.mgt	org.apache.shiro.mgt	"{""added"": [[97, ""        AesCipherService cipherService = new AesCipherService();""], [98, ""        this.cipherService = cipherService;""], [99, ""        setCipherKey(cipherService.generateNewKey().getEncoded());""]], ""deleted"": [[71, ""    /**""], [72, ""     * The following Base64 string was generated by auto-generating an AES Key:""], [73, ""     * <pre>""], [74, ""     * AesCipherService aes = new AesCipherService();""], [75, ""     * byte[] key = aes.generateNewKey().getEncoded();""], [76, ""     * String base64 = Base64.encodeToString(key);""], [77, ""     * </pre>""], [78, ""     * The value of 'base64' was copied-n-pasted here:""], [79, ""     */""], [80, ""    private static final byte[] DEFAULT_CIPHER_KEY_BYTES = Base64.decode(\""kPH+bIxk5D2deZiIxcaaaA==\"");""], [81, """"], [108, ""        this.cipherService = new AesCipherService();""], [109, ""        setCipherKey(DEFAULT_CIPHER_KEY_BYTES);""]]}"	154
CVE-2019-0226	GHSA-fjw4-39pg-vf4f	org.apache.karaf.config:org.apache.karaf.config.core	0	4.2.4	4.2.5	https://github.com/apache/karaf	fe3bc4108e5a8b3c804e5da91ec0d5695588eb25	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/before/jar/org.apache.karaf.config.core-4.2.4.jar	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/after/jar/org.apache.karaf.config.core-4.2.5.jar	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/before/java/config/src/main/java/org/apache/karaf/config/command/InstallCommand.java	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/after/java/config/src/main/java/org/apache/karaf/config/command/InstallCommand.java	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/before/class/config/src/main/java/org/apache/karaf/config/command/InstallCommand.class	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/after/class/config/src/main/java/org/apache/karaf/config/command/InstallCommand.class	InstallCommand	[InstallCommand::execute]	org.apache.karaf.config.command	org.apache.karaf.config.command	"{""added"": [[48, ""        if (finalname.contains(\""..\"")) {""], [49, ""            throw new IllegalArgumentException(\""For security reason, relative path is not allowed in config file final name\"");""], [50, ""        }""]], ""deleted"": []}"	55
CVE-2019-0226	GHSA-fjw4-39pg-vf4f	org.apache.karaf.config:org.apache.karaf.config.core	0	4.2.4	4.2.5	https://github.com/apache/karaf	fe3bc4108e5a8b3c804e5da91ec0d5695588eb25	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/before/jar/org.apache.karaf.config.core-4.2.4.jar	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/after/jar/org.apache.karaf.config.core-4.2.5.jar	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/before/java/config/src/main/java/org/apache/karaf/config/core/impl/ConfigMBeanImpl.java	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/after/java/config/src/main/java/org/apache/karaf/config/core/impl/ConfigMBeanImpl.java	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/before/class/config/src/main/java/org/apache/karaf/config/core/impl/ConfigMBeanImpl.class	proc/changes/CVE-2019-0226/fe3bc4108e5a8b3c804e5da91ec0d5695588eb25/after/class/config/src/main/java/org/apache/karaf/config/core/impl/ConfigMBeanImpl.class	ConfigMBeanImpl	[ConfigMBeanImpl::install]	org.apache.karaf.config.core.impl	org.apache.karaf.config.core.impl	"{""added"": [[87, ""        if (finalname.contains(\""..\"")) {""], [88, ""            throw new IllegalArgumentException(\""For security reason, relative path is not allowed in config file final name\"");""], [89, ""        }""]], ""deleted"": []}"	198
CVE-2017-3586	GHSA-pwh7-92h3-mqr6	mysql:mysql-connector-java	0	5.1.41	5.1.42	https://github.com/mysql/mysql-connector-j	aeba57264966b0fd329cdb8170ba772fd8fd4de2	proc/changes/CVE-2017-3586/aeba57264966b0fd329cdb8170ba772fd8fd4de2/before/jar/mysql-connector-java-5.1.41.jar	proc/changes/CVE-2017-3586/aeba57264966b0fd329cdb8170ba772fd8fd4de2/after/jar/mysql-connector-java-5.1.42.jar	proc/changes/CVE-2017-3586/aeba57264966b0fd329cdb8170ba772fd8fd4de2/before/java/src/com/mysql/jdbc/ExportControlled.java	proc/changes/CVE-2017-3586/aeba57264966b0fd329cdb8170ba772fd8fd4de2/after/java/src/com/mysql/jdbc/ExportControlled.java	proc/changes/CVE-2017-3586/aeba57264966b0fd329cdb8170ba772fd8fd4de2/before/class/src/com/mysql/jdbc/ExportControlled.class	proc/changes/CVE-2017-3586/aeba57264966b0fd329cdb8170ba772fd8fd4de2/after/class/src/com/mysql/jdbc/ExportControlled.class	ExportControlled	[ExportControlled::getSSLSocketFactoryDefaultOrConfigured]	com.mysql.jdbc	com.mysql.jdbc	"{""added"": [[2, ""  Copyright (c) 2002, 2017, Oracle and/or its affiliates. All rights reserved.""], [34, ""import java.security.InvalidAlgorithmParameterException;""], [41, ""import java.security.cert.CertPath;""], [42, ""import java.security.cert.CertPathValidator;""], [43, ""import java.security.cert.CertPathValidatorException;""], [44, ""import java.security.cert.CertPathValidatorResult;""], [46, ""import java.security.cert.CertificateFactory;""], [47, ""import java.security.cert.PKIXCertPathValidatorResult;""], [48, ""import java.security.cert.PKIXParameters;""], [49, ""import java.security.cert.X509CertSelector;""], [60, ""import javax.net.ssl.KeyManager;""], [65, ""import javax.net.ssl.TrustManager;""], [218, ""    /**""], [219, ""     * Implementation of X509TrustManager wrapping JVM X509TrustManagers to add expiration check""], [220, ""     */""], [221, ""    public static class X509TrustManagerWrapper implements X509TrustManager {""], [222, """"], [223, ""        private X509TrustManager origTm = null;""], [224, ""        private boolean verifyServerCert = false;""], [225, ""        private CertificateFactory certFactory = null;""], [226, ""        private PKIXParameters validatorParams = null;""], [227, ""        private CertPathValidator validator = null;""], [228, """"], [229, ""        public X509TrustManagerWrapper(X509TrustManager tm, boolean verifyServerCertificate, KeyStore trustKeyStore) throws CertificateException {""], [230, ""            this.origTm = tm;""], [231, ""            this.verifyServerCert = verifyServerCertificate;""], [232, """"], [233, ""            if (verifyServerCertificate) {""], [234, ""                try {""], [235, ""                    this.validatorParams = new PKIXParameters(trustKeyStore);""], [236, ""                    this.validatorParams.setRevocationEnabled(false);""], [237, ""                    this.validator = CertPathValidator.getInstance(\""PKIX\"");""], [238, ""                    this.certFactory = CertificateFactory.getInstance(\""X.509\"");""], [239, ""                } catch (Exception e) {""], [240, ""                    throw new CertificateException(e);""], [241, ""                }""], [242, ""            }""], [243, """"], [244, ""        }""], [245, """"], [246, ""        public X509TrustManagerWrapper() {""], [247, ""        }""], [248, """"], [249, ""        public X509Certificate[] getAcceptedIssuers() {""], [250, ""            return this.origTm != null ? this.origTm.getAcceptedIssuers() : new X509Certificate[0];""], [251, ""        }""], [252, """"], [253, ""        public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {""], [254, ""            for (int i = 0; i < chain.length; i++) {""], [255, ""                chain[i].checkValidity();""], [256, ""            }""], [257, """"], [258, ""            if (this.validatorParams != null) {""], [259, """"], [260, ""                X509CertSelector certSelect = new X509CertSelector();""], [261, ""                certSelect.setSerialNumber(chain[0].getSerialNumber());""], [262, """"], [263, ""                try {""], [264, ""                    CertPath certPath = this.certFactory.generateCertPath(Arrays.asList(chain));""], [265, ""                    // Validate against truststore""], [266, ""                    CertPathValidatorResult result = this.validator.validate(certPath, this.validatorParams);""], [267, ""                    // Check expiration for the CA used to validate this path""], [268, ""                    ((PKIXCertPathValidatorResult) result).getTrustAnchor().getTrustedCert().checkValidity();""], [269, """"], [270, ""                } catch (InvalidAlgorithmParameterException e) {""], [271, ""                    throw new CertificateException(e);""], [272, ""                } catch (CertPathValidatorException e) {""], [273, ""                    throw new CertificateException(e);""], [274, ""                }""], [275, ""            }""], [276, """"], [277, ""            if (this.verifyServerCert) {""], [278, ""                this.origTm.checkServerTrusted(chain, authType);""], [279, ""            }""], [280, ""        }""], [281, """"], [282, ""        public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {""], [283, ""            this.origTm.checkClientTrusted(chain, authType);""], [284, ""        }""], [285, ""    };""], [286, """"], [290, ""        String clientCertificateKeyStoreType = mysqlIO.connection.getClientCertificateKeyStoreType();""], [291, ""        String trustCertificateKeyStoreUrl = mysqlIO.connection.getTrustCertificateKeyStoreUrl();""], [293, ""        String trustCertificateKeyStoreType = mysqlIO.connection.getTrustCertificateKeyStoreType();""], [294, """"], [295, ""        if (StringUtils.isNullOrEmpty(clientCertificateKeyStoreUrl)) {""], [296, ""            clientCertificateKeyStoreUrl = System.getProperty(\""javax.net.ssl.keyStore\"");""], [297, ""            clientCertificateKeyStorePassword = System.getProperty(\""javax.net.ssl.keyStorePassword\"");""], [298, ""            clientCertificateKeyStoreType = System.getProperty(\""javax.net.ssl.keyStoreType\"");""], [299, ""            if (StringUtils.isNullOrEmpty(clientCertificateKeyStoreType)) {""], [300, ""                clientCertificateKeyStoreType = \""JKS\"";""], [301, ""            }""], [302, ""            // check URL""], [303, ""            if (!StringUtils.isNullOrEmpty(clientCertificateKeyStoreUrl)) {""], [304, ""                try {""], [305, ""                    new URL(clientCertificateKeyStoreUrl);""], [306, ""                } catch (MalformedURLException e) {""], [307, ""                    clientCertificateKeyStoreUrl = \""file:\"" + clientCertificateKeyStoreUrl;""], [308, ""                }""], [309, ""            }""], [310, ""        }""], [312, ""        if (StringUtils.isNullOrEmpty(trustCertificateKeyStoreUrl)) {""], [313, ""            trustCertificateKeyStoreUrl = System.getProperty(\""javax.net.ssl.trustStore\"");""], [314, ""            trustCertificateKeyStorePassword = System.getProperty(\""javax.net.ssl.trustStorePassword\"");""], [315, ""            trustCertificateKeyStoreType = System.getProperty(\""javax.net.ssl.trustStoreType\"");""], [316, ""            if (StringUtils.isNullOrEmpty(trustCertificateKeyStoreType)) {""], [317, ""                trustCertificateKeyStoreType = \""JKS\"";""], [318, ""            }""], [319, ""            // check URL""], [320, ""            if (!StringUtils.isNullOrEmpty(trustCertificateKeyStoreUrl)) {""], [321, ""                try {""], [322, ""                    new URL(trustCertificateKeyStoreUrl);""], [323, ""                } catch (MalformedURLException e) {""], [324, ""                    trustCertificateKeyStoreUrl = \""file:\"" + trustCertificateKeyStoreUrl;""], [325, ""                }""], [332, ""        KeyManager[] kms = null;""], [333, ""        List<TrustManager> tms = new ArrayList<TrustManager>();""], [334, """"], [354, ""                    kms = kmf.getKeyManagers();""], [400, """"], [401, ""                    // building the customized list of TrustManagers from original one if it's available""], [402, ""                    TrustManager[] origTms = tmf.getTrustManagers();""], [403, ""                    final boolean verifyServerCertificate = mysqlIO.connection.getVerifyServerCertificate();""], [404, """"], [405, ""                    for (int j = 0; j < origTms.length; j++) {""], [406, ""                        tms.add(origTms[j] instanceof X509TrustManager""], [407, ""                                ? new X509TrustManagerWrapper((X509TrustManager) origTms[j], verifyServerCertificate, trustKeyStore) // wrapping X509TrustManagers""], [408, ""                                : origTms[j] // for non-X509 TrustManagers putting original ones""], [409, ""                        );""], [410, ""                    }""], [442, ""        // if original TrustManagers are not available then putting one X509TrustManagerWrapper which take care only about expiration check""], [443, ""        if (tms.size() == 0) {""], [444, ""            tms.add(new X509TrustManagerWrapper());""], [445, ""        }""], [448, ""            SSLContext sslContext = SSLContext.getInstance(\""TLS\"");""], [449, ""            sslContext.init(kms, tms.toArray(new TrustManager[tms.size()]), null);""], [451, """"]], ""deleted"": [[2, ""  Copyright (c) 2002, 2016, Oracle and/or its affiliates. All rights reserved.""], [209, ""        String trustCertificateKeyStoreUrl = mysqlIO.connection.getTrustCertificateKeyStoreUrl();""], [210, ""        String clientCertificateKeyStoreType = mysqlIO.connection.getClientCertificateKeyStoreType();""], [212, ""        String trustCertificateKeyStoreType = mysqlIO.connection.getTrustCertificateKeyStoreType();""], [215, ""        if (StringUtils.isNullOrEmpty(clientCertificateKeyStoreUrl) && StringUtils.isNullOrEmpty(trustCertificateKeyStoreUrl)) {""], [216, ""            if (mysqlIO.connection.getVerifyServerCertificate()) {""], [217, ""                return (SSLSocketFactory) SSLSocketFactory.getDefault();""], [319, ""        SSLContext sslContext = null;""], [322, ""            sslContext = SSLContext.getInstance(\""TLS\"");""], [323, ""            sslContext.init(StringUtils.isNullOrEmpty(clientCertificateKeyStoreUrl) ? null : kmf.getKeyManagers(),""], [324, ""                    mysqlIO.connection.getVerifyServerCertificate() ? tmf.getTrustManagers() : new X509TrustManager[] { new X509TrustManager() {""], [325, ""                        public void checkClientTrusted(X509Certificate[] chain, String authType) {""], [326, ""                            // return without complaint""], [327, ""                        }""], [328, """"], [329, ""                        public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {""], [330, ""                            // return without complaint""], [331, ""                        }""], [332, """"], [333, ""                        public X509Certificate[] getAcceptedIssuers() {""], [334, ""                            return null;""], [335, ""                        }""], [336, ""                    } }, null);""], [337, """"]]}"	362
CVE-2013-5679	GHSA-jcp9-796g-pv9p	org.owasp.esapi:esapi	2.0.0	2.0.1	2.1.0	https://github.com/ESAPI/esapi-java-legacy	41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/jar/esapi-2.0.1.jar	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/jar/esapi-2.1.0.jar	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/java/src/main/java/org/owasp/esapi/crypto/CipherText.java	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/java/src/main/java/org/owasp/esapi/crypto/CipherText.java	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/class/src/main/java/org/owasp/esapi/crypto/CipherText.class	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/class/src/main/java/org/owasp/esapi/crypto/CipherText.class	CipherText	[CipherText::validateMAC, CipherText::asPortableSerializedByteArray]	org.owasp.esapi.crypto	org.owasp.esapi.crypto	"{""added"": [[68, ""\t//\t\tPrevious versions:\t20110203 - Original version (ESAPI releases 2.0 & 2.0.1)""], [69, ""\t//\t\t\t\t\t\t    20130830 - Fix to issue #306 (release 2.1.0)""], [70, ""\tpublic  static final int cipherTextVersion = 20130830; // Format: YYYYMMDD, max is 99991231.""], [440, ""\t    boolean requiresMAC = ESAPI.securityConfiguration().useMACforCipherText();""], [442, ""\t    if (  requiresMAC && macComputed() ) {  // Uses MAC and it was computed""], [449, ""\t    } else if ( ! requiresMAC ) {           // Doesn't require a MAC""], [451, ""\t    } else {""], [452, ""\t    \t\t// This *used* to be the case (for versions 2.0 and 2.0.1) where we tried to""], [453, ""\t    \t\t// accomodate the deprecated decrypt() method from ESAPI 1.4. Unfortunately,""], [454, ""\t    \t\t// that was an EPIC FAIL. (See Google Issue # 306 for details.)""], [455, ""\t        logger.warning(Logger.SECURITY_FAILURE, \""MAC may have been tampered with (e.g., length set to 0).\"");""], [456, ""\t        return false;    // Deprecated decrypt() method removed, so now return false.""], [481, ""\t    boolean requiresMAC = ESAPI.securityConfiguration().useMACforCipherText();""], [482, ""\t    if (  requiresMAC && ! macComputed() ) {""]], ""deleted"": [[68, ""\tpublic  static final int cipherTextVersion = 20110203; // Format: YYYYMMDD, max is 99991231.""], [438, ""\t    boolean usesMAC = ESAPI.securityConfiguration().useMACforCipherText();""], [440, ""\t    if (  usesMAC && macComputed() ) {  // Uses MAC and it was computed""], [447, ""\t    } else if ( ! usesMAC ) {           // Doesn't use MAC""], [449, ""\t    } else {                            // Uses MAC but it has not been computed / stored.""], [450, ""\t        logger.warning(Logger.SECURITY_FAILURE, \""Cannot validate MAC as it was never computed and stored. \"" +""], [451, ""\t        \""Decryption result may be garbage even when decryption succeeds.\"");""], [452, ""\t        return true;    // Need to return 'true' here because of encrypt() / decrypt() methods don't support this.""], [477, ""\t    boolean usesMAC = ESAPI.securityConfiguration().useMACforCipherText();""], [478, ""\t    if (  usesMAC && ! macComputed() ) {""]]}"	399
CVE-2013-5679	GHSA-jcp9-796g-pv9p	org.owasp.esapi:esapi	2.0.0	2.0.1	2.1.0	https://github.com/ESAPI/esapi-java-legacy	41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/jar/esapi-2.0.1.jar	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/jar/esapi-2.1.0.jar	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/java/src/main/java/org/owasp/esapi/crypto/CipherTextSerializer.java	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/java/src/main/java/org/owasp/esapi/crypto/CipherTextSerializer.java	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/class/src/main/java/org/owasp/esapi/crypto/CipherTextSerializer.class	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/class/src/main/java/org/owasp/esapi/crypto/CipherTextSerializer.class	CipherTextSerializer	[CipherTextSerializer::convertToCipherText]	org.owasp.esapi.crypto	org.owasp.esapi.crypto	"{""added"": [[35, ""\t//\t\tPrevious versions:\t20110203 - Original version (ESAPI releases 2.0 & 2.0.1)""], [36, ""\t//\t\t\t\t\t\t    20130830 - Fix to issue #306 (release 2.1.0)""], [37, ""\tpublic  static final  int cipherTextSerializerVersion = 20130830; // Format: YYYYMMDD, max is 99991231.""], [239, ""            assert kdfVers >= 20110203 && kdfVers <= 99991231 : \""KDF Version (\"" + kdfVers + \"") out of range.\""; // 20110203 (orig version).""]], ""deleted"": [[35, ""\tpublic  static final  int cipherTextSerializerVersion = 20110203; // Format: YYYYMMDD, max is 99991231.""], [237, ""            assert kdfVers > 0 && kdfVers <= 99991231 : \""KDF Version (\"" + kdfVers + \"") out of range.\""; // Really should be >= 20110203 (earliest).""]]}"	244
CVE-2013-5679	GHSA-jcp9-796g-pv9p	org.owasp.esapi:esapi	2.0.0	2.0.1	2.1.0	https://github.com/ESAPI/esapi-java-legacy	41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/jar/esapi-2.0.1.jar	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/jar/esapi-2.1.0.jar	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/java/src/main/java/org/owasp/esapi/reference/crypto/JavaEncryptor.java	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/java/src/main/java/org/owasp/esapi/reference/crypto/JavaEncryptor.java	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/before/class/src/main/java/org/owasp/esapi/reference/crypto/JavaEncryptor.class	proc/changes/CVE-2013-5679/41138fef5f63d9cf0d5e05d2bee2c7f682ffef3f/after/class/src/main/java/org/owasp/esapi/reference/crypto/JavaEncryptor.class	JavaEncryptor	[JavaEncryptor::encrypt, JavaEncryptor::encrypt, JavaEncryptor::decrypt]	org.owasp.esapi.reference.crypto	org.owasp.esapi.reference.crypto	"{""added"": [[347, ""\t\t if ( key == null ) {""], [348, ""\t\t\t throw new IllegalArgumentException(\""(Master) encryption key arg may not be null. Is Encryptor.MasterKey set?\"");""], [349, ""\t\t }""], [350, ""\t\t if ( plain == null ) {""], [351, ""\t\t\t throw new IllegalArgumentException(\""PlainText may arg not be null\"");""], [352, ""\t\t }""], [355, """"]], ""deleted"": [[332, """"], [333, ""\t/**""], [334, ""\t * Convenience method that encrypts plaintext strings the new way (default""], [335, ""\t * is CBC mode and PKCS5 padding). This encryption method uses the master""], [336, ""\t * encryption key specified by the {@code Encryptor.MasterKey} property""], [337, ""\t * in {@code ESAPI.properties}.""], [338, ""\t *""], [339, ""\t * @param plaintext\tA String to be encrypted""], [340, ""\t * @return\tA base64-encoded combination of IV + raw ciphertext""], [341, ""\t * @throws EncryptionException\tThrown when something goes wrong with the""], [342, ""\t * \t\t\t\t\t\t\t\tencryption.""], [343, ""\t *""], [344, ""\t * @see org.owasp.esapi.Encryptor#encrypt(PlainText)""], [345, ""\t */""], [346, ""\t@Deprecated public String encrypt(String plaintext) throws EncryptionException""], [347, ""\t{""], [348, ""        logWarning(\""encrypt\"", \""Calling deprecated encrypt() method.\"");""], [349, ""\t\tCipherText ct = null;""], [350, ""\t\tct = encrypt(new PlainText(plaintext) );""], [351, ""\t\treturn ct.getEncodedIVCipherText();""], [352, ""\t}""], [353, """"], [371, ""\t\t assert key != null : \""(Master) encryption key may not be null\"";""], [372, """"], [572, ""\t/**""], [573, ""\t  * Convenience method that decrypts previously encrypted plaintext strings""], [574, ""\t  * that were encrypted using the new encryption mechanism (with CBC mode and""], [575, ""\t  * PKCS5 padding by default).  This decryption method uses the master""], [576, ""\t  * encryption key specified by the {@code Encryptor.MasterKey} property""], [577, ""\t  * in {@code ESAPI.properties}.""], [578, ""\t  *""], [579, ""\t  * @param b64IVCiphertext\tA base64-encoded representation of the""], [580, ""\t  * \t\t\t\t\t\t\tIV + raw ciphertext string to be decrypted with""], [581, ""\t  * \t\t\t\t\t\t\tthe default master key.""], [582, ""\t  * @return\tThe plaintext string prior to encryption.""], [583, ""\t  * @throws EncryptionException When something fails with the decryption.""], [584, ""\t  *""], [585, ""\t  * @see org.owasp.esapi.Encryptor#decrypt(CipherText)""], [586, ""\t  */""], [587, ""\t @Deprecated public String decrypt(String b64IVCiphertext) throws EncryptionException""], [588, ""\t {""], [589, ""\t     logWarning(\""decrypt\"", \""Calling deprecated decrypt() method.\"");""], [590, ""\t\t CipherText ct = null;""], [591, ""\t\t try {""], [592, ""\t\t\t // We assume that the default cipher transform was used to encrypt this.""], [593, ""\t\t\t ct = new CipherText();""], [594, """"], [595, ""\t\t\t // Need to base64 decode the IV+ciphertext and extract the IV to set it in CipherText object.""], [596, ""\t\t\t byte[] ivPlusRawCipherText = ESAPI.encoder().decodeFromBase64(b64IVCiphertext);""], [597, ""\t\t\t int blockSize = ct.getBlockSize();\t// Size in bytes.""], [598, ""\t\t\t byte[] iv = new byte[ blockSize ];""], [599, ""\t\t\t CryptoHelper.copyByteArray(ivPlusRawCipherText, iv, blockSize);\t// Copy the first blockSize bytes into iv array""], [600, ""\t\t\t int cipherTextSize = ivPlusRawCipherText.length - blockSize;""], [601, ""\t\t\t byte[] rawCipherText = new byte[ cipherTextSize ];""], [602, ""\t\t\t System.arraycopy(ivPlusRawCipherText, blockSize, rawCipherText, 0, cipherTextSize);""], [603, ""\t\t\t ct.setIVandCiphertext(iv, rawCipherText);""], [604, """"], [605, ""\t\t\t // Now the CipherText object should be prepared to use it to decrypt.""], [606, ""\t\t\t PlainText plaintext = decrypt(ct);""], [607, ""\t\t\t return plaintext.toString();\t// Convert back to a Java String""], [608, ""\t\t } catch (UnsupportedEncodingException e) {""], [609, ""\t\t\t // Should never happen; UTF-8 should be in rt.jar.""], [610, ""\t\t\t logger.error(Logger.SECURITY_FAILURE, \""UTF-8 encoding not available! Decryption failed.\"", e);""], [611, ""\t\t\t return null;\t// CHECKME: Or re-throw or what? Could also use native encoding, but that's""], [612, ""\t\t\t // likely to cause unexpected and undesired effects far downstream.""], [613, ""\t\t } catch (IOException e) {""], [614, ""\t\t\t logger.error(Logger.SECURITY_FAILURE, \""Base64 decoding of IV+ciphertext failed. Decryption failed.\"", e);""], [615, ""\t\t\t return null;""], [616, ""\t\t }""], [617, ""\t }""], [618, """"]]}"	587
CVE-2016-0785	GHSA-876p-4wgc-75rx	org.apache.struts:struts2-core	2.0	2.3.24.3	2.3.28	https://gitbox.apache.org/repos/asf/struts	15857a69e7baf3675804495a5954cd0756ac8364	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/jar/struts2-core-2.3.24.3.jar	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/jar/struts2-core-2.3.28.jar	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/java/core/src/main/java/org/apache/struts2/components/Component.java	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/java/core/src/main/java/org/apache/struts2/components/Component.java	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/class/core/src/main/java/org/apache/struts2/components/Component.class	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/class/core/src/main/java/org/apache/struts2/components/Component.class	Component	[Component::findValue]	org.apache.struts2.components	org.apache.struts2.components	"{""added"": [[376, ""            if (ComponentUtils.containsExpression(expr)) {""], [377, ""                return TextParseUtil.translateVariables('%', expr, stack);""], [378, ""            } else {""], [379, ""                return expr;""], [380, ""            }""]], ""deleted"": [[376, ""        \treturn TextParseUtil.translateVariables('%', expr, stack);""]]}"	264
CVE-2016-0785	GHSA-876p-4wgc-75rx	org.apache.struts:struts2-core	2.0	2.3.24.3	2.3.28	https://gitbox.apache.org/repos/asf/struts	15857a69e7baf3675804495a5954cd0756ac8364	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/jar/struts2-core-2.3.24.3.jar	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/jar/struts2-core-2.3.28.jar	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/java/core/src/main/java/org/apache/struts2/util/ComponentUtils.java	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/java/core/src/main/java/org/apache/struts2/util/ComponentUtils.java	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/class/core/src/main/java/org/apache/struts2/util/ComponentUtils.class	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/class/core/src/main/java/org/apache/struts2/util/ComponentUtils.class	ComponentUtils	[ComponentUtils::containsExpression, ComponentUtils::isExpression, ComponentUtils::isExpression]	org.apache.struts2.util	org.apache.struts2.util	"{""added"": [[43, ""     * @param expr to treat as an expression""], [46, ""    public static boolean isExpression(String expr) {""], [50, ""    public static boolean containsExpression(String expr) {""], [51, ""        return expr.contains(\""%{\"") && expr.contains(\""}\"");""], [52, ""    }""], [53, """"]], ""deleted"": [[43, ""     * @param value to treat as an expression""], [46, ""    public static boolean isExpression(Object value) {""], [47, ""        String expr = value.toString();""]]}"	22
CVE-2016-0785	GHSA-876p-4wgc-75rx	org.apache.struts:struts2-core	2.0	2.3.24.3	2.3.28	https://gitbox.apache.org/repos/asf/struts	15857a69e7baf3675804495a5954cd0756ac8364	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/jar/struts2-core-2.3.24.3.jar	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/jar/struts2-core-2.3.28.jar	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/java/core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/java/core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/before/class/core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.class	proc/changes/CVE-2016-0785/15857a69e7baf3675804495a5954cd0756ac8364/after/class/core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.class	AbstractUITag	[AbstractUITag::setDynamicAttribute]	org.apache.struts2.views.jsp.ui	org.apache.struts2.views.jsp.ui	"{""added"": [[309, ""        if (ComponentUtils.altSyntax(getStack()) && ComponentUtils.isExpression(value.toString())) {""]], ""deleted"": [[309, ""        if (ComponentUtils.altSyntax(getStack()) && ComponentUtils.isExpression(value)) {""]]}"	235
CVE-2013-4310	GHSA-q5q8-jghf-3pm3	org.apache.struts:struts2-core	0	2.3.15.2	2.3.15.3	https://github.com/apache/struts	0c8366cb792227d484b9ca13e537037dd0cb57dc	proc/changes/CVE-2013-4310/0c8366cb792227d484b9ca13e537037dd0cb57dc/before/jar/struts2-core-2.3.15.2.jar	proc/changes/CVE-2013-4310/0c8366cb792227d484b9ca13e537037dd0cb57dc/after/jar/struts2-core-2.3.15.3.jar	proc/changes/CVE-2013-4310/0c8366cb792227d484b9ca13e537037dd0cb57dc/before/java/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java	proc/changes/CVE-2013-4310/0c8366cb792227d484b9ca13e537037dd0cb57dc/after/java/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java	proc/changes/CVE-2013-4310/0c8366cb792227d484b9ca13e537037dd0cb57dc/before/class/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.class	proc/changes/CVE-2013-4310/0c8366cb792227d484b9ca13e537037dd0cb57dc/after/class/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.class	DefaultActionMapper	[DefaultActionMapper::setAllowActionPrefix, DefaultActionMapper::setAllowActionCrossNamespaceAccess, DefaultActionMapper::DefaultActionMapper, DefaultActionMapper::handleSpecialParameters]	org.apache.struts2.dispatcher.mapper	org.apache.struts2.dispatcher.mapper	"{""added"": [[178, ""    private boolean allowActionPrefix = false;""], [179, ""    private boolean allowActionCrossNamespaceAccess = false;""], [192, ""                    public void execute(String key, ActionMapping mapping) {""], [200, ""                    public void execute(final String key, ActionMapping mapping) {""], [201, ""                        if (allowActionPrefix) {""], [212, ""                            if (allowSlashesInActionNames && !allowActionCrossNamespaceAccess) {""], [213, ""                                if (actionName.startsWith(\""/\"")) {""], [214, ""                                    actionName = actionName.substring(1);""], [215, ""                                }""], [217, ""                            if (!allowSlashesInActionNames && !allowActionCrossNamespaceAccess) {""], [218, ""                                if (actionName.lastIndexOf(\""/\"") != -1) {""], [219, ""                                    actionName = actionName.substring(actionName.lastIndexOf(\""/\"") + 1);""], [220, ""                                }""], [221, ""                            }""], [222, ""                            mapping.setName(actionName);""], [262, ""    @Inject(value = StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_ENABLED)""], [263, ""    public void setAllowActionPrefix(String allowActionPrefix) {""], [264, ""        this.allowActionPrefix = \""true\"".equalsIgnoreCase(allowActionPrefix);""], [265, ""    }""], [266, """"], [267, ""    @Inject(value = StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_CROSSNAMESPACES)""], [268, ""    public void setAllowActionCrossNamespaceAccess(String allowActionCrossNamespaceAccess) {""], [269, ""        this.allowActionCrossNamespaceAccess = \""true\"".equalsIgnoreCase(allowActionCrossNamespaceAccess);""], [270, ""    }""], [271, """"], [364, ""                    parameterAction.execute(key, mapping);""]], ""deleted"": [[37, ""import org.apache.struts2.dispatcher.ServletDispatcherResult;""], [173, ""    private static final String STRUTS2_ACTION_PREFIX_PARSED = \""_struts2_action_prefix_parsed\"";""], [192, ""                    public void execute(String key, ActionMapping mapping, HttpServletRequest request) {""], [200, ""                    public void execute(final String key, ActionMapping mapping, HttpServletRequest request) {""], [201, ""                        if (request != null && request.getAttribute(STRUTS2_ACTION_PREFIX_PARSED) == null) {""], [202, ""                            request.setAttribute(STRUTS2_ACTION_PREFIX_PARSED, true);""], [213, ""                            mapping.setName(actionName);""], [214, ""                            if (getDefaultExtension() != null) {""], [215, ""                                actionName = actionName + \"".\"" + getDefaultExtension();""], [217, ""                            mapping.setResult(new ServletDispatcherResult(actionName));""], [349, ""                    parameterAction.execute(key, mapping, request);""]]}"	352
CVE-2016-8738	GHSA-86vq-8qhc-5rqw	org.apache.struts:struts2-core	2.5.0	2.5.12	2.5.13	https://gitbox.apache.org/repos/asf/struts	554b9dddb0fbd1e581ef577dd62a7c22955ad0f6	proc/changes/CVE-2016-8738/554b9dddb0fbd1e581ef577dd62a7c22955ad0f6/before/jar/struts2-core-2.5.12.jar	proc/changes/CVE-2016-8738/554b9dddb0fbd1e581ef577dd62a7c22955ad0f6/after/jar/struts2-core-2.5.13.jar	proc/changes/CVE-2016-8738/554b9dddb0fbd1e581ef577dd62a7c22955ad0f6/before/java/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java	proc/changes/CVE-2016-8738/554b9dddb0fbd1e581ef577dd62a7c22955ad0f6/after/java/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.java	proc/changes/CVE-2016-8738/554b9dddb0fbd1e581ef577dd62a7c22955ad0f6/before/class/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.class	proc/changes/CVE-2016-8738/554b9dddb0fbd1e581ef577dd62a7c22955ad0f6/after/class/core/src/main/java/com/opensymphony/xwork2/validator/validators/URLValidator.class	URLValidator	[URLValidator::validate]	com.opensymphony.xwork2.validator.validators	com.opensymphony.xwork2.validator.validators	"{""added"": [[58, ""        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value).trim()).matches()) {""]], ""deleted"": [[58, ""        if (!(value.getClass().equals(String.class)) || !Pattern.compile(getUrlRegex(), Pattern.CASE_INSENSITIVE).matcher(String.valueOf(value)).matches()) {""]]}"	46
CVE-2013-6408	GHSA-45w3-2hvv-pfxq	org.apache.solr:solr-core	0	4.3.0	4.3.1	https://git-wip-us.apache.org/repos/asf/lucene-solr	7239a57a51ea0f4d05dd330ce5e15e4f72f72747	proc/changes/CVE-2013-6408/7239a57a51ea0f4d05dd330ce5e15e4f72f72747/before/jar/solr-core-4.3.0.jar	proc/changes/CVE-2013-6408/7239a57a51ea0f4d05dd330ce5e15e4f72f72747/after/jar/solr-core-4.3.1.jar	proc/changes/CVE-2013-6408/7239a57a51ea0f4d05dd330ce5e15e4f72f72747/before/java/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java	proc/changes/CVE-2013-6408/7239a57a51ea0f4d05dd330ce5e15e4f72f72747/after/java/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.java	proc/changes/CVE-2013-6408/7239a57a51ea0f4d05dd330ce5e15e4f72f72747/before/class/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.class	proc/changes/CVE-2013-6408/7239a57a51ea0f4d05dd330ce5e15e4f72f72747/after/class/solr/core/src/java/org/apache/solr/handler/DocumentAnalysisRequestHandler.class	DocumentAnalysisRequestHandler	[DocumentAnalysisRequestHandler::init]	org.apache.solr.handler	org.apache.solr.handler	"{""added"": [[38, ""import org.apache.solr.util.EmptyEntityResolver;""], [94, ""    EmptyEntityResolver.configureXMLInputFactory(inputFactory);""], [95, ""    inputFactory.setXMLReporter(xmllog);""]], ""deleted"": [[106, ""    inputFactory.setXMLReporter(xmllog);""]]}"	203
CVE-2012-6612	GHSA-6cpj-3g83-q2j4	org.apache.solr:solr-core	0	4.0.0	4.1.0	https://git-wip-us.apache.org/repos/asf/lucene-solr	f230486ce6707762c1a6e81655d0fac52887906d	proc/changes/CVE-2012-6612/f230486ce6707762c1a6e81655d0fac52887906d/before/jar/solr-core-4.0.0.jar	proc/changes/CVE-2012-6612/f230486ce6707762c1a6e81655d0fac52887906d/after/jar/solr-core-4.1.0.jar	proc/changes/CVE-2012-6612/f230486ce6707762c1a6e81655d0fac52887906d/before/java/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java	proc/changes/CVE-2012-6612/f230486ce6707762c1a6e81655d0fac52887906d/after/java/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java	proc/changes/CVE-2012-6612/f230486ce6707762c1a6e81655d0fac52887906d/before/class/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.class	proc/changes/CVE-2012-6612/f230486ce6707762c1a6e81655d0fac52887906d/after/class/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.class	XMLLoader	[XMLLoader::load, XMLLoader::init]	org.apache.solr.handler.loader	org.apache.solr.handler.loader	"{""added"": [[40, ""import org.apache.solr.util.EmptyEntityResolver;""], [45, ""import org.xml.sax.XMLReader;""], [57, ""import javax.xml.parsers.SAXParserFactory;""], [78, ""  SAXParserFactory saxFactory;""], [82, ""    // Init StAX parser:""], [84, ""    EmptyEntityResolver.configureXMLInputFactory(inputFactory);""], [85, ""    inputFactory.setXMLReporter(xmllog);""], [94, ""    } catch (IllegalArgumentException ex) {""], [99, """"], [100, ""    // Init SAX parser (for XSL):""], [101, ""    saxFactory = SAXParserFactory.newInstance();""], [102, ""    saxFactory.setNamespaceAware(true); // XSL needs this!""], [103, ""    EmptyEntityResolver.configureSAXParserFactory(saxFactory);""], [126, ""      final Transformer t = getTransformer(tr,req);""], [135, ""        final XMLReader xmlr = saxFactory.newSAXParser().getXMLReader();""], [136, ""        xmlr.setErrorHandler(xmllog);""], [137, ""        xmlr.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);""], [138, ""        final SAXSource source = new SAXSource(xmlr, isrc);""], [145, ""      // second step: feed the intermediate DOM tree into StAX parser:""]], ""deleted"": [[87, ""    }""], [88, ""    catch (IllegalArgumentException ex) {""], [93, ""    inputFactory.setXMLReporter(xmllog);""], [116, ""      Transformer t = getTransformer(tr,req);""], [125, ""        final SAXSource source = new SAXSource(isrc);""], [132, ""      // second step feed the intermediate DOM tree into StAX parser:""]]}"	334
CVE-2019-10462	GHSA-x546-xrx3-hjx4	org.jenkins-ci.plugins:dynatrace-dashboard	0	2.1.3	2.1.4	https://github.com/jenkinsci/dynatrace-plugin	373adaa1161d59ccd4e5e3469a9b6aeec17968ae	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/jar/dynatrace-dashboard-2.1.3.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/jar/dynatrace-dashboard-2.1.4.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/java/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/java/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/class/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper$DescriptorImpl.class	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/class/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper$DescriptorImpl.class	TABuildWrapper$DescriptorImpl	[TABuildWrapper::DescriptorImpl::doCheckSystemProfile]	com.dynatrace.jenkins.dashboard	com.dynatrace.jenkins.dashboard	"{""added"": [[91, ""\tprivate String versionMajor;""], [92, ""\tprivate String versionMinor;""], [93, ""\tprivate String versionRevision;""], [94, ""\tprivate String versionMilestone;""], [95, ""\tprivate String marker;""], [96, ""\tprivate Boolean recordSession;""], [101, ""\t@SuppressWarnings(\""DeprecatedIsStillUsed\"")""], [114, ""\t@SuppressWarnings(\""WeakerAccess\"")""], [150, ""\t@SuppressWarnings(\""RedundantThrows\"")""], [210, ""\t\t\tif (StringUtils.isNotEmpty(globalConfig.password.getPlainText())) {""], [211, ""\t\t\t\tparameters.add(new PasswordParameterValue(BuildVarKeys.BUILD_VAR_KEY_GLOBAL_PASSWORD, globalConfig.password.getPlainText()));""], [242, ""\t\t\treturn FormValidation.error(Messages.RECORDER_VALIDATION_BLANK_SYSTEM_PROFILE());""], [302, ""\t\t@SuppressWarnings(\""RedundantThrows\"")""]], ""deleted"": [[91, ""\tpublic String versionMajor;""], [92, ""\tpublic String versionMinor;""], [93, ""\tpublic String versionRevision;""], [94, ""\tpublic String versionMilestone;""], [95, ""\tpublic String marker;""], [96, ""\tpublic Boolean recordSession;""], [207, ""\t\t\tif (StringUtils.isNotEmpty(globalConfig.password)) {""], [208, ""\t\t\t\tparameters.add(new PasswordParameterValue(BuildVarKeys.BUILD_VAR_KEY_GLOBAL_PASSWORD, globalConfig.password));""], [238, ""\t\t\t} else {""], [239, ""\t\t\t\treturn FormValidation.error(Messages.RECORDER_VALIDATION_BLANK_SYSTEM_PROFILE());""]]}"	238
CVE-2019-10462	GHSA-x546-xrx3-hjx4	org.jenkins-ci.plugins:dynatrace-dashboard	0	2.1.3	2.1.4	https://github.com/jenkinsci/dynatrace-plugin	373adaa1161d59ccd4e5e3469a9b6aeec17968ae	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/jar/dynatrace-dashboard-2.1.3.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/jar/dynatrace-dashboard-2.1.4.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/java/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/java/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/class/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper.class	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/class/src/main/java/com/dynatrace/jenkins/dashboard/TABuildWrapper.class	TABuildWrapper	[TABuildWrapper::setupBuildVariables]	com.dynatrace.jenkins.dashboard	com.dynatrace.jenkins.dashboard	"{""added"": [[91, ""\tprivate String versionMajor;""], [92, ""\tprivate String versionMinor;""], [93, ""\tprivate String versionRevision;""], [94, ""\tprivate String versionMilestone;""], [95, ""\tprivate String marker;""], [96, ""\tprivate Boolean recordSession;""], [101, ""\t@SuppressWarnings(\""DeprecatedIsStillUsed\"")""], [114, ""\t@SuppressWarnings(\""WeakerAccess\"")""], [150, ""\t@SuppressWarnings(\""RedundantThrows\"")""], [210, ""\t\t\tif (StringUtils.isNotEmpty(globalConfig.password.getPlainText())) {""], [211, ""\t\t\t\tparameters.add(new PasswordParameterValue(BuildVarKeys.BUILD_VAR_KEY_GLOBAL_PASSWORD, globalConfig.password.getPlainText()));""], [242, ""\t\t\treturn FormValidation.error(Messages.RECORDER_VALIDATION_BLANK_SYSTEM_PROFILE());""], [302, ""\t\t@SuppressWarnings(\""RedundantThrows\"")""]], ""deleted"": [[91, ""\tpublic String versionMajor;""], [92, ""\tpublic String versionMinor;""], [93, ""\tpublic String versionRevision;""], [94, ""\tpublic String versionMilestone;""], [95, ""\tpublic String marker;""], [96, ""\tpublic Boolean recordSession;""], [207, ""\t\t\tif (StringUtils.isNotEmpty(globalConfig.password)) {""], [208, ""\t\t\t\tparameters.add(new PasswordParameterValue(BuildVarKeys.BUILD_VAR_KEY_GLOBAL_PASSWORD, globalConfig.password));""], [238, ""\t\t\t} else {""], [239, ""\t\t\t\treturn FormValidation.error(Messages.RECORDER_VALIDATION_BLANK_SYSTEM_PROFILE());""]]}"	238
CVE-2019-10462	GHSA-x546-xrx3-hjx4	org.jenkins-ci.plugins:dynatrace-dashboard	0	2.1.3	2.1.4	https://github.com/jenkinsci/dynatrace-plugin	373adaa1161d59ccd4e5e3469a9b6aeec17968ae	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/jar/dynatrace-dashboard-2.1.3.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/jar/dynatrace-dashboard-2.1.4.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/java/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/java/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/class/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.class	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/class/src/main/java/com/dynatrace/jenkins/dashboard/TAGlobalConfiguration.class	TAGlobalConfiguration	[TAGlobalConfiguration::getDefaultPassword, TAGlobalConfiguration::doCheckDelay, TAGlobalConfiguration::configure, TAGlobalConfiguration::TAGlobalConfiguration, TAGlobalConfiguration::doCheckRetryCount]	com.dynatrace.jenkins.dashboard	com.dynatrace.jenkins.dashboard	"{""added"": [[40, ""import hudson.util.Secret;""], [47, ""import org.kohsuke.stapler.interceptor.RequirePOST;""], [56, ""@SuppressWarnings(\""WeakerAccess\"")""], [68, ""\tprivate static final String JSON_OBJECT_NAME = \""dynatrace-test-automation\""; // section name from config.jelly""], [74, ""\tpublic Secret password = getDefaultPassword();""], [80, ""\t\t// load config from XML file on startup""], [81, ""\t\tload();""], [100, ""\tpublic static Secret getDefaultPassword() { return Secret.fromString(DEFAULT_PASSWORD); }""], [114, ""\t@SuppressWarnings(\""RedundantThrows\"")""], [117, ""\t\treq.bindJSON(this, json.getJSONObject(JSON_OBJECT_NAME));""], [164, ""\t\t\t// ignore exception, covered by fallback error""], [176, ""\t\t\t// ignore exception, covered by fallback error""], [181, ""\t@RequirePOST""]], ""deleted"": [[70, ""\tpublic String password = getDefaultPassword();""], [76, ""\t\tload(); // KN: load config from XML file on startup""], [95, ""\tpublic static String getDefaultPassword() { return DEFAULT_PASSWORD; }""], [111, ""\t\treq.bindJSON(this, json.getJSONObject(\""dynatrace-test-automation\"")); // KN: section name from config.jelly""]]}"	161
CVE-2019-10462	GHSA-x546-xrx3-hjx4	org.jenkins-ci.plugins:dynatrace-dashboard	0	2.1.3	2.1.4	https://github.com/jenkinsci/dynatrace-plugin	373adaa1161d59ccd4e5e3469a9b6aeec17968ae	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/jar/dynatrace-dashboard-2.1.3.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/jar/dynatrace-dashboard-2.1.4.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/java/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/java/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/class/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction.class	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/class/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction.class	TAReportingProjectAction	[TAReportingProjectAction::doSummarizerGraph, TAReportingProjectAction::getExistingReportsList]	com.dynatrace.jenkins.dashboard	com.dynatrace.jenkins.dashboard	"{""added"": [[65, ""public class TAReportingProjectAction implements Action {""], [78, ""\tprivate abstract static class GraphImpl extends Graph {""], [80, ""\t\tGraphImpl() {""], [117, ""\t\t\t// force the chart axis to have only integer values""], [126, ""\t@SuppressWarnings(\""WeakerAccess\"")""], [152, ""\t *""], [153, ""\t * @param request request sent to generate the graph""], [154, ""\t * @param response response to modify (if needed)""], [155, ""\t * @throws IOException when PNG file creation was not possible""], [163, ""\t\t\tsummaries.put(new ChartUtil.NumberOnlyBuildLabel(report.getBuild()), summary);""], [208, ""\t\t\t} else {""], [209, ""\t\t\t\t// backward compatibility""]], ""deleted"": [[65, ""public class TAReportingProjectAction implements Action{""], [78, ""\tprivate abstract class GraphImpl extends Graph {""], [80, ""\t\tprotected GraphImpl() {""], [117, ""\t\t\t// KN: force the chart axis to have only integer values""], [158, ""\t\t\tsummaries.put(new ChartUtil.NumberOnlyBuildLabel((Run<?, ?>) report.getBuild()), summary);""], [203, ""\t\t\t} else { // KN: FOR BACKWARD COMPATIBILITY""]]}"	142
CVE-2019-10462	GHSA-x546-xrx3-hjx4	org.jenkins-ci.plugins:dynatrace-dashboard	0	2.1.3	2.1.4	https://github.com/jenkinsci/dynatrace-plugin	373adaa1161d59ccd4e5e3469a9b6aeec17968ae	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/jar/dynatrace-dashboard-2.1.3.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/jar/dynatrace-dashboard-2.1.4.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/java/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/java/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/class/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction$GraphImpl.class	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/class/src/main/java/com/dynatrace/jenkins/dashboard/TAReportingProjectAction$GraphImpl.class	TAReportingProjectAction$GraphImpl	[TAReportingProjectAction::GraphImpl::GraphImpl, TAReportingProjectAction::GraphImpl::createGraph]	com.dynatrace.jenkins.dashboard	com.dynatrace.jenkins.dashboard	"{""added"": [[65, ""public class TAReportingProjectAction implements Action {""], [78, ""\tprivate abstract static class GraphImpl extends Graph {""], [80, ""\t\tGraphImpl() {""], [117, ""\t\t\t// force the chart axis to have only integer values""], [126, ""\t@SuppressWarnings(\""WeakerAccess\"")""], [152, ""\t *""], [153, ""\t * @param request request sent to generate the graph""], [154, ""\t * @param response response to modify (if needed)""], [155, ""\t * @throws IOException when PNG file creation was not possible""], [163, ""\t\t\tsummaries.put(new ChartUtil.NumberOnlyBuildLabel(report.getBuild()), summary);""], [208, ""\t\t\t} else {""], [209, ""\t\t\t\t// backward compatibility""]], ""deleted"": [[65, ""public class TAReportingProjectAction implements Action{""], [78, ""\tprivate abstract class GraphImpl extends Graph {""], [80, ""\t\tprotected GraphImpl() {""], [117, ""\t\t\t// KN: force the chart axis to have only integer values""], [158, ""\t\t\tsummaries.put(new ChartUtil.NumberOnlyBuildLabel((Run<?, ?>) report.getBuild()), summary);""], [203, ""\t\t\t} else { // KN: FOR BACKWARD COMPATIBILITY""]]}"	142
CVE-2019-10462	GHSA-x546-xrx3-hjx4	org.jenkins-ci.plugins:dynatrace-dashboard	0	2.1.3	2.1.4	https://github.com/jenkinsci/dynatrace-plugin	373adaa1161d59ccd4e5e3469a9b6aeec17968ae	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/jar/dynatrace-dashboard-2.1.3.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/jar/dynatrace-dashboard-2.1.4.jar	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/java/src/main/java/com/dynatrace/jenkins/dashboard/utils/Utils.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/java/src/main/java/com/dynatrace/jenkins/dashboard/utils/Utils.java	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/before/class/src/main/java/com/dynatrace/jenkins/dashboard/utils/Utils.class	proc/changes/CVE-2019-10462/373adaa1161d59ccd4e5e3469a9b6aeec17968ae/after/class/src/main/java/com/dynatrace/jenkins/dashboard/utils/Utils.class	Utils	[Utils::convertTestStatus, Utils::updateBuildVariable, Utils::createClient, Utils::convertTestCategory, Utils::convertTestMeasure, Utils::convertTestResult]	com.dynatrace.jenkins.dashboard.utils	com.dynatrace.jenkins.dashboard.utils	"{""added"": [[38, ""import com.google.common.collect.ImmutableList;""], [39, """"], [54, ""\tprivate static final String TEST_MEASURE_UNIT_DEFAULT = \""num\"";""], [68, ""                    globalConfig.password.getPlainText(),""], [104, ""\tprivate static TestResult convertTestResult(com.dynatrace.sdk.server.testautomation.models.TestResult sdkTestResult) {""], [112, ""\tprivate static TestMeasure convertTestMeasure(com.dynatrace.sdk.server.testautomation.models.TestMeasure sdkTestMeasure) {""], [123, ""\tprivate static TestCategory convertTestCategory(com.dynatrace.sdk.server.testautomation.models.TestCategory sdkTestCategory) {""], [137, ""\tprivate static TestStatus convertTestStatus(com.dynatrace.sdk.server.testautomation.models.TestStatus sdkTestStatus) {""], [163, ""\t@SuppressWarnings(\""BooleanMethodIsAlwaysInverted\"")""], [187, ""\t\tupdateBuildVariables(build, ImmutableList.of(new StringParameterValue(key, value)));""]], ""deleted"": [[52, ""\tpublic static final String TEST_MEASURE_UNIT_DEFAULT = \""num\"";""], [66, ""                    globalConfig.password,""], [102, ""\tpublic static TestResult convertTestResult(com.dynatrace.sdk.server.testautomation.models.TestResult sdkTestResult) {""], [110, ""\tpublic static TestMeasure convertTestMeasure(com.dynatrace.sdk.server.testautomation.models.TestMeasure sdkTestMeasure) {""], [121, ""\tpublic static TestCategory convertTestCategory(com.dynatrace.sdk.server.testautomation.models.TestCategory sdkTestCategory) {""], [135, ""\tpublic static TestStatus convertTestStatus(com.dynatrace.sdk.server.testautomation.models.TestStatus sdkTestStatus) {""], [184, ""\t\tupdateBuildVariables(build, Collections.<ParameterValue>singletonList(new StringParameterValue(key, value)));""]]}"	135
CVE-2014-8152	GHSA-w7cq-j9p9-hm3m	org.apache.santuario:xmlsec	2.0.0	2.0.2	2.0.3	https://github.com/apache/santuario-xml-security-java	3d7086c603a4538933dfa98d697d0df4539a984f	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/before/jar/xmlsec-2.0.2.jar	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/after/jar/xmlsec-2.0.3.jar	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/before/java/src/main/java/org/apache/xml/security/stax/impl/InputProcessorChainImpl.java	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/after/java/src/main/java/org/apache/xml/security/stax/impl/InputProcessorChainImpl.java	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/before/class/src/main/java/org/apache/xml/security/stax/impl/InputProcessorChainImpl.class	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/after/class/src/main/java/org/apache/xml/security/stax/impl/InputProcessorChainImpl.class	InputProcessorChainImpl	[InputProcessorChainImpl::createSubChain, InputProcessorChainImpl::createSubChain]	org.apache.xml.security.stax.impl	org.apache.xml.security.stax.impl	"{""added"": [[203, ""        return createSubChain(inputProcessor, true);""], [204, ""    }""], [205, """"], [206, ""    @Override""], [207, ""    public InputProcessorChain createSubChain(InputProcessor inputProcessor, boolean clone) throws XMLStreamException, XMLSecurityException {""], [210, ""            final DocumentContextImpl docContext = clone ? documentContext.clone() : documentContext;""], [211, ""            inputProcessorChain = new InputProcessorChainImpl(inboundSecurityContext, docContext,""]], ""deleted"": [[205, ""            inputProcessorChain = new InputProcessorChainImpl(inboundSecurityContext, documentContext.clone(),""]]}"	166
CVE-2014-8152	GHSA-w7cq-j9p9-hm3m	org.apache.santuario:xmlsec	2.0.0	2.0.2	2.0.3	https://github.com/apache/santuario-xml-security-java	3d7086c603a4538933dfa98d697d0df4539a984f	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/before/jar/xmlsec-2.0.2.jar	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/after/jar/xmlsec-2.0.3.jar	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/before/java/src/main/java/org/apache/xml/security/stax/impl/processor/input/XMLSecurityInputProcessor.java	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/after/java/src/main/java/org/apache/xml/security/stax/impl/processor/input/XMLSecurityInputProcessor.java	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/before/class/src/main/java/org/apache/xml/security/stax/impl/processor/input/XMLSecurityInputProcessor.class	proc/changes/CVE-2014-8152/3d7086c603a4538933dfa98d697d0df4539a984f/after/class/src/main/java/org/apache/xml/security/stax/impl/processor/input/XMLSecurityInputProcessor.class	XMLSecurityInputProcessor	[XMLSecurityInputProcessor::processNextEvent]	org.apache.xml.security.stax.impl.processor.input	org.apache.xml.security.stax.impl.processor.input	"{""added"": [[141, ""                    InputProcessorChain subInputProcessorChain = inputProcessorChain.createSubChain(this, false);""], [146, """"], [147, ""                    // copy all processor back to main chain for finalization""], [148, ""                    inputProcessorChain.getProcessors().clear();""], [149, ""                    inputProcessorChain.getProcessors().addAll(subInputProcessorChain.getProcessors());""]], ""deleted"": [[141, ""                    InputProcessorChain subInputProcessorChain = inputProcessorChain.createSubChain(this);""]]}"	153
CVE-2016-10750	GHSA-jv65-pf7v-f7p8	com.hazelcast:hazelcast	0	3.11-BETA-1	3.11	https://github.com/hazelcast/hazelcast	5a47697519018eb4918df33a21faae811e85f01a	proc/changes/CVE-2016-10750/5a47697519018eb4918df33a21faae811e85f01a/before/jar/hazelcast-3.11-BETA-1.jar	proc/changes/CVE-2016-10750/5a47697519018eb4918df33a21faae811e85f01a/after/jar/hazelcast-3.11.jar	proc/changes/CVE-2016-10750/5a47697519018eb4918df33a21faae811e85f01a/before/java/hazelcast/src/main/java/com/hazelcast/config/ConfigXmlGenerator.java	proc/changes/CVE-2016-10750/5a47697519018eb4918df33a21faae811e85f01a/after/java/hazelcast/src/main/java/com/hazelcast/config/ConfigXmlGenerator.java	proc/changes/CVE-2016-10750/5a47697519018eb4918df33a21faae811e85f01a/before/class/hazelcast/src/main/java/com/hazelcast/config/ConfigXmlGenerator.class	proc/changes/CVE-2016-10750/5a47697519018eb4918df33a21faae811e85f01a/after/class/hazelcast/src/main/java/com/hazelcast/config/ConfigXmlGenerator.class	ConfigXmlGenerator	[ConfigXmlGenerator::serializationXmlGenerator, ConfigXmlGenerator::appendFilterList]	com.hazelcast.config	com.hazelcast.config	"{""added"": [[403, ""        gen.node(\""check-class-def-errors\"", c.isCheckClassDefErrors());""], [404, ""        JavaSerializationFilterConfig javaSerializationFilterConfig = c.getJavaSerializationFilterConfig();""], [405, ""        if (javaSerializationFilterConfig != null) {""], [406, ""            gen.open(\""java-serialization-filter\"");""], [407, ""            appendFilterList(gen, \""blacklist\"", javaSerializationFilterConfig.getBlacklist());""], [408, ""            appendFilterList(gen, \""whitelist\"", javaSerializationFilterConfig.getWhitelist());""], [409, ""            gen.close();""], [410, ""        }""], [411, ""        gen.close();""], [1408, ""    private static void appendFilterList(XmlGenerator gen, String listName, ClassFilter classFilterList) {""], [1409, ""        if (classFilterList.isEmpty()) {""], [1410, ""            return;""], [1411, ""        }""], [1412, ""        gen.open(listName);""], [1413, ""        for (String className : classFilterList.getClasses()) {""], [1414, ""            gen.node(\""class\"", className);""], [1415, ""        }""], [1416, ""        for (String packageName : classFilterList.getPackages()) {""], [1417, ""            gen.node(\""package\"", packageName);""], [1418, ""        }""], [1419, ""        gen.close();""], [1420, ""    }""], [1421, """"]], ""deleted"": [[403, ""        gen.node(\""check-class-def-errors\"", c.isCheckClassDefErrors())""], [404, ""                .close();""]]}"	1301
CVE-2013-1879	GHSA-mfhr-3xmc-r2gg	org.apache.activemq:activemq-client	0	5.8.0	5.9.0	https://git-wip-us.apache.org/repos/asf/activemq	148ca81dcd8f14cfe2ff37012fd1aa42518f02dc	proc/changes/CVE-2013-1879/148ca81dcd8f14cfe2ff37012fd1aa42518f02dc/before/jar/activemq-client-5.8.0.jar	proc/changes/CVE-2013-1879/148ca81dcd8f14cfe2ff37012fd1aa42518f02dc/after/jar/activemq-client-5.9.0.jar	proc/changes/CVE-2013-1879/148ca81dcd8f14cfe2ff37012fd1aa42518f02dc/before/java/activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.java	proc/changes/CVE-2013-1879/148ca81dcd8f14cfe2ff37012fd1aa42518f02dc/after/java/activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.java	proc/changes/CVE-2013-1879/148ca81dcd8f14cfe2ff37012fd1aa42518f02dc/before/class/activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.class	proc/changes/CVE-2013-1879/148ca81dcd8f14cfe2ff37012fd1aa42518f02dc/after/class/activemq-client/src/main/java/org/apache/activemq/broker/scheduler/CronParser.class	CronParser	[CronParser::getNextScheduledTime]	org.apache.activemq.broker.scheduler	org.apache.activemq.broker.scheduler	"{""added"": [[45, ""        if (cronEntry.equals(\""* * * * *\"")) {""]], ""deleted"": [[45, ""        if (cronEntry.startsWith(\""* * * * *\"")) {""]]}"	256
CVE-2017-1000487	GHSA-8vhq-qq4p-grq3	org.codehaus.plexus:plexus-utils	0	3.0.15	3.0.16	https://github.com/codehaus-plexus/plexus-utils	b38a1b3a4352303e4312b2bb601a0d7ec6e28f41	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/jar/plexus-utils-3.0.15.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/jar/plexus-utils-3.0.16.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/java/src/main/java/org/codehaus/plexus/util/cli/Commandline.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/java/src/main/java/org/codehaus/plexus/util/cli/Commandline.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/class/src/main/java/org/codehaus/plexus/util/cli/Commandline.class	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/class/src/main/java/org/codehaus/plexus/util/cli/Commandline.class	Commandline	[Commandline::execute, Commandline::getLiteralExecutable, Commandline::verifyShellState, Commandline::getCommandline]	org.codehaus.plexus.util.cli	org.codehaus.plexus.util.cli	"{""added"": [[142, ""     * Shell usage is only desirable when generating code for remote execution.""], [143, ""     *""], [172, ""     *""], [173, ""     * Shell usage is only desirable when generating code for remote execution.""], [181, ""     * Create a new command line object, given a command following POSIX sh quoting rules""], [258, ""                realPos = ( getLiteralExecutable() == null ? 0 : 1 );""], [409, ""    /**""], [410, ""     * @return Executable to be run, as a literal string (no shell quoting/munging)""], [411, ""     */""], [412, ""    public String getLiteralExecutable()""], [413, ""    {""], [414, ""        return executable;""], [415, ""    }""], [416, """"], [417, ""    /**""], [418, ""     * Return an executable name, quoted for shell use.""], [419, ""     *""], [420, ""     * Shell usage is only desirable when generating code for remote execution.""], [421, ""     *""], [422, ""     * @return Executable to be run, quoted for shell interpretation""], [423, ""     */""], [503, ""        String executable = getLiteralExecutable();""], [517, ""     *""], [518, ""     * Shell usage is only desirable when generating code for remote execution.""], [655, ""                process = Runtime.getRuntime().exec( getCommandline(), environment, workingDir );""], [670, ""                process = Runtime.getRuntime().exec( getCommandline(), environment, workingDir );""], [691, ""        if ( shell.getOriginalExecutable() == null )""], [706, ""     * Shell usage is only desirable when generating code for remote execution.""], [707, ""     *""], [719, ""     * Shell usage is only desirable when generating code for remote execution.""]], ""deleted"": [[177, ""     * Create a new command line object.""], [178, ""     * Shell is autodetected from operating system""], [206, ""     * Shell is autodetected from operating system""], [256, ""                realPos = ( getExecutable() == null ? 0 : 1 );""], [486, ""        String executable = getExecutable();""], [636, ""                process = Runtime.getRuntime().exec( getShellCommandline(), environment );""], [651, ""                process = Runtime.getRuntime().exec( getShellCommandline(), environment, workingDir );""], [672, ""        if ( shell.getExecutable() == null )""]]}"	437
CVE-2017-1000487	GHSA-8vhq-qq4p-grq3	org.codehaus.plexus:plexus-utils	0	3.0.15	3.0.16	https://github.com/codehaus-plexus/plexus-utils	b38a1b3a4352303e4312b2bb601a0d7ec6e28f41	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/jar/plexus-utils-3.0.15.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/jar/plexus-utils-3.0.16.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/java/src/main/java/org/codehaus/plexus/util/cli/Commandline.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/java/src/main/java/org/codehaus/plexus/util/cli/Commandline.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/class/src/main/java/org/codehaus/plexus/util/cli/Commandline$Marker.class	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/class/src/main/java/org/codehaus/plexus/util/cli/Commandline$Marker.class	Commandline$Marker	[Commandline::Marker::getPosition]	org.codehaus.plexus.util.cli	org.codehaus.plexus.util.cli	"{""added"": [[142, ""     * Shell usage is only desirable when generating code for remote execution.""], [143, ""     *""], [172, ""     *""], [173, ""     * Shell usage is only desirable when generating code for remote execution.""], [181, ""     * Create a new command line object, given a command following POSIX sh quoting rules""], [258, ""                realPos = ( getLiteralExecutable() == null ? 0 : 1 );""], [409, ""    /**""], [410, ""     * @return Executable to be run, as a literal string (no shell quoting/munging)""], [411, ""     */""], [412, ""    public String getLiteralExecutable()""], [413, ""    {""], [414, ""        return executable;""], [415, ""    }""], [416, """"], [417, ""    /**""], [418, ""     * Return an executable name, quoted for shell use.""], [419, ""     *""], [420, ""     * Shell usage is only desirable when generating code for remote execution.""], [421, ""     *""], [422, ""     * @return Executable to be run, quoted for shell interpretation""], [423, ""     */""], [503, ""        String executable = getLiteralExecutable();""], [517, ""     *""], [518, ""     * Shell usage is only desirable when generating code for remote execution.""], [655, ""                process = Runtime.getRuntime().exec( getCommandline(), environment, workingDir );""], [670, ""                process = Runtime.getRuntime().exec( getCommandline(), environment, workingDir );""], [691, ""        if ( shell.getOriginalExecutable() == null )""], [706, ""     * Shell usage is only desirable when generating code for remote execution.""], [707, ""     *""], [719, ""     * Shell usage is only desirable when generating code for remote execution.""]], ""deleted"": [[177, ""     * Create a new command line object.""], [178, ""     * Shell is autodetected from operating system""], [206, ""     * Shell is autodetected from operating system""], [256, ""                realPos = ( getExecutable() == null ? 0 : 1 );""], [486, ""        String executable = getExecutable();""], [636, ""                process = Runtime.getRuntime().exec( getShellCommandline(), environment );""], [651, ""                process = Runtime.getRuntime().exec( getShellCommandline(), environment, workingDir );""], [672, ""        if ( shell.getExecutable() == null )""]]}"	437
CVE-2017-1000487	GHSA-8vhq-qq4p-grq3	org.codehaus.plexus:plexus-utils	0	3.0.15	3.0.16	https://github.com/codehaus-plexus/plexus-utils	b38a1b3a4352303e4312b2bb601a0d7ec6e28f41	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/jar/plexus-utils-3.0.15.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/jar/plexus-utils-3.0.16.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/java/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/java/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/class/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.class	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/class/src/main/java/org/codehaus/plexus/util/cli/shell/BourneShell.class	BourneShell	[BourneShell::BourneShell, BourneShell::BourneShell, BourneShell::getExecutable, BourneShell::quoteOneItem, BourneShell::getQuotingTriggerChars, BourneShell::getExecutionPreamble, BourneShell::unifyQuotes]	org.codehaus.plexus.util.cli.shell	org.codehaus.plexus.util.cli.shell	"{""added"": [[34, ""        this(false);""], [39, ""        setUnconditionalQuoting( true );""], [42, ""        setExecutableQuoteDelimiter( '\\'' );""], [62, ""        return quoteOneItem( super.getOriginalExecutable(), true );""], [112, ""        sb.append( quoteOneItem( dir, false ) );""], [122, ""     * BourneShell.quoteOneItem(null)                       = null""], [123, ""     * BourneShell.quoteOneItem(\""\"")                         = ''""], [124, ""     * BourneShell.quoteOneItem(\""/test/quotedpath'abc\"")     = '/test/quotedpath'\""'\""'abc'""], [125, ""     * BourneShell.quoteOneItem(\""/test/quoted path'abc\"")    = '/test/quoted pat'\""'\""'habc'""], [126, ""     * BourneShell.quoteOneItem(\""/test/quotedpath\\\""abc\"")    = '/test/quotedpath\""abc'""], [127, ""     * BourneShell.quoteOneItem(\""/test/quoted path\\\""abc\"")   = '/test/quoted path\""abc'""], [128, ""     * BourneShell.quoteOneItem(\""/test/quotedpath\\\""'abc\"")   = '/test/quotedpath\""'\""'\""'abc'""], [129, ""     * BourneShell.quoteOneItem(\""/test/quoted path\\\""'abc\"")  = '/test/quoted path\""'\""'\""'abc'""], [135, ""    protected String quoteOneItem( String path, boolean isExecutable )""], [142, ""        StringBuilder sb = new StringBuilder();""], [143, ""        sb.append( \""'\"" );""], [144, ""        sb.append( path.replace( \""'\"", \""'\\\""'\\\""'\"" ) );""], [145, ""        sb.append( \""'\"" );""], [147, ""        return sb.toString();""]], ""deleted"": [[20, ""import org.codehaus.plexus.util.StringUtils;""], [32, ""    private static final char[] BASH_QUOTING_TRIGGER_CHARS = {""], [33, ""        ' ',""], [34, ""        '$',""], [35, ""        ';',""], [36, ""        '&',""], [37, ""        '|',""], [38, ""        '<',""], [39, ""        '>',""], [40, ""        '*',""], [41, ""        '?',""], [42, ""        '(',""], [43, ""        ')',""], [44, ""        '[',""], [45, ""        ']',""], [46, ""        '{',""], [47, ""        '}',""], [48, ""        '`' };""], [52, ""        this( false );""], [59, ""        setExecutableQuoteDelimiter( '\\\""' );""], [79, ""        return unifyQuotes( super.getExecutable());""], [129, ""        sb.append( unifyQuotes( dir ) );""], [135, ""    protected char[] getQuotingTriggerChars()""], [136, ""    {""], [137, ""        return BASH_QUOTING_TRIGGER_CHARS;""], [138, ""    }""], [139, """"], [144, ""     * BourneShell.unifyQuotes(null)                       = null""], [145, ""     * BourneShell.unifyQuotes(\""\"")                         = (empty)""], [146, ""     * BourneShell.unifyQuotes(\""/test/quotedpath'abc\"")     = /test/quotedpath\\'abc""], [147, ""     * BourneShell.unifyQuotes(\""/test/quoted path'abc\"")    = \""/test/quoted path'abc\""""], [148, ""     * BourneShell.unifyQuotes(\""/test/quotedpath\\\""abc\"")    = \""/test/quotedpath\\\""abc\""""], [149, ""     * BourneShell.unifyQuotes(\""/test/quoted path\\\""abc\"")   = \""/test/quoted path\\\""abc\""""], [150, ""     * BourneShell.unifyQuotes(\""/test/quotedpath\\\""'abc\"")   = \""/test/quotedpath\\\""'abc\""""], [151, ""     * BourneShell.unifyQuotes(\""/test/quoted path\\\""'abc\"")  = \""/test/quoted path\\\""'abc\""""], [157, ""    protected static String unifyQuotes( String path )""], [164, ""        if ( path.indexOf( \"" \"" ) == -1 && path.indexOf( \""'\"" ) != -1 && path.indexOf( \""\\\""\"" ) == -1 )""], [165, ""        {""], [166, ""            return StringUtils.escape( path );""], [167, ""        }""], [169, ""        return StringUtils.quoteAndEscape( path, '\\\""', BASH_QUOTING_TRIGGER_CHARS );""]]}"	87
CVE-2017-1000487	GHSA-8vhq-qq4p-grq3	org.codehaus.plexus:plexus-utils	0	3.0.15	3.0.16	https://github.com/codehaus-plexus/plexus-utils	b38a1b3a4352303e4312b2bb601a0d7ec6e28f41	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/jar/plexus-utils-3.0.15.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/jar/plexus-utils-3.0.16.jar	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/java/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/java/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.java	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/before/class/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.class	proc/changes/CVE-2017-1000487/b38a1b3a4352303e4312b2bb601a0d7ec6e28f41/after/class/src/main/java/org/codehaus/plexus/util/cli/shell/Shell.class	Shell	[Shell::getShellCommandLine, Shell::setUnconditionalQuoting, Shell::getRawCommandLine, Shell::quoteOneItem]	org.codehaus.plexus.util.cli.shell	org.codehaus.plexus.util.cli.shell	"{""added"": [[51, ""    private boolean unconditionallyQuote = false;""], [52, """"], [73, ""    /**""], [74, ""     * Toggle unconditional quoting""], [75, ""     *""], [76, ""     * @param unconditionallyQuote""], [77, ""     */""], [78, ""    public void setUnconditionalQuoting(boolean unconditionallyQuote)""], [79, ""    {""], [80, ""        this.unconditionallyQuote = unconditionallyQuote;""], [81, ""    }""], [82, """"], [144, ""    protected String quoteOneItem(String inputString, boolean isExecutable)""], [145, ""    {""], [146, ""        char[] escapeChars = getEscapeChars( isSingleQuotedExecutableEscaped(), isDoubleQuotedExecutableEscaped() );""], [147, ""        return StringUtils.quoteAndEscape(""], [148, ""            inputString,""], [149, ""            isExecutable ? getExecutableQuoteDelimiter() : getArgumentQuoteDelimiter(),""], [150, ""            escapeChars,""], [151, ""            getQuotingTriggerChars(),""], [152, ""            '\\\\',""], [153, ""            unconditionallyQuote""], [154, ""        );""], [155, ""    }""], [156, """"], [172, ""                sb.append( quoteOneItem( getOriginalExecutable(), true ) );""], [188, ""                sb.append( quoteOneItem( arguments[i], false ) );""], [302, ""        commandLine.addAll( getCommandLine( getOriginalExecutable(), arguments ) );""]], ""deleted"": [[147, ""                char[] escapeChars = getEscapeChars( isSingleQuotedExecutableEscaped(), isDoubleQuotedExecutableEscaped() );""], [148, """"], [149, ""                sb.append( StringUtils.quoteAndEscape( getExecutable(), getExecutableQuoteDelimiter(), escapeChars, getQuotingTriggerChars(), '\\\\', false ) );""], [165, ""                char[] escapeChars = getEscapeChars( isSingleQuotedArgumentEscaped(), isDoubleQuotedArgumentEscaped() );""], [166, """"], [167, ""                sb.append( StringUtils.quoteAndEscape( arguments[i], getArgumentQuoteDelimiter(), escapeChars, getQuotingTriggerChars(), getArgumentEscapePattern(), false ) );""], [281, ""        commandLine.addAll( getCommandLine( getExecutable(), arguments ) );""]]}"	277
CVE-2018-1002201	GHSA-qcf3-9vmh-xw4r	org.zeroturnaround:zt-zip	0	1.12	1.13	https://github.com/zeroturnaround/zt-zip	759b72f33bc8f4d69f84f09fcb7f010ad45d6fff	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/before/jar/zt-zip-1.12.jar	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/after/jar/zt-zip-1.13.jar	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/before/java/src/main/java/org/zeroturnaround/zip/ZipUtil.java	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/after/java/src/main/java/org/zeroturnaround/zip/ZipUtil.java	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/before/class/src/main/java/org/zeroturnaround/zip/ZipUtil$BackslashUnpacker.class	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/after/class/src/main/java/org/zeroturnaround/zip/ZipUtil$BackslashUnpacker.class	ZipUtil$BackslashUnpacker	[ZipUtil::BackslashUnpacker::process]	org.zeroturnaround.zip	org.zeroturnaround.zip	"{""added"": [[1153, """"], [1154, ""        /* If we see the relative traversal string of \""..\"" we need to make sure""], [1155, ""         * that the outputdir + name doesn't leave the outputdir. See""], [1156, ""         * DirectoryTraversalMaliciousTest for details.""], [1157, ""         */""], [1158, ""        if (name.indexOf(\""..\"") != -1 && !file.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1159, ""          throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1160, ""        }""], [1161, """"], [1230, """"], [1231, ""          /* If we see the relative traversal string of \""..\"" we need to make sure""], [1232, ""           * that the outputdir + name doesn't leave the outputdir. See""], [1233, ""           * DirectoryTraversalMaliciousTest for details.""], [1234, ""           */""], [1235, ""          if (name.indexOf(\""..\"") != -1 && !destFile.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1236, ""            throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1237, ""          }""], [1238, """"], [1244, """"], [1245, ""          /* If we see the relative traversal string of \""..\"" we need to make sure""], [1246, ""           * that the outputdir + name doesn't leave the outputdir. See""], [1247, ""           * DirectoryTraversalMaliciousTest for details.""], [1248, ""           */""], [1249, ""          if (name.indexOf(\""..\"") != -1 && !destFile.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1250, ""            throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1251, ""          }""], [1252, """"], [1288, """"], [1289, ""        /* If we see the relative traversal string of \""..\"" we need to make sure""], [1290, ""         * that the outputdir + name doesn't leave the outputdir. See""], [1291, ""         * DirectoryTraversalMaliciousTest for details.""], [1292, ""         */""], [1293, ""        if (name.indexOf(\""..\"") != -1 && !file.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1294, ""          throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1295, ""        }""], [1296, """"]], ""deleted"": []}"	1576
CVE-2018-1002201	GHSA-qcf3-9vmh-xw4r	org.zeroturnaround:zt-zip	0	1.12	1.13	https://github.com/zeroturnaround/zt-zip	759b72f33bc8f4d69f84f09fcb7f010ad45d6fff	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/before/jar/zt-zip-1.12.jar	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/after/jar/zt-zip-1.13.jar	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/before/java/src/main/java/org/zeroturnaround/zip/ZipUtil.java	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/after/java/src/main/java/org/zeroturnaround/zip/ZipUtil.java	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/before/class/src/main/java/org/zeroturnaround/zip/ZipUtil$Unpacker.class	proc/changes/CVE-2018-1002201/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff/after/class/src/main/java/org/zeroturnaround/zip/ZipUtil$Unpacker.class	ZipUtil$Unpacker	[ZipUtil::Unpacker::process]	org.zeroturnaround.zip	org.zeroturnaround.zip	"{""added"": [[1153, """"], [1154, ""        /* If we see the relative traversal string of \""..\"" we need to make sure""], [1155, ""         * that the outputdir + name doesn't leave the outputdir. See""], [1156, ""         * DirectoryTraversalMaliciousTest for details.""], [1157, ""         */""], [1158, ""        if (name.indexOf(\""..\"") != -1 && !file.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1159, ""          throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1160, ""        }""], [1161, """"], [1230, """"], [1231, ""          /* If we see the relative traversal string of \""..\"" we need to make sure""], [1232, ""           * that the outputdir + name doesn't leave the outputdir. See""], [1233, ""           * DirectoryTraversalMaliciousTest for details.""], [1234, ""           */""], [1235, ""          if (name.indexOf(\""..\"") != -1 && !destFile.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1236, ""            throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1237, ""          }""], [1238, """"], [1244, """"], [1245, ""          /* If we see the relative traversal string of \""..\"" we need to make sure""], [1246, ""           * that the outputdir + name doesn't leave the outputdir. See""], [1247, ""           * DirectoryTraversalMaliciousTest for details.""], [1248, ""           */""], [1249, ""          if (name.indexOf(\""..\"") != -1 && !destFile.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1250, ""            throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1251, ""          }""], [1252, """"], [1288, """"], [1289, ""        /* If we see the relative traversal string of \""..\"" we need to make sure""], [1290, ""         * that the outputdir + name doesn't leave the outputdir. See""], [1291, ""         * DirectoryTraversalMaliciousTest for details.""], [1292, ""         */""], [1293, ""        if (name.indexOf(\""..\"") != -1 && !file.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {""], [1294, ""          throw new ZipException(\""The file \""+name+\"" is trying to leave the target output directory of \""+outputDir+\"". Ignoring this file.\"");""], [1295, ""        }""], [1296, """"]], ""deleted"": []}"	1576
CVE-2013-6407	GHSA-998j-j6v9-5846	org.apache.solr:solr-core	0	4.0.0	4.1.0	https://git-wip-us.apache.org/repos/asf/lucene-solr	f230486ce6707762c1a6e81655d0fac52887906d	proc/changes/CVE-2013-6407/f230486ce6707762c1a6e81655d0fac52887906d/before/jar/solr-core-4.0.0.jar	proc/changes/CVE-2013-6407/f230486ce6707762c1a6e81655d0fac52887906d/after/jar/solr-core-4.1.0.jar	proc/changes/CVE-2013-6407/f230486ce6707762c1a6e81655d0fac52887906d/before/java/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java	proc/changes/CVE-2013-6407/f230486ce6707762c1a6e81655d0fac52887906d/after/java/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java	proc/changes/CVE-2013-6407/f230486ce6707762c1a6e81655d0fac52887906d/before/class/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.class	proc/changes/CVE-2013-6407/f230486ce6707762c1a6e81655d0fac52887906d/after/class/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.class	XMLLoader	[XMLLoader::load, XMLLoader::init]	org.apache.solr.handler.loader	org.apache.solr.handler.loader	"{""added"": [[40, ""import org.apache.solr.util.EmptyEntityResolver;""], [45, ""import org.xml.sax.XMLReader;""], [57, ""import javax.xml.parsers.SAXParserFactory;""], [78, ""  SAXParserFactory saxFactory;""], [82, ""    // Init StAX parser:""], [84, ""    EmptyEntityResolver.configureXMLInputFactory(inputFactory);""], [85, ""    inputFactory.setXMLReporter(xmllog);""], [94, ""    } catch (IllegalArgumentException ex) {""], [99, """"], [100, ""    // Init SAX parser (for XSL):""], [101, ""    saxFactory = SAXParserFactory.newInstance();""], [102, ""    saxFactory.setNamespaceAware(true); // XSL needs this!""], [103, ""    EmptyEntityResolver.configureSAXParserFactory(saxFactory);""], [126, ""      final Transformer t = getTransformer(tr,req);""], [135, ""        final XMLReader xmlr = saxFactory.newSAXParser().getXMLReader();""], [136, ""        xmlr.setErrorHandler(xmllog);""], [137, ""        xmlr.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);""], [138, ""        final SAXSource source = new SAXSource(xmlr, isrc);""], [145, ""      // second step: feed the intermediate DOM tree into StAX parser:""]], ""deleted"": [[87, ""    }""], [88, ""    catch (IllegalArgumentException ex) {""], [93, ""    inputFactory.setXMLReporter(xmllog);""], [116, ""      Transformer t = getTransformer(tr,req);""], [125, ""        final SAXSource source = new SAXSource(isrc);""], [132, ""      // second step feed the intermediate DOM tree into StAX parser:""]]}"	334
CVE-2017-9803	GHSA-f553-j2gv-g5r9	org.apache.solr:solr-core	6.2.0	6.6.0	6.6.1	https://github.com/apache/lucene-solr	b091934f9e98568b848d0584a1145c8e514cbd21	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/jar/solr-core-6.6.0.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/jar/solr-core-6.6.1.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/java/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/java/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/class/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter$SolrZkToCuratorCredentialsACLs.class	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/class/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter$SolrZkToCuratorCredentialsACLs.class	DelegationTokenKerberosFilter$SolrZkToCuratorCredentialsACLs	[DelegationTokenKerberosFilter::SolrZkToCuratorCredentialsACLs::createACLProvider, DelegationTokenKerberosFilter::SolrZkToCuratorCredentialsACLs::SolrZkToCuratorCredentialsACLs]	org.apache.solr.security	org.apache.solr.security	"{""added"": [[49, ""import org.apache.zookeeper.CreateMode;""], [50, ""import org.apache.zookeeper.KeeperException;""], [70, ""      try {""], [71, ""        conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [72, ""            getCuratorClient(zkClient));""], [73, ""      } catch (InterruptedException | KeeperException e) {""], [74, ""        throw new ServletException(e);""], [75, ""      }""], [156, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) throws InterruptedException, KeeperException {""], [170, ""    // Create /security znode upfront. Without this, the curator framework creates this directory path""], [171, ""    // without the appropriate ACL configuration. This issue is possibly related to HADOOP-11973""], [172, ""    try {""], [173, ""      zkClient.makePath(SecurityAwareZkACLProvider.SECURITY_ZNODE_PATH, CreateMode.PERSISTENT, true);""], [174, """"], [175, ""    } catch (KeeperException ex) {""], [176, ""      if (ex.code() != KeeperException.Code.NODEEXISTS) {""], [177, ""        throw ex;""], [178, ""      }""], [179, ""    }""], [180, """"], [198, ""    private final String zkChroot;""], [205, ""      String zkHost = zkClient.getZkServerAddress();""], [206, ""      this.zkChroot = zkHost.contains(\""/\"")? zkHost.substring(zkHost.indexOf(\""/\"")): null;""], [222, ""          List<ACL> acls = null;""], [223, """"], [224, ""          // The logic in SecurityAwareZkACLProvider does not work when""], [225, ""          // the Solr zkPath is chrooted (e.g. /solr instead of /). This""], [226, ""          // due to the fact that the getACLsToAdd(..) callback provides""], [227, ""          // an absolute path (instead of relative path to the chroot) and""], [228, ""          // the string comparison in SecurityAwareZkACLProvider fails.""], [229, ""          if (zkACLProvider instanceof SecurityAwareZkACLProvider && zkChroot != null) {""], [230, ""            acls = zkACLProvider.getACLsToAdd(path.replace(zkChroot, \""\""));""], [231, ""          } else {""], [232, ""            acls = zkACLProvider.getACLsToAdd(path);""], [233, ""          }""], [234, """"], [235, ""          return acls;""]], ""deleted"": [[68, ""      conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [69, ""          getCuratorClient(zkClient));""], [150, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) {""], [202, ""           List<ACL> acls = zkACLProvider.getACLsToAdd(path);""], [203, ""           return acls;""]]}"	183
CVE-2017-9803	GHSA-f553-j2gv-g5r9	org.apache.solr:solr-core	6.2.0	6.6.0	6.6.1	https://github.com/apache/lucene-solr	b091934f9e98568b848d0584a1145c8e514cbd21	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/jar/solr-core-6.6.0.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/jar/solr-core-6.6.1.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/java/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/java/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/class/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.class	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/class/solr/core/src/java/org/apache/solr/security/DelegationTokenKerberosFilter.class	DelegationTokenKerberosFilter	[DelegationTokenKerberosFilter::getCuratorClient, DelegationTokenKerberosFilter::init]	org.apache.solr.security	org.apache.solr.security	"{""added"": [[49, ""import org.apache.zookeeper.CreateMode;""], [50, ""import org.apache.zookeeper.KeeperException;""], [70, ""      try {""], [71, ""        conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [72, ""            getCuratorClient(zkClient));""], [73, ""      } catch (InterruptedException | KeeperException e) {""], [74, ""        throw new ServletException(e);""], [75, ""      }""], [156, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) throws InterruptedException, KeeperException {""], [170, ""    // Create /security znode upfront. Without this, the curator framework creates this directory path""], [171, ""    // without the appropriate ACL configuration. This issue is possibly related to HADOOP-11973""], [172, ""    try {""], [173, ""      zkClient.makePath(SecurityAwareZkACLProvider.SECURITY_ZNODE_PATH, CreateMode.PERSISTENT, true);""], [174, """"], [175, ""    } catch (KeeperException ex) {""], [176, ""      if (ex.code() != KeeperException.Code.NODEEXISTS) {""], [177, ""        throw ex;""], [178, ""      }""], [179, ""    }""], [180, """"], [198, ""    private final String zkChroot;""], [205, ""      String zkHost = zkClient.getZkServerAddress();""], [206, ""      this.zkChroot = zkHost.contains(\""/\"")? zkHost.substring(zkHost.indexOf(\""/\"")): null;""], [222, ""          List<ACL> acls = null;""], [223, """"], [224, ""          // The logic in SecurityAwareZkACLProvider does not work when""], [225, ""          // the Solr zkPath is chrooted (e.g. /solr instead of /). This""], [226, ""          // due to the fact that the getACLsToAdd(..) callback provides""], [227, ""          // an absolute path (instead of relative path to the chroot) and""], [228, ""          // the string comparison in SecurityAwareZkACLProvider fails.""], [229, ""          if (zkACLProvider instanceof SecurityAwareZkACLProvider && zkChroot != null) {""], [230, ""            acls = zkACLProvider.getACLsToAdd(path.replace(zkChroot, \""\""));""], [231, ""          } else {""], [232, ""            acls = zkACLProvider.getACLsToAdd(path);""], [233, ""          }""], [234, """"], [235, ""          return acls;""]], ""deleted"": [[68, ""      conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [69, ""          getCuratorClient(zkClient));""], [150, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) {""], [202, ""           List<ACL> acls = zkACLProvider.getACLsToAdd(path);""], [203, ""           return acls;""]]}"	183
CVE-2017-9803	GHSA-f553-j2gv-g5r9	org.apache.solr:solr-core	6.2.0	6.6.0	6.6.1	https://github.com/apache/lucene-solr	b091934f9e98568b848d0584a1145c8e514cbd21	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/jar/solr-core-6.6.0.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/jar/solr-core-6.6.1.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/java/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/java/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/class/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter$SolrZkToCuratorCredentialsACLs.class	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/class/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter$SolrZkToCuratorCredentialsACLs.class	HadoopAuthFilter$SolrZkToCuratorCredentialsACLs	[HadoopAuthFilter::SolrZkToCuratorCredentialsACLs::SolrZkToCuratorCredentialsACLs, HadoopAuthFilter::SolrZkToCuratorCredentialsACLs::createACLProvider]	org.apache.solr.security	org.apache.solr.security	"{""added"": [[46, ""import org.apache.zookeeper.CreateMode;""], [47, ""import org.apache.zookeeper.KeeperException;""], [67, ""      try {""], [68, ""        conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [69, ""            getCuratorClient(zkClient));""], [70, ""      } catch (KeeperException | InterruptedException e) {""], [71, ""        throw new ServletException(e);""], [72, ""      }""], [134, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) throws KeeperException, InterruptedException {""], [148, ""    // Create /security znode upfront. Without this, the curator framework creates this directory path""], [149, ""    // without the appropriate ACL configuration. This issue is possibly related to HADOOP-11973""], [150, ""    try {""], [151, ""      zkClient.makePath(SecurityAwareZkACLProvider.SECURITY_ZNODE_PATH, CreateMode.PERSISTENT, true);""], [152, """"], [153, ""    } catch (KeeperException ex) {""], [154, ""      if (ex.code() != KeeperException.Code.NODEEXISTS) {""], [155, ""        throw ex;""], [156, ""      }""], [157, ""    }""], [158, """"], [176, ""    private final String zkChroot;""], [183, ""      String zkHost = zkClient.getZkServerAddress();""], [184, ""      this.zkChroot = zkHost.contains(\""/\"")? zkHost.substring(zkHost.indexOf(\""/\"")): null;""], [200, ""          List<ACL> acls = null;""], [201, """"], [202, ""          // The logic in SecurityAwareZkACLProvider does not work when""], [203, ""          // the Solr zkPath is chrooted (e.g. /solr instead of /). This""], [204, ""          // due to the fact that the getACLsToAdd(..) callback provides""], [205, ""          // an absolute path (instead of relative path to the chroot) and""], [206, ""          // the string comparison in SecurityAwareZkACLProvider fails.""], [207, ""          if (zkACLProvider instanceof SecurityAwareZkACLProvider && zkChroot != null) {""], [208, ""            acls = zkACLProvider.getACLsToAdd(path.replace(zkChroot, \""\""));""], [209, ""          } else {""], [210, ""            acls = zkACLProvider.getACLsToAdd(path);""], [211, ""          }""], [212, """"], [213, ""          return acls;""]], ""deleted"": [[65, ""      conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [66, ""          getCuratorClient(zkClient));""], [128, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) {""], [180, ""           List<ACL> acls = zkACLProvider.getACLsToAdd(path);""], [181, ""           return acls;""]]}"	165
CVE-2017-9803	GHSA-f553-j2gv-g5r9	org.apache.solr:solr-core	6.2.0	6.6.0	6.6.1	https://github.com/apache/lucene-solr	b091934f9e98568b848d0584a1145c8e514cbd21	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/jar/solr-core-6.6.0.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/jar/solr-core-6.6.1.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/java/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/java/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/class/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.class	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/class/solr/core/src/java/org/apache/solr/security/HadoopAuthFilter.class	HadoopAuthFilter	[HadoopAuthFilter::init, HadoopAuthFilter::getCuratorClient]	org.apache.solr.security	org.apache.solr.security	"{""added"": [[46, ""import org.apache.zookeeper.CreateMode;""], [47, ""import org.apache.zookeeper.KeeperException;""], [67, ""      try {""], [68, ""        conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [69, ""            getCuratorClient(zkClient));""], [70, ""      } catch (KeeperException | InterruptedException e) {""], [71, ""        throw new ServletException(e);""], [72, ""      }""], [134, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) throws KeeperException, InterruptedException {""], [148, ""    // Create /security znode upfront. Without this, the curator framework creates this directory path""], [149, ""    // without the appropriate ACL configuration. This issue is possibly related to HADOOP-11973""], [150, ""    try {""], [151, ""      zkClient.makePath(SecurityAwareZkACLProvider.SECURITY_ZNODE_PATH, CreateMode.PERSISTENT, true);""], [152, """"], [153, ""    } catch (KeeperException ex) {""], [154, ""      if (ex.code() != KeeperException.Code.NODEEXISTS) {""], [155, ""        throw ex;""], [156, ""      }""], [157, ""    }""], [158, """"], [176, ""    private final String zkChroot;""], [183, ""      String zkHost = zkClient.getZkServerAddress();""], [184, ""      this.zkChroot = zkHost.contains(\""/\"")? zkHost.substring(zkHost.indexOf(\""/\"")): null;""], [200, ""          List<ACL> acls = null;""], [201, """"], [202, ""          // The logic in SecurityAwareZkACLProvider does not work when""], [203, ""          // the Solr zkPath is chrooted (e.g. /solr instead of /). This""], [204, ""          // due to the fact that the getACLsToAdd(..) callback provides""], [205, ""          // an absolute path (instead of relative path to the chroot) and""], [206, ""          // the string comparison in SecurityAwareZkACLProvider fails.""], [207, ""          if (zkACLProvider instanceof SecurityAwareZkACLProvider && zkChroot != null) {""], [208, ""            acls = zkACLProvider.getACLsToAdd(path.replace(zkChroot, \""\""));""], [209, ""          } else {""], [210, ""            acls = zkACLProvider.getACLsToAdd(path);""], [211, ""          }""], [212, """"], [213, ""          return acls;""]], ""deleted"": [[65, ""      conf.getServletContext().setAttribute(\""signer.secret.provider.zookeeper.curator.client\"",""], [66, ""          getCuratorClient(zkClient));""], [128, ""  protected CuratorFramework getCuratorClient(SolrZkClient zkClient) {""], [180, ""           List<ACL> acls = zkACLProvider.getACLsToAdd(path);""], [181, ""           return acls;""]]}"	165
CVE-2017-9803	GHSA-f553-j2gv-g5r9	org.apache.solr:solr-core	6.2.0	6.6.0	6.6.1	https://github.com/apache/lucene-solr	b091934f9e98568b848d0584a1145c8e514cbd21	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/jar/solr-core-6.6.0.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/jar/solr-core-6.6.1.jar	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/java/solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/java/solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin.java	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/before/class/solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin.class	proc/changes/CVE-2017-9803/b091934f9e98568b848d0584a1145c8e514cbd21/after/class/solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin.class	HadoopAuthPlugin	[HadoopAuthPlugin::init]	org.apache.solr.security	org.apache.solr.security	"{""added"": [[145, ""      log.error(\""Error initializing \"" + getClass().getSimpleName(), e);""]], ""deleted"": []}"	171
CVE-2014-0168	GHSA-fjhw-8222-g2hg	org.jolokia:jolokia-core	0	1.2.0	1.2.1	https://github.com/rhuss/jolokia	2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/jar/jolokia-core-1.2.0.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/jar/jolokia-core-1.2.1.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/java/agent/core/src/main/java/org/jolokia/backend/BackendManager.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/java/agent/core/src/main/java/org/jolokia/backend/BackendManager.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/class/agent/core/src/main/java/org/jolokia/backend/BackendManager.class	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/class/agent/core/src/main/java/org/jolokia/backend/BackendManager.class	BackendManager	[BackendManager::isOriginAllowed, BackendManager::isCorsAccessAllowed]	org.jolokia.backend	org.jolokia.backend	"{""added"": [[226, ""     * @param pStrictChecking whether to a strict check (i.e. server side check)""], [227, ""     * @return true if if cors access is allowed""], [229, ""    public boolean isOriginAllowed(String pOrigin,boolean pStrictChecking) {""], [230, ""        return restrictor.isOriginAllowed(pOrigin, pStrictChecking);""]], ""deleted"": [[226, ""     * @return true if icors access is allowed""], [228, ""    public boolean isCorsAccessAllowed(String pOrigin) {""], [229, ""        return restrictor.isCorsAccessAllowed(pOrigin);""]]}"	258
CVE-2014-0168	GHSA-fjhw-8222-g2hg	org.jolokia:jolokia-core	0	1.2.0	1.2.1	https://github.com/rhuss/jolokia	2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/jar/jolokia-core-1.2.0.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/jar/jolokia-core-1.2.1.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/java/agent/core/src/main/java/org/jolokia/http/AgentServlet.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/java/agent/core/src/main/java/org/jolokia/http/AgentServlet.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/class/agent/core/src/main/java/org/jolokia/http/AgentServlet.class	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/class/agent/core/src/main/java/org/jolokia/http/AgentServlet.class	AgentServlet	[AgentServlet::getOriginOrReferer, AgentServlet::handle]	org.jolokia.http	org.jolokia.http	"{""added"": [[281, ""            requestHandler.checkAccess(pReq.getRemoteHost(), pReq.getRemoteAddr(),""], [282, ""                                       getOriginOrReferer(pReq));""], [308, ""    private String getOriginOrReferer(HttpServletRequest pReq) {""], [309, ""        String origin = pReq.getHeader(\""Origin\"");""], [310, ""        if (origin == null) {""], [311, ""            origin = pReq.getHeader(\""Referer\"");""], [312, ""        }""], [313, ""        return origin != null ? origin.replaceAll(\""[\\\\n\\\\r]*\"",\""\"") : null;""], [314, ""    }""], [315, """"], [316, """"]], ""deleted"": [[281, ""            requestHandler.checkClientIPAccess(pReq.getRemoteHost(),pReq.getRemoteAddr());""]]}"	327
CVE-2014-0168	GHSA-fjhw-8222-g2hg	org.jolokia:jolokia-core	0	1.2.0	1.2.1	https://github.com/rhuss/jolokia	2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/jar/jolokia-core-1.2.0.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/jar/jolokia-core-1.2.1.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/java/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/java/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/class/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.class	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/class/agent/core/src/main/java/org/jolokia/http/HttpRequestHandler.class	HttpRequestHandler	[HttpRequestHandler::checkClientIPAccess, HttpRequestHandler::extractCorsOrigin, HttpRequestHandler::checkAccess, HttpRequestHandler::handleCorsPreflightRequest]	org.jolokia.http	org.jolokia.http	"{""added"": [[156, ""        if (pOrigin != null && backendManager.isOriginAllowed(pOrigin,false)) {""], [280, ""     * @param pOrigin (optional) origin header to check also.""], [282, ""    public void checkAccess(String pHost, String pAddress, String pOrigin) {""], [286, ""        if (pOrigin != null && !backendManager.isOriginAllowed(pOrigin,true)) {""], [287, ""            throw new SecurityException(\""Origin \"" + pOrigin + \"" is not allowed to call this agent\"");""], [288, ""        }""], [292, ""     * Check whether for the given host is a cross-browser request allowed. This check is delegated to the""], [303, ""            if (backendManager.isOriginAllowed(origin,false)) {""]], ""deleted"": [[156, ""        if (pOrigin != null && backendManager.isCorsAccessAllowed(pOrigin)) {""], [281, ""    public void checkClientIPAccess(String pHost, String pAddress) {""], [288, ""     * Check whether for the given host is a cross-browser request allowed. This check is deligated to the""], [299, ""            if (backendManager.isCorsAccessAllowed(origin)) {""]]}"	199
CVE-2014-0168	GHSA-fjhw-8222-g2hg	org.jolokia:jolokia-core	0	1.2.0	1.2.1	https://github.com/rhuss/jolokia	2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/jar/jolokia-core-1.2.0.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/jar/jolokia-core-1.2.1.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/java/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/java/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/class/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.class	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/class/agent/core/src/main/java/org/jolokia/restrictor/AbstractConstantRestrictor.class	AbstractConstantRestrictor	[AbstractConstantRestrictor::isOriginAllowed, AbstractConstantRestrictor::isCorsAccessAllowed]	org.jolokia.restrictor	org.jolokia.restrictor	"{""added"": [[76, ""    public boolean isOriginAllowed(String pOrigin, boolean pIsStrictCheck) {""]], ""deleted"": [[76, ""    public boolean isCorsAccessAllowed(String pOrigin) {""]]}"	31
CVE-2014-0168	GHSA-fjhw-8222-g2hg	org.jolokia:jolokia-core	0	1.2.0	1.2.1	https://github.com/rhuss/jolokia	2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/jar/jolokia-core-1.2.0.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/jar/jolokia-core-1.2.1.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/java/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/java/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/class/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.class	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/class/agent/core/src/main/java/org/jolokia/restrictor/PolicyRestrictor.class	PolicyRestrictor	[PolicyRestrictor::isCorsAccessAllowed, PolicyRestrictor::isOriginAllowed]	org.jolokia.restrictor	org.jolokia.restrictor	"{""added"": [[102, ""    public boolean isOriginAllowed(String pOrigin, boolean pIsStrictCheck) {""], [103, ""        return corsChecker.check(pOrigin,pIsStrictCheck);""]], ""deleted"": [[102, ""    public boolean isCorsAccessAllowed(String pOrigin) {""], [103, ""        return corsChecker.check(pOrigin);""]]}"	65
CVE-2014-0168	GHSA-fjhw-8222-g2hg	org.jolokia:jolokia-core	0	1.2.0	1.2.1	https://github.com/rhuss/jolokia	2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/jar/jolokia-core-1.2.0.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/jar/jolokia-core-1.2.1.jar	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/java/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/java/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.java	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/before/class/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.class	proc/changes/CVE-2014-0168/2d9b168cfbbf5a6d16fa6e8a5b34503e3dc42364/after/class/agent/core/src/main/java/org/jolokia/restrictor/policy/CorsChecker.class	CorsChecker	[CorsChecker::check, CorsChecker::CorsChecker, CorsChecker::check]	org.jolokia.restrictor.policy	org.jolokia.restrictor.policy	"{""added"": [[33, ""    private boolean strictChecking = false;""], [34, """"], [44, ""     *""], [45, ""     *       &lt;strict-checking/&gt;""], [63, ""                    assertNodeName(node,\""allow-origin\"",\""strict-checking\"");""], [64, ""                    if (node.getNodeName().equals(\""allow-origin\"")) {""], [65, ""                        String p = node.getTextContent().trim().toLowerCase();""], [66, ""                        p = Pattern.quote(p).replace(\""*\"", \""\\\\E.*\\\\Q\"");""], [67, ""                        patterns.add(Pattern.compile(\""^\"" + p + \""$\""));""], [68, ""                    } else if (node.getNodeName().equals(\""strict-checking\"")) {""], [69, ""                        strictChecking = true;""], [70, ""                    }""], [79, ""        return check(pArg,false);""], [80, ""    }""], [81, """"], [82, ""    public boolean check(String pOrigin, boolean pIsStrictCheck) {""], [83, ""        // Method called during strict checking but we have not configured that""], [84, ""        // So the check passes always.""], [85, ""        if (pIsStrictCheck && !strictChecking) {""], [86, ""            return true;""], [87, ""        }""], [88, """"], [93, ""            if (pattern.matcher(pOrigin).matches()) {""]], ""deleted"": [[59, ""                    assertNodeName(node,\""allow-origin\"");""], [60, ""                    String p = node.getTextContent().trim().toLowerCase();""], [61, ""                    p = Pattern.quote(p).replace(\""*\"",\""\\\\E.*\\\\Q\"");""], [62, ""                    patterns.add(Pattern.compile(\""^\"" + p + \""$\""));""], [75, ""            if (pattern.matcher(pArg).matches()) {""]]}"	51
CVE-2017-3523	GHSA-2xxh-f8r3-hvvr	mysql:mysql-connector-java	0	5.1.40	5.1.41	https://github.com/mysql/mysql-connector-j	6189e718de5b6c6115aee45dd7a480081c129d68	proc/changes/CVE-2017-3523/6189e718de5b6c6115aee45dd7a480081c129d68/before/jar/mysql-connector-java-5.1.40.jar	proc/changes/CVE-2017-3523/6189e718de5b6c6115aee45dd7a480081c129d68/after/jar/mysql-connector-java-5.1.41.jar	proc/changes/CVE-2017-3523/6189e718de5b6c6115aee45dd7a480081c129d68/before/java/src/com/mysql/jdbc/ResultSetImpl.java	proc/changes/CVE-2017-3523/6189e718de5b6c6115aee45dd7a480081c129d68/after/java/src/com/mysql/jdbc/ResultSetImpl.java	proc/changes/CVE-2017-3523/6189e718de5b6c6115aee45dd7a480081c129d68/before/class/src/com/mysql/jdbc/ResultSetImpl.class	proc/changes/CVE-2017-3523/6189e718de5b6c6115aee45dd7a480081c129d68/after/class/src/com/mysql/jdbc/ResultSetImpl.class	ResultSetImpl	[ResultSetImpl::getNativeConvertToString]	com.mysql.jdbc	com.mysql.jdbc	"{""added"": [[2, ""  Copyright (c) 2002, 2017, Oracle and/or its affiliates. All rights reserved.""], [3432, ""                        if (this.connection.getAutoDeserialize()) {""], [3433, ""                            if ((data != null) && (data.length >= 2)) {""], [3434, ""                                if ((data[0] == -84) && (data[1] == -19)) {""], [3435, ""                                    // Serialized object?""], [3436, ""                                    try {""], [3437, ""                                        ByteArrayInputStream bytesIn = new ByteArrayInputStream(data);""], [3438, ""                                        ObjectInputStream objIn = new ObjectInputStream(bytesIn);""], [3439, ""                                        obj = objIn.readObject();""], [3440, ""                                        objIn.close();""], [3441, ""                                        bytesIn.close();""], [3442, ""                                    } catch (ClassNotFoundException cnfe) {""], [3443, ""                                        throw SQLError.createSQLException(Messages.getString(\""ResultSet.Class_not_found___91\"") + cnfe.toString()""], [3444, ""                                                + Messages.getString(\""ResultSet._while_reading_serialized_object_92\""), getExceptionInterceptor());""], [3445, ""                                    } catch (IOException ex) {""], [3446, ""                                        obj = data; // not serialized?""], [3447, ""                                    }""], [3450, ""                                return obj.toString();""], [3451, ""                            }""]], ""deleted"": [[2, ""  Copyright (c) 2002, 2016, Oracle and/or its affiliates. All rights reserved.""], [3432, ""                        if ((data != null) && (data.length >= 2)) {""], [3433, ""                            if ((data[0] == -84) && (data[1] == -19)) {""], [3434, ""                                // Serialized object?""], [3435, ""                                try {""], [3436, ""                                    ByteArrayInputStream bytesIn = new ByteArrayInputStream(data);""], [3437, ""                                    ObjectInputStream objIn = new ObjectInputStream(bytesIn);""], [3438, ""                                    obj = objIn.readObject();""], [3439, ""                                    objIn.close();""], [3440, ""                                    bytesIn.close();""], [3441, ""                                } catch (ClassNotFoundException cnfe) {""], [3442, ""                                    throw SQLError.createSQLException(Messages.getString(\""ResultSet.Class_not_found___91\"") + cnfe.toString()""], [3443, ""                                            + Messages.getString(\""ResultSet._while_reading_serialized_object_92\""), getExceptionInterceptor());""], [3444, ""                                } catch (IOException ex) {""], [3445, ""                                    obj = data; // not serialized?""], [3447, ""                            }""], [3449, ""                            return obj.toString();""]]}"	4041
CVE-2015-3253	GHSA-qg25-hgjv-cg9q	org.codehaus.groovy:groovy	1.7.0	2.4.3	2.4.4	https://github.com/apache/groovy	09e9778e8a33052d8c27105aee5310649637233d	proc/changes/CVE-2015-3253/09e9778e8a33052d8c27105aee5310649637233d/before/jar/groovy-2.4.3.jar	proc/changes/CVE-2015-3253/09e9778e8a33052d8c27105aee5310649637233d/after/jar/groovy-2.4.4.jar	proc/changes/CVE-2015-3253/09e9778e8a33052d8c27105aee5310649637233d/before/java/src/main/org/codehaus/groovy/runtime/MethodClosure.java	proc/changes/CVE-2015-3253/09e9778e8a33052d8c27105aee5310649637233d/after/java/src/main/org/codehaus/groovy/runtime/MethodClosure.java	proc/changes/CVE-2015-3253/09e9778e8a33052d8c27105aee5310649637233d/before/class/src/main/org/codehaus/groovy/runtime/MethodClosure.class	proc/changes/CVE-2015-3253/09e9778e8a33052d8c27105aee5310649637233d/after/class/src/main/org/codehaus/groovy/runtime/MethodClosure.class	MethodClosure	[MethodClosure::readResolve]	org.codehaus.groovy.runtime	org.codehaus.groovy.runtime	"{""added"": [[35, ""    public static boolean ALLOW_RESOLVE = false;""], [36, """"], [39, """"], [67, """"], [68, ""    private Object readResolve() {""], [69, ""        if (ALLOW_RESOLVE) {""], [70, ""            return this;""], [71, ""        }""], [72, ""        throw new UnsupportedOperationException();""], [73, ""    }""]], ""deleted"": [[37, """"]]}"	41
CVE-2013-4366	GHSA-pqwh-44jj-p5rm	org.apache.httpcomponents:httpclient	4.3	4.3	4.3.1	https://github.com/apache/httpcomponents-client	08140864e3e4c0994e094c4cf0507932baf6a66a	proc/changes/CVE-2013-4366/08140864e3e4c0994e094c4cf0507932baf6a66a/before/jar/httpclient-4.3.jar	proc/changes/CVE-2013-4366/08140864e3e4c0994e094c4cf0507932baf6a66a/after/jar/httpclient-4.3.1.jar	proc/changes/CVE-2013-4366/08140864e3e4c0994e094c4cf0507932baf6a66a/before/java/httpclient/src/main/java/org/apache/http/impl/client/HttpClientBuilder.java	proc/changes/CVE-2013-4366/08140864e3e4c0994e094c4cf0507932baf6a66a/after/java/httpclient/src/main/java/org/apache/http/impl/client/HttpClientBuilder.java	proc/changes/CVE-2013-4366/08140864e3e4c0994e094c4cf0507932baf6a66a/before/class/httpclient/src/main/java/org/apache/http/impl/client/HttpClientBuilder.class	proc/changes/CVE-2013-4366/08140864e3e4c0994e094c4cf0507932baf6a66a/after/class/httpclient/src/main/java/org/apache/http/impl/client/HttpClientBuilder.class	HttpClientBuilder	[HttpClientBuilder::build]	org.apache.http.impl.client	org.apache.http.impl.client	"{""added"": [[702, ""                X509HostnameVerifier hostnameVerifier = this.hostnameVerifier;""], [703, ""                if (hostnameVerifier == null) {""], [704, ""                    hostnameVerifier = SSLConnectionSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER;""], [705, ""                }""]], ""deleted"": []}"	604
CVE-2013-5960	GHSA-2g56-7jv7-wxxq	org.owasp.esapi:esapi	2.0.0.0	2.1.0	2.1.0.1	https://github.com/ESAPI/esapi-java-legacy	b7cbc53f9cc967cf1a5a9463d8c6fef9ed6ef4f7	proc/changes/CVE-2013-5960/b7cbc53f9cc967cf1a5a9463d8c6fef9ed6ef4f7/before/jar/esapi-2.1.0.jar	proc/changes/CVE-2013-5960/b7cbc53f9cc967cf1a5a9463d8c6fef9ed6ef4f7/after/jar/esapi-2.1.0.1.jar	proc/changes/CVE-2013-5960/b7cbc53f9cc967cf1a5a9463d8c6fef9ed6ef4f7/before/java/src/main/java/org/owasp/esapi/codecs/PercentCodec.java	proc/changes/CVE-2013-5960/b7cbc53f9cc967cf1a5a9463d8c6fef9ed6ef4f7/after/java/src/main/java/org/owasp/esapi/codecs/PercentCodec.java	proc/changes/CVE-2013-5960/b7cbc53f9cc967cf1a5a9463d8c6fef9ed6ef4f7/before/class/src/main/java/org/owasp/esapi/codecs/PercentCodec.class	proc/changes/CVE-2013-5960/b7cbc53f9cc967cf1a5a9463d8c6fef9ed6ef4f7/after/class/src/main/java/org/owasp/esapi/codecs/PercentCodec.class	PercentCodec	[PercentCodec::encodeCharacter]	org.owasp.esapi.codecs	org.owasp.esapi.codecs	"{""added"": [[92, ""\t * @param immune Additional characters not to encode. Note this could""], [93, ""     *               break URL encoding as referenced in RFC 3986. You should""], [94, ""     *               especially be wary of including '%' in this list of immune""], [95, ""     *               characters since it is used as the \""escape\"" character for""], [96, ""     *               the hex encoding and including it may result in subsequent""], [97, ""     *               and/or dangerous results when decoding.""], [107, ""        // check for user specified immune characters""], [108, ""        if ( immune != null && containsCharacter( c.charValue(), immune ) )""], [109, ""            return cStr;""], [110, """"], [111, ""        // check for standard characters (e.g., alphanumeric, etc.)""]], ""deleted"": [[92, ""\t * @param immune characters not to encode""]]}"	77
CVE-2016-6814	GHSA-xphj-m9cc-8fmq	org.codehaus.groovy:groovy	1.7.0	2.4.3	2.4.4	https://github.com/apache/groovy	4df8b652aa018a5d5d1cda8fba938bf3422db31c	proc/changes/CVE-2016-6814/4df8b652aa018a5d5d1cda8fba938bf3422db31c/before/jar/groovy-2.4.3.jar	proc/changes/CVE-2016-6814/4df8b652aa018a5d5d1cda8fba938bf3422db31c/after/jar/groovy-2.4.4.jar	proc/changes/CVE-2016-6814/4df8b652aa018a5d5d1cda8fba938bf3422db31c/before/java/src/main/org/codehaus/groovy/runtime/MethodClosure.java	proc/changes/CVE-2016-6814/4df8b652aa018a5d5d1cda8fba938bf3422db31c/after/java/src/main/org/codehaus/groovy/runtime/MethodClosure.java	proc/changes/CVE-2016-6814/4df8b652aa018a5d5d1cda8fba938bf3422db31c/before/class/src/main/org/codehaus/groovy/runtime/MethodClosure.class	proc/changes/CVE-2016-6814/4df8b652aa018a5d5d1cda8fba938bf3422db31c/after/class/src/main/org/codehaus/groovy/runtime/MethodClosure.class	MethodClosure	[MethodClosure::readObject]	org.codehaus.groovy.runtime	org.codehaus.groovy.runtime	"{""added"": [[24, ""import java.io.IOException;""], [75, """"], [76, ""    private void readObject(java.io.ObjectInputStream stream) throws IOException, ClassNotFoundException {""], [77, ""        if (ALLOW_RESOLVE) {""], [78, ""            stream.defaultReadObject();""], [79, ""        }""], [80, ""        throw new UnsupportedOperationException();""], [81, ""    }""]], ""deleted"": []}"	48
CVE-2018-8016	GHSA-52gq-7j6c-xw6x	org.apache.cassandra:cassandra-all	3.8	3.11.1	3.11.2	https://github.com/beobal/cassandra	28ee665b3c0c9238b61a871064f024d54cddcc79	proc/changes/CVE-2018-8016/28ee665b3c0c9238b61a871064f024d54cddcc79/before/jar/cassandra-all-3.11.1.jar	proc/changes/CVE-2018-8016/28ee665b3c0c9238b61a871064f024d54cddcc79/after/jar/cassandra-all-3.11.2.jar	proc/changes/CVE-2018-8016/28ee665b3c0c9238b61a871064f024d54cddcc79/before/java/src/java/org/apache/cassandra/utils/JMXServerUtils.java	proc/changes/CVE-2018-8016/28ee665b3c0c9238b61a871064f024d54cddcc79/after/java/src/java/org/apache/cassandra/utils/JMXServerUtils.java	proc/changes/CVE-2018-8016/28ee665b3c0c9238b61a871064f024d54cddcc79/before/class/src/java/org/apache/cassandra/utils/JMXServerUtils.class	proc/changes/CVE-2018-8016/28ee665b3c0c9238b61a871064f024d54cddcc79/after/class/src/java/org/apache/cassandra/utils/JMXServerUtils.class	JMXServerUtils	[JMXServerUtils::configureRMIRegistry, JMXServerUtils::createJMXServer]	org.apache.cassandra.utils	org.apache.cassandra.utils	"{""added"": [[27, ""import java.rmi.registry.LocateRegistry;""], [28, ""import java.rmi.registry.Registry;""], [37, ""import javax.management.remote.rmi.RMIJRMPServerImpl;""], [58, ""    @SuppressWarnings(\""resource\"")""], [74, ""        // configure the RMI registry to use the socket factories we just created""], [75, ""        Registry registry = LocateRegistry.createRegistry(port,""], [76, ""                                                          (RMIClientSocketFactory) env.get(RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE),""], [77, ""                                                          (RMIServerSocketFactory) env.get(RMIConnectorServer.RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE));""], [90, ""        // Mark the JMX server as a permanently exported object. This allows the JVM to exit with the""], [91, ""        // server running and also exempts it from the distributed GC scheduler which otherwise would""], [92, ""        // potentially attempt a full GC every `sun.rmi.dgc.server.gcInterval` millis (default is 3600000ms)""], [93, ""        // For more background see:""], [94, ""        //   - CASSANDRA-2967""], [95, ""        //   - https://www.jclarity.com/2015/01/27/rmi-system-gc-unplugged/""], [96, ""        //   - https://bugs.openjdk.java.net/browse/JDK-6760712""], [97, ""        env.put(\""jmx.remote.x.daemon\"", \""true\"");""], [98, """"], [99, ""        // Set the port used to create subsequent connections to exported objects over RMI. This simplifies""], [100, ""        // configuration in firewalled environments, but it can't be used in conjuction with SSL sockets.""], [101, ""        // See: CASSANDRA-7087""], [103, """"], [104, ""        // We create the underlying RMIJRMPServerImpl so that we can manually bind it to the registry,""], [105, ""        // rather then specifying a binding address in the JMXServiceURL and letting it be done automatically""], [106, ""        // when the server is started. The reason for this is that if the registry is configured with SSL""], [107, ""        // sockets, the JMXConnectorServer acts as its client during the binding which means it needs to""], [108, ""        // have a truststore configured which contains the registry's certificate. Manually binding removes""], [109, ""        // this problem.""], [110, ""        // See CASSANDRA-12109.""], [111, ""        RMIJRMPServerImpl server = new RMIJRMPServerImpl(rmiPort,""], [112, ""                                                         (RMIClientSocketFactory) env.get(RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE),""], [113, ""                                                         (RMIServerSocketFactory) env.get(RMIConnectorServer.RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE),""], [114, ""                                                         env);""], [115, ""        JMXServiceURL serviceURL = new JMXServiceURL(\""rmi\"", null, rmiPort);""], [116, ""        RMIConnectorServer jmxServer = new RMIConnectorServer(serviceURL, env, server, ManagementFactory.getPlatformMBeanServer());""], [123, ""        registry.rebind(\""jmxrmi\"", server);""]], ""deleted"": [[27, ""import java.rmi.*;""], [30, ""import java.rmi.server.UnicastRemoteObject;""], [46, ""import com.sun.jmx.remote.internal.RMIExporter;""], [49, ""import sun.rmi.registry.RegistryImpl;""], [50, ""import sun.rmi.server.UnicastServerRef2;""], [56, ""    private static java.rmi.registry.Registry registry;""], [57, """"], [89, ""        // Make sure we use our custom exporter so a full GC doesn't get scheduled every""], [90, ""        // sun.rmi.dgc.server.gcInterval millis (default is 3600000ms/1 hour)""], [91, ""        env.put(RMIExporter.EXPORTER_ATTRIBUTE, new Exporter());""], [92, """"], [93, """"], [95, ""        JMXConnectorServer jmxServer =""], [96, ""            JMXConnectorServerFactory.newJMXConnectorServer(new JMXServiceURL(\""rmi\"", null, rmiPort),""], [97, ""                                                            env,""], [98, ""                                                            ManagementFactory.getPlatformMBeanServer());""], [103, """"], [106, ""        // use a custom Registry to avoid having to interact with it internally using the remoting interface""], [107, ""        configureRMIRegistry(port, env);""], [108, """"], [113, ""    private static void configureRMIRegistry(int port, Map<String, Object> env) throws RemoteException""], [114, ""    {""], [115, ""        Exporter exporter = (Exporter)env.get(RMIExporter.EXPORTER_ATTRIBUTE);""], [116, ""        // If ssl is enabled, make sure it's also in place for the RMI registry""], [117, ""        // by using the SSL socket factories already created and stashed in env""], [118, ""        if (Boolean.getBoolean(\""com.sun.management.jmxremote.ssl\""))""], [119, ""        {""], [120, ""            registry = new Registry(port,""], [121, ""                                   (RMIClientSocketFactory)env.get(RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE),""], [122, ""                                   (RMIServerSocketFactory)env.get(RMIConnectorServer.RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE),""], [123, ""                                   exporter.connectorServer);""], [124, ""        }""], [125, ""        else""], [126, ""        {""], [127, ""            registry = new Registry(port, exporter.connectorServer);""], [128, ""        }""], [129, ""    }""], [130, """"], [278, """"], [279, ""    /**""], [280, ""     * In the RMI subsystem, the ObjectTable instance holds references to remote""], [281, ""     * objects for distributed garbage collection purposes. When objects are""], [282, ""     * added to the ObjectTable (exported), a flag is passed to * indicate the""], [283, ""     * \""permanence\"" of that object. Exporting as permanent has two effects; the""], [284, ""     * object is not eligible for distributed garbage collection, and its""], [285, ""     * existence will not prevent the JVM from exiting after termination of all""], [286, ""     * non-daemon threads terminate. Neither of these is bad for our case, as we""], [287, ""     * attach the server exactly once (i.e. at startup, not subsequently using""], [288, ""     * the Attach API) and don't disconnect it before shutdown. The primary""], [289, ""     * benefit we gain is that it doesn't trigger the scheduled full GC that""], [290, ""     * is otherwise incurred by programatically configuring the management server.""], [291, ""     *""], [292, ""     * To that end, we use this private implementation of RMIExporter to register""], [293, ""     * our JMXConnectorServer as a permanent object by adding it to the map of""], [294, ""     * environment variables under the key RMIExporter.EXPORTER_ATTRIBUTE""], [295, ""     * (com.sun.jmx.remote.rmi.exporter) prior to calling server.start()""], [296, ""     *""], [297, ""     * See also:""], [298, ""     *  * CASSANDRA-2967 for background""], [299, ""     *  * https://www.jclarity.com/2015/01/27/rmi-system-gc-unplugged/ for more detail""], [300, ""     *  * https://bugs.openjdk.java.net/browse/JDK-6760712 for info on setting the exporter""], [301, ""     *  * sun.management.remote.ConnectorBootstrap to trace how the inbuilt management agent""], [302, ""     *    sets up the JMXConnectorServer""], [303, ""     */""], [304, ""    private static class Exporter implements RMIExporter""], [305, ""    {""], [306, ""        // the first object to be exported by this instance is *always* the JMXConnectorServer""], [307, ""        // instance created by createJMXServer. Keep a handle to it, as it needs to be supplied""], [308, ""        // to our custom Registry too.""], [309, ""        private Remote connectorServer;""], [310, """"], [311, ""        public Remote exportObject(Remote obj, int port, RMIClientSocketFactory csf, RMIServerSocketFactory ssf)""], [312, ""        throws RemoteException""], [313, ""        {""], [314, ""            Remote remote = new UnicastServerRef2(port, csf, ssf).exportObject(obj, null, true);""], [315, ""            // Keep a reference to the first object exported, the JMXConnectorServer""], [316, ""            if (connectorServer == null)""], [317, ""                connectorServer = remote;""], [318, """"], [319, ""            return remote;""], [320, ""        }""], [321, """"], [322, ""        public boolean unexportObject(Remote obj, boolean force) throws NoSuchObjectException""], [323, ""        {""], [324, ""            return UnicastRemoteObject.unexportObject(obj, force);""], [325, ""        }""], [326, ""    }""], [327, """"], [328, ""    /**""], [329, ""     * Using this class avoids the necessity to interact with the registry via its""], [330, ""     * remoting interface. This is necessary because when SSL is enabled for the registry,""], [331, ""     * that remote interaction is treated just the same as one from an external client.""], [332, ""     * That is problematic when binding the JMXConnectorServer to the Registry as it requires""], [333, ""     * the client, which in this case is our own internal code, to connect like any other SSL""], [334, ""     * client, meaning we need a truststore containing our own certificate.""], [335, ""     * This bypasses the binding API completely, which emulates the behaviour of""], [336, ""     * ConnectorBootstrap when the subsystem is initialized by the JVM Agent directly.""], [337, ""     *""], [338, ""     * See CASSANDRA-12109.""], [339, ""     */""], [340, ""    private static class Registry extends RegistryImpl""], [341, ""    {""], [342, ""        private final static String KEY = \""jmxrmi\"";""], [343, ""        private final Remote connectorServer;""], [344, """"], [345, ""        private Registry(int port, Remote connectorServer) throws RemoteException""], [346, ""        {""], [347, ""            super(port);""], [348, ""            this.connectorServer = connectorServer;""], [349, ""        }""], [350, """"], [351, ""        private Registry(int port,""], [352, ""                         RMIClientSocketFactory csf,""], [353, ""                         RMIServerSocketFactory ssf,""], [354, ""                         Remote connectorServer) throws RemoteException""], [355, ""        {""], [356, ""            super(port, csf, ssf);""], [357, ""            this.connectorServer = connectorServer;""], [358, ""        }""], [359, """"], [360, ""        public Remote lookup(String name) throws RemoteException, NotBoundException""], [361, ""        {""], [362, ""            if (name.equals(KEY))""], [363, ""                return connectorServer;""], [364, """"], [365, ""            throw new NotBoundException(String.format(\""Only the JMX Connector Server named %s \"" +""], [366, ""                                                      \""is bound in this registry\"", KEY));""], [367, ""        }""], [368, """"], [369, ""        public void bind(String name, Remote obj) throws RemoteException, AlreadyBoundException""], [370, ""        {""], [371, ""            throw new UnsupportedOperationException(\""Unsupported\"");""], [372, ""        }""], [373, """"], [374, ""        public void unbind(String name) throws RemoteException, NotBoundException""], [375, ""        {""], [376, ""            throw new UnsupportedOperationException(\""Unsupported\"");""], [377, ""        }""], [378, """"], [379, ""        public void rebind(String name, Remote obj) throws RemoteException""], [380, ""        {""], [381, ""            throw new UnsupportedOperationException(\""Unsupported\"");""], [382, ""        }""], [383, """"], [384, ""        public String[] list() throws RemoteException""], [385, ""        {""], [386, ""            return new String[] {KEY};""], [387, ""        }""], [388, ""    }""]]}"	179
CVE-2014-3600	GHSA-4vhf-2hv7-8mrx	org.apache.activemq:activemq-client	5.0.0	5.10.0	5.10.1	https://gitbox.apache.org/repos/asf/activemq	b9696ac80bb496b52d05c3884f81b0746d9af9e2	proc/changes/CVE-2014-3600/b9696ac80bb496b52d05c3884f81b0746d9af9e2/before/jar/activemq-client-5.10.0.jar	proc/changes/CVE-2014-3600/b9696ac80bb496b52d05c3884f81b0746d9af9e2/after/jar/activemq-client-5.10.1.jar	proc/changes/CVE-2014-3600/b9696ac80bb496b52d05c3884f81b0746d9af9e2/before/java/activemq-client/src/main/java/org/apache/activemq/filter/XPathExpression.java	proc/changes/CVE-2014-3600/b9696ac80bb496b52d05c3884f81b0746d9af9e2/after/java/activemq-client/src/main/java/org/apache/activemq/filter/XPathExpression.java	proc/changes/CVE-2014-3600/b9696ac80bb496b52d05c3884f81b0746d9af9e2/before/class/activemq-client/src/main/java/org/apache/activemq/filter/XPathExpression.class	proc/changes/CVE-2014-3600/b9696ac80bb496b52d05c3884f81b0746d9af9e2/after/class/activemq-client/src/main/java/org/apache/activemq/filter/XPathExpression.class	XPathExpression	[XPathExpression::setupFeatures, XPathExpression::createEvaluator, XPathExpression::getXPathEvaluatorConstructor, XPathExpression::catch]	org.apache.activemq.filter	org.apache.activemq.filter	"{""added"": [[22, ""import java.util.ArrayList;""], [23, ""import java.util.List;""], [24, ""import java.util.Map;""], [25, ""import java.util.Properties;""], [28, ""import javax.xml.parsers.DocumentBuilder;""], [29, ""import javax.xml.parsers.DocumentBuilderFactory;""], [30, ""import javax.xml.parsers.ParserConfigurationException;""], [45, ""    public static final String DOCUMENT_BUILDER_FACTORY_FEATURE = \""org.apache.activemq.documentBuilderFactory.feature\"";""], [48, ""    private static DocumentBuilder builder = null;""], [56, ""                DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();""], [57, ""                builderFactory.setNamespaceAware(true);""], [58, ""                builderFactory.setIgnoringElementContentWhitespace(true);""], [59, ""                builderFactory.setIgnoringComments(true);""], [60, ""                try {""], [61, ""                    // set some reasonable defaults""], [62, ""                    builderFactory.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);""], [63, ""                    builderFactory.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);""], [64, ""                    builderFactory.setFeature(\""http://apache.org/xml/features/disallow-doctype-decl\"", true);""], [65, ""                } catch (ParserConfigurationException e) {""], [66, ""                    LOG.warn(\""Error setting document builder factory feature\"", e);""], [67, ""                }""], [68, ""                // setup the feature from the system property""], [69, ""                setupFeatures(builderFactory);""], [70, ""                builder = builderFactory.newDocumentBuilder();""], [102, ""        return c.getConstructor(new Class[] {String.class, DocumentBuilder.class});""], [103, ""    }""], [104, """"], [105, ""    protected static void setupFeatures(DocumentBuilderFactory factory) {""], [106, ""        Properties properties = System.getProperties();""], [107, ""        List<String> features = new ArrayList<String>();""], [108, ""        for (Map.Entry<Object, Object> prop : properties.entrySet()) {""], [109, ""            String key = (String) prop.getKey();""], [110, ""            if (key.startsWith(DOCUMENT_BUILDER_FACTORY_FEATURE)) {""], [111, ""                String uri = key.split(DOCUMENT_BUILDER_FACTORY_FEATURE + \"":\"")[1];""], [112, ""                Boolean value = Boolean.valueOf((String)prop.getValue());""], [113, ""                try {""], [114, ""                    factory.setFeature(uri, value);""], [115, ""                    features.add(\""feature \"" + uri + \"" value \"" + value);""], [116, ""                } catch (ParserConfigurationException e) {""], [117, ""                    LOG.warn(\""DocumentBuilderFactory doesn't support the feature {} with value {}, due to {}.\"", new Object[]{uri, value, e});""], [118, ""                }""], [119, ""            }""], [120, ""        }""], [121, ""        if (features.size() > 0) {""], [122, ""            StringBuffer featureString = new StringBuffer();""], [123, ""            // just log the configured feature""], [124, ""            for (String feature : features) {""], [125, ""                if (featureString.length() != 0) {""], [126, ""                    featureString.append(\"", \"");""], [127, ""                }""], [128, ""                featureString.append(feature);""], [129, ""            }""], [130, ""        }""], [131, """"], [136, ""            return (XPathEvaluator)EVALUATOR_CONSTRUCTOR.newInstance(new Object[] {xpath, builder});""]], ""deleted"": [[78, ""        return c.getConstructor(new Class[] {String.class});""], [83, ""            return (XPathEvaluator)EVALUATOR_CONSTRUCTOR.newInstance(new Object[] {xpath});""]]}"	128
CVE-2018-1000134	GHSA-qwq9-8rpf-8mp7	com.unboundid:unboundid-ldapsdk	1.1.0	4.0.4	4.0.5	https://github.com/pingidentity/ldapsdk	8471904a02438c03965d21367890276bc25fa5a6	proc/changes/CVE-2018-1000134/8471904a02438c03965d21367890276bc25fa5a6/before/jar/unboundid-ldapsdk-4.0.4.jar	proc/changes/CVE-2018-1000134/8471904a02438c03965d21367890276bc25fa5a6/after/jar/unboundid-ldapsdk-4.0.5.jar	proc/changes/CVE-2018-1000134/8471904a02438c03965d21367890276bc25fa5a6/before/java/src/com/unboundid/ldap/sdk/SimpleBindRequest.java	proc/changes/CVE-2018-1000134/8471904a02438c03965d21367890276bc25fa5a6/after/java/src/com/unboundid/ldap/sdk/SimpleBindRequest.java	proc/changes/CVE-2018-1000134/8471904a02438c03965d21367890276bc25fa5a6/before/class/src/com/unboundid/ldap/sdk/SimpleBindRequest.class	proc/changes/CVE-2018-1000134/8471904a02438c03965d21367890276bc25fa5a6/after/class/src/com/unboundid/ldap/sdk/SimpleBindRequest.class	SimpleBindRequest	[SimpleBindRequest::process]	com.unboundid.ldap.sdk	com.unboundid.ldap.sdk	"{""added"": [[531, ""    if (connection.synchronousMode())""], [532, ""    {""], [533, ""      @SuppressWarnings(\""deprecation\"")""], [534, ""      final boolean autoReconnect =""], [535, ""           connection.getConnectionOptions().autoReconnect();""], [536, ""      return processSync(connection, autoReconnect);""], [537, ""    }""], [538, """"]], ""deleted"": [[516, ""    if (connection.synchronousMode())""], [517, ""    {""], [518, ""      @SuppressWarnings(\""deprecation\"")""], [519, ""      final boolean autoReconnect =""], [520, ""           connection.getConnectionOptions().autoReconnect();""], [521, ""      return processSync(connection, autoReconnect);""], [522, ""    }""], [523, """"]]}"	536
CVE-2013-4316	GHSA-j7h6-xr7g-m2c5	org.apache.struts:struts2-core	0	2.3.15	2.3.15.1	https://github.com/apache/struts	58947c3f85ae641c1a476316a2888e53605948d1	proc/changes/CVE-2013-4316/58947c3f85ae641c1a476316a2888e53605948d1/before/jar/struts2-core-2.3.15.jar	proc/changes/CVE-2013-4316/58947c3f85ae641c1a476316a2888e53605948d1/after/jar/struts2-core-2.3.15.1.jar	proc/changes/CVE-2013-4316/58947c3f85ae641c1a476316a2888e53605948d1/before/java/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java	proc/changes/CVE-2013-4316/58947c3f85ae641c1a476316a2888e53605948d1/after/java/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java	proc/changes/CVE-2013-4316/58947c3f85ae641c1a476316a2888e53605948d1/before/class/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.class	proc/changes/CVE-2013-4316/58947c3f85ae641c1a476316a2888e53605948d1/after/class/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.class	DefaultActionMapper	[DefaultActionMapper::DefaultActionMapper, DefaultActionMapper::setAllowDynamicMethodCalls, DefaultActionMapper::handleSpecialParameters]	org.apache.struts2.dispatcher.mapper	org.apache.struts2.dispatcher.mapper	"{""added"": [[2, "" * $Id$""], [37, ""import org.apache.struts2.dispatcher.ServletDispatcherResult;""], [173, ""    private static final String STRUTS2_ACTION_PREFIX_PARSED = \""_struts2_action_prefix_parsed\"";""], [175, ""    protected boolean allowDynamicMethodCalls = false;""], [192, ""                    public void execute(String key, ActionMapping mapping, HttpServletRequest request) {""], [200, ""                    public void execute(final String key, ActionMapping mapping, HttpServletRequest request) {""], [201, ""                        if (request != null && request.getAttribute(STRUTS2_ACTION_PREFIX_PARSED) == null) {""], [202, ""                            request.setAttribute(STRUTS2_ACTION_PREFIX_PARSED, true);""], [203, ""                            String name = key.substring(ACTION_PREFIX.length());""], [204, ""                            if (allowDynamicMethodCalls) {""], [205, ""                                int bang = name.indexOf('!');""], [206, ""                                if (bang != -1) {""], [207, ""                                    String method = name.substring(bang + 1);""], [208, ""                                    mapping.setMethod(method);""], [209, ""                                    name = name.substring(0, bang);""], [210, ""                                }""], [211, ""                            }""], [212, ""                            String actionName = cleanupActionName(name);""], [213, ""                            mapping.setName(actionName);""], [214, ""                            if (getDefaultExtension() != null) {""], [215, ""                                actionName = actionName + \"".\"" + getDefaultExtension();""], [217, ""                            mapping.setResult(new ServletDispatcherResult(actionName));""], [239, ""        allowDynamicMethodCalls = \""true\"".equalsIgnoreCase(allow);""], [349, ""                    parameterAction.execute(key, mapping, request);""]], ""deleted"": [[172, ""    protected boolean allowDynamicMethodCalls = true;""], [189, ""                    public void execute(String key, ActionMapping mapping) {""], [197, ""                    public void execute(String key, ActionMapping mapping) {""], [198, ""                        String name = key.substring(ACTION_PREFIX.length());""], [199, ""                        if (allowDynamicMethodCalls) {""], [200, ""                            int bang = name.indexOf('!');""], [201, ""                            if (bang != -1) {""], [202, ""                                String method = name.substring(bang + 1);""], [203, ""                                mapping.setMethod(method);""], [204, ""                                name = name.substring(0, bang);""], [207, ""                        mapping.setName(cleanupActionName(name));""], [228, ""        allowDynamicMethodCalls = \""true\"".equals(allow);""], [338, ""                    parameterAction.execute(key, mapping);""]]}"	339
CVE-2015-4165	GHSA-fh5x-4j57-6q5x	org.elasticsearch:elasticsearch	0	1.5.2	1.6.0	https://github.com/elastic/elasticsearch	f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/before/jar/elasticsearch-1.5.2.jar	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/after/jar/elasticsearch-1.6.0.jar	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/before/java/src/main/java/org/elasticsearch/env/Environment.java	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/after/java/src/main/java/org/elasticsearch/env/Environment.java	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/before/class/src/main/java/org/elasticsearch/env/Environment.class	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/after/class/src/main/java/org/elasticsearch/env/Environment.class	Environment	[Environment::Environment, Environment::repoFiles, Environment::resolve, Environment::resolveRepoFile]	org.elasticsearch.env	org.elasticsearch.env	"{""added"": [[33, ""import java.nio.file.FileSystem;""], [55, ""    private final File[] repoFiles;""], [56, """"], [107, ""        String[] repoPaths = settings.getAsArray(\""path.repo\"");""], [108, ""        if (repoPaths.length > 0) {""], [109, ""            repoFiles = new File[repoPaths.length];""], [110, ""            for (int i = 0; i < repoPaths.length; i++) {""], [111, ""                repoFiles[i] = new File(repoPaths[i]);""], [112, ""            }""], [113, ""        } else {""], [114, ""            repoFiles = new File[0];""], [115, ""        }""], [116, """"], [172, ""    /**""], [173, ""     * The shared filesystem repo locations.""], [174, ""     */""], [175, ""    public File[] repoFiles() {""], [176, ""        return repoFiles;""], [177, ""    }""], [178, """"], [179, ""    /**""], [180, ""     * Resolves the specified location against the list of configured repository roots""], [181, ""     *""], [182, ""     * If the specified location doesn't match any of the roots, returns null.""], [183, ""     */""], [184, ""    public File resolveRepoFile(String location) {""], [185, ""        return resolve(repoFiles, location);""], [186, ""    }""], [187, """"], [244, """"], [245, ""    /**""], [246, ""     * Tries to resolve the given path against the list of available roots.""], [247, ""     *""], [248, ""     * If path starts with one of the listed roots, it returned back by this method, otherwise null is returned.""], [249, ""     */""], [250, ""    public static File resolve(File[] roots, String path) {""], [251, ""        for (File root : roots) {""], [252, ""            File file = new File(path);""], [253, ""            final File normalizedPath;""], [254, ""            try {""], [255, ""                if (file.isAbsolute()) {""], [256, ""                    normalizedPath = file.getCanonicalFile();""], [257, ""                } else {""], [258, ""                    normalizedPath = new File(root, path).getCanonicalFile();""], [259, ""                }""], [260, ""            } catch (IOException ex) {""], [261, ""                continue;""], [262, ""            }""], [263, ""            if(normalizedPath.getAbsolutePath().startsWith(root.getAbsolutePath())) {""], [264, ""                return normalizedPath;""], [265, ""            }""], [266, ""        }""], [267, ""        return null;""], [268, ""    }""], [269, """"], [270, """"]], ""deleted"": []}"	166
CVE-2015-4165	GHSA-fh5x-4j57-6q5x	org.elasticsearch:elasticsearch	0	1.5.2	1.6.0	https://github.com/elastic/elasticsearch	f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/before/jar/elasticsearch-1.5.2.jar	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/after/jar/elasticsearch-1.6.0.jar	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/before/java/src/main/java/org/elasticsearch/repositories/fs/FsRepository.java	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/after/java/src/main/java/org/elasticsearch/repositories/fs/FsRepository.java	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/before/class/src/main/java/org/elasticsearch/repositories/fs/FsRepository.class	proc/changes/CVE-2015-4165/f5cfb2a1869d1a52930cbd3138278a6e2c1b22e6/after/class/src/main/java/org/elasticsearch/repositories/fs/FsRepository.class	FsRepository	[FsRepository::FsRepository, FsRepository::FsRepository]	org.elasticsearch.repositories.fs	org.elasticsearch.repositories.fs	"{""added"": [[27, ""import org.elasticsearch.env.Environment;""], [70, ""    public FsRepository(RepositoryName name, RepositorySettings repositorySettings, IndexShardRepository indexShardRepository, Environment environment) throws IOException {""], [75, ""            logger.warn(\""the repository location is missing, it should point to a shared file system location that is available on all master and data nodes\"");""], [77, ""        }""], [78, ""        locationFile = environment.resolveRepoFile(location);""], [79, ""        if (locationFile == null) {""], [80, ""            if (environment.repoFiles().length > 0) {""], [81, ""                logger.warn(\""The specified location [{}] doesn't start with any repository paths specified by the path.repo setting: [{}] \"", location, environment.repoFiles());""], [82, ""                throw new RepositoryException(name.name(), \""location [\"" + location + \""] doesn't match any of the locations specified by path.repo\"");""], [83, ""            } else {""], [84, ""                logger.warn(\""The specified location [{}] should start with a repository path specified by the path.repo setting, but the path.repo setting was not set on this node\"", location);""], [85, ""                throw new RepositoryException(name.name(), \""location [\"" + location + \""] doesn't match any of the locations specified by path.repo because this setting is empty\"");""], [86, ""            }""]], ""deleted"": [[69, ""    public FsRepository(RepositoryName name, RepositorySettings repositorySettings, IndexShardRepository indexShardRepository) throws IOException {""], [74, ""            logger.warn(\""using local fs location for gateway, should be changed to be a shared location across nodes\"");""], [76, ""        } else {""], [77, ""            locationFile = new File(location);""]]}"	62
CVE-2018-8718	GHSA-6g57-h38c-q52g	org.jenkins-ci.plugins:mailer	0	1.20	1.21	https://github.com/jenkinsci/mailer-plugin	98e79cf904769907f83894e29f50ed6b3e7eb135	proc/changes/CVE-2018-8718/98e79cf904769907f83894e29f50ed6b3e7eb135/before/jar/mailer-1.20.jar	proc/changes/CVE-2018-8718/98e79cf904769907f83894e29f50ed6b3e7eb135/after/jar/mailer-1.21.jar	proc/changes/CVE-2018-8718/98e79cf904769907f83894e29f50ed6b3e7eb135/before/java/src/main/java/hudson/tasks/Mailer.java	proc/changes/CVE-2018-8718/98e79cf904769907f83894e29f50ed6b3e7eb135/after/java/src/main/java/hudson/tasks/Mailer.java	proc/changes/CVE-2018-8718/98e79cf904769907f83894e29f50ed6b3e7eb135/before/class/src/main/java/hudson/tasks/Mailer$DescriptorImpl.class	proc/changes/CVE-2018-8718/98e79cf904769907f83894e29f50ed6b3e7eb135/after/class/src/main/java/hudson/tasks/Mailer$DescriptorImpl.class	Mailer$DescriptorImpl	[Mailer::DescriptorImpl::doSendTestMail]	hudson.tasks	hudson.tasks	"{""added"": [[89, ""import org.kohsuke.stapler.interceptor.RequirePOST;""], [555, ""        @RequirePOST""], [567, """"], [568, ""                jenkins.checkPermission(Jenkins.ADMINISTER);""]], ""deleted"": []}"	406
CVE-2012-4386	GHSA-2rvh-q539-q33v	org.apache.struts:struts2-core	2.0.0	2.3.4	2.3.4.1	https://github.com/apache/struts	1081c52be93abfd2f33ba8453c676e3edcedec8b	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/jar/struts2-core-2.3.4.jar	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/jar/struts2-core-2.3.4.1.jar	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/java/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/java/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/class/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.class	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/class/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.class	ExecuteAndWaitInterceptor	[ExecuteAndWaitInterceptor::doIntercept]	org.apache.struts2.interceptor	org.apache.struts2.interceptor	"{""added"": [[260, ""\t\t\t\tfinal String token = TokenHelper.getToken();""], [261, ""\t\t\t\tif (token != null) {""], [262, ""\t\t\t\t\tTokenHelper.setSessionToken(TokenHelper.getTokenName(), token);""]], ""deleted"": [[260, ""                if (TokenHelper.getToken() != null) {""], [261, ""                    session.put(TokenHelper.getTokenName(), TokenHelper.getToken());""]]}"	130
CVE-2012-4386	GHSA-2rvh-q539-q33v	org.apache.struts:struts2-core	2.0.0	2.3.4	2.3.4.1	https://github.com/apache/struts	1081c52be93abfd2f33ba8453c676e3edcedec8b	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/jar/struts2-core-2.3.4.jar	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/jar/struts2-core-2.3.4.1.jar	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/java/core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/java/core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/class/core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.class	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/class/core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.class	TokenSessionStoreInterceptor	[TokenSessionStoreInterceptor::handleInvalidToken, TokenSessionStoreInterceptor::handleValidToken]	org.apache.struts2.interceptor	org.apache.struts2.interceptor	"{""added"": [[124, ""\t\t\tString sessionTokenName = TokenHelper.buildTokenSessionAttributeName(tokenName);""], [125, ""            ActionInvocation savedInvocation = InvocationSessionStore.loadInvocation(sessionTokenName, token);""], [161, ""\t\tString sessionTokenName = TokenHelper.buildTokenSessionAttributeName(key);""], [162, ""\t\tInvocationSessionStore.storeInvocation(sessionTokenName, token, invocation);""]], ""deleted"": [[124, ""            ActionInvocation savedInvocation = InvocationSessionStore.loadInvocation(tokenName, token);""], [160, ""        InvocationSessionStore.storeInvocation(key, token, invocation);""]]}"	52
CVE-2012-4386	GHSA-2rvh-q539-q33v	org.apache.struts:struts2-core	2.0.0	2.3.4	2.3.4.1	https://github.com/apache/struts	1081c52be93abfd2f33ba8453c676e3edcedec8b	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/jar/struts2-core-2.3.4.jar	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/jar/struts2-core-2.3.4.1.jar	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/java/core/src/main/java/org/apache/struts2/util/TokenHelper.java	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/java/core/src/main/java/org/apache/struts2/util/TokenHelper.java	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/before/class/core/src/main/java/org/apache/struts2/util/TokenHelper.class	proc/changes/CVE-2012-4386/1081c52be93abfd2f33ba8453c676e3edcedec8b/after/class/core/src/main/java/org/apache/struts2/util/TokenHelper.class	TokenHelper	[TokenHelper::buildTokenSessionAttributeName, TokenHelper::setToken, TokenHelper::validToken, TokenHelper::setSessionToken]	org.apache.struts2.util	org.apache.struts2.util	"{""added"": [[39, ""\t/**""], [40, ""\t * The default namespace for storing token session values""], [41, ""\t */""], [42, ""\tpublic static final String TOKEN_NAMESPACE = \""struts.tokens\"";""], [43, """"], [44, ""\t/**""], [47, ""    public static final String DEFAULT_TOKEN_NAME = \""token\"";""], [66, ""\t/**""], [67, ""\t * Sets a transaction token into the session based on the provided token name.""], [68, ""\t *""], [69, ""\t * @param tokenName the token name based on which a generated token value is stored into session; for actual session""], [70, ""\t *                  store, this name will be prefixed by a namespace.""], [71, ""\t *""], [72, ""\t * @return the token string""], [73, ""\t */""], [74, ""\tpublic static String setToken( String tokenName ) {""], [75, ""\t\tString token = generateGUID();""], [76, ""\t\tsetSessionToken(tokenName, token);""], [77, ""\t\treturn token;""], [78, ""\t}""], [79, """"], [80, ""\t/**""], [81, ""\t * Put a given named token into the session map. The token will be stored with a namespace prefix prepended.""], [82, ""\t *""], [83, ""\t * @param tokenName the token name based on which given token value is stored into session; for actual session store,""], [84, ""\t *                  this name will be prefixed by a namespace.""], [85, ""\t * @param token     the token value to store""], [86, ""\t */""], [87, ""\tpublic static void setSessionToken( String tokenName, String token ) {""], [88, ""\t\tMap<String, Object> session = ActionContext.getContext().getSession();""], [89, ""\t\ttry {""], [90, ""\t\t\tsession.put(buildTokenSessionAttributeName(tokenName), token);""], [91, ""\t\t} catch ( IllegalStateException e ) {""], [92, ""\t\t\t// WW-1182 explain to user what the problem is""], [93, ""\t\t\tString msg = \""Error creating HttpSession due response is commited to client. You can use the CreateSessionInterceptor or create the HttpSession from your action before the result is rendered to the client: \"" + e.getMessage();""], [94, ""\t\t\tLOG.error(msg, e);""], [95, ""\t\t\tthrow new IllegalArgumentException(msg);""], [96, ""\t\t}""], [97, ""\t}""], [98, """"], [99, """"], [100, ""\t/**""], [101, ""\t * Build a name-spaced token session attribute name based on the given token name.""], [102, ""\t *""], [103, ""\t * @param tokenName the token name to prefix""], [104, ""\t *""], [105, ""\t * @return the name space prefixed session token name""], [106, ""\t */""], [107, ""\tpublic static String buildTokenSessionAttributeName( String tokenName ) {""], [108, ""\t\treturn TOKEN_NAMESPACE + \"".\"" + tokenName;""], [109, ""\t}""], [110, """"], [111, ""\t/**""], [112, ""     * Gets a transaction token from the params in the ServletActionContext using the default token name.""], [205, ""\t\tString tokenSessionName = buildTokenSessionAttributeName(tokenName);""], [206, ""        String sessionToken = (String) session.get(tokenSessionName);""], [219, ""        session.remove(tokenSessionName);""]], ""deleted"": [[39, ""    /**""], [42, ""    public static final String DEFAULT_TOKEN_NAME = \""struts.token\"";""], [61, ""    /**""], [62, ""     * Sets a transaction token into the session using the provided token name.""], [63, ""     *""], [64, ""     * @param tokenName the name to store into the session with the token as the value""], [65, ""     * @return the token string""], [66, ""     */""], [67, ""    public static String setToken(String tokenName) {""], [68, ""        Map session = ActionContext.getContext().getSession();""], [69, ""        String token = generateGUID();""], [70, ""        try {""], [71, ""            session.put(tokenName, token);""], [72, ""        }""], [73, ""        catch(IllegalStateException e) {""], [74, ""            // WW-1182 explain to user what the problem is""], [75, ""            String msg = \""Error creating HttpSession due response is commited to client. You can use the CreateSessionInterceptor or create the HttpSession from your action before the result is rendered to the client: \"" + e.getMessage();""], [76, ""            LOG.error(msg, e);""], [77, ""            throw new IllegalArgumentException(msg);""], [78, ""        }""], [79, """"], [80, ""        return token;""], [81, ""    }""], [82, """"], [83, """"], [84, ""    /**""], [85, ""     * Gets a transaction token into the session using the default token name.""], [178, ""        String sessionToken = (String) session.get(tokenName);""], [191, ""        session.remove(tokenName);""]]}"	106
CVE-2020-28191	GHSA-697v-pxg3-j262	org.togglz:togglz-console	0	2.9.3	2.9.4	https://github.com/togglz/togglz	ed66e3f584de954297ebaf98ea4a235286784707	proc/changes/CVE-2020-28191/ed66e3f584de954297ebaf98ea4a235286784707/before/jar/togglz-console-2.9.3.jar	proc/changes/CVE-2020-28191/ed66e3f584de954297ebaf98ea4a235286784707/after/jar/togglz-console-2.9.4.jar	proc/changes/CVE-2020-28191/ed66e3f584de954297ebaf98ea4a235286784707/before/java/console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java	proc/changes/CVE-2020-28191/ed66e3f584de954297ebaf98ea4a235286784707/after/java/console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java	proc/changes/CVE-2020-28191/ed66e3f584de954297ebaf98ea4a235286784707/before/class/console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.class	proc/changes/CVE-2020-28191/ed66e3f584de954297ebaf98ea4a235286784707/after/class/console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.class	EditPageHandler	[EditPageHandler::process, EditPageHandler::renderEditPage, EditPageHandler::renderErrorPage, EditPageHandler::validateCSRFToken]	org.togglz.console.handlers.edit	org.togglz.console.handlers.edit	"{""added"": [[22, ""import org.togglz.servlet.spi.CSRFTokenValidator;""], [41, ""\t\tif(!validateCSRFToken(event)) {""], [42, ""\t\t\trenderErrorPage(event);""], [43, ""\t\t\treturn;""], [44, ""\t\t}""], [94, ""    private boolean validateCSRFToken(RequestEvent event) {""], [95, ""    \tboolean isValid = true;""], [96, ""\t\tfor (CSRFTokenValidator validator : Services.get(CSRFTokenValidator.class)) {""], [97, ""\t\t\tif(!validator.isTokenValid(event.getRequest())){""], [98, ""\t\t\t\tisValid = false;""], [99, ""\t\t\t\tbreak;""], [100, ""\t\t\t}""], [101, ""\t\t}""], [102, ""\t\treturn isValid;""], [103, ""\t}""], [104, """"], [105, ""    private void renderErrorPage(RequestEvent event) throws IOException {""], [106, ""\t\tString template = getResourceAsString(\""error.html\"");""], [107, ""\t\tString content = new Engine().transform(template, new HashMap<>());""], [108, ""\t\tevent.getResponse().setStatus(401);""], [109, ""\t\twriteResponse(event, content);""], [110, ""\t}""], [111, """"]], ""deleted"": [[40, """"], [81, """"], [99, """"]]}"	99
CVE-2020-11987	GHSA-2h63-qp69-fwvw	org.apache.xmlgraphics:batik-svgbrowser	0	1.13	1.14	https://github.com/apache/xmlgraphics-batik	0ef5b661a1f77772d1110877ea9e0287987098f6	proc/changes/CVE-2020-11987/0ef5b661a1f77772d1110877ea9e0287987098f6/before/jar/batik-svgbrowser-1.13.jar	proc/changes/CVE-2020-11987/0ef5b661a1f77772d1110877ea9e0287987098f6/after/jar/batik-svgbrowser-1.14.jar	proc/changes/CVE-2020-11987/0ef5b661a1f77772d1110877ea9e0287987098f6/before/java/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/NodePickerPanel.java	proc/changes/CVE-2020-11987/0ef5b661a1f77772d1110877ea9e0287987098f6/after/java/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/NodePickerPanel.java	proc/changes/CVE-2020-11987/0ef5b661a1f77772d1110877ea9e0287987098f6/before/class/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/NodePickerPanel.class	proc/changes/CVE-2020-11987/0ef5b661a1f77772d1110877ea9e0287987098f6/after/class/batik-svgbrowser/src/main/java/org/apache/batik/apps/svgbrowser/NodePickerPanel.class	NodePickerPanel	[NodePickerPanel::parseXml]	org.apache.batik.apps.svgbrowser	org.apache.batik.apps.svgbrowser	"{""added"": [[850, ""            factory.setFeature(\""http://xml.org/sax/features/external-general-entities\"", false);""], [851, ""            factory.setFeature(\""http://xml.org/sax/features/external-parameter-entities\"", false);""], [852, ""            factory.setFeature(\""http://apache.org/xml/features/nonvalidating/load-external-dtd\"", false);""], [853, ""            javax.xml.parsers.DocumentBuilder parser = factory.newDocumentBuilder();""]], ""deleted"": [[850, ""            javax.xml.parsers.DocumentBuilder parser = factory""], [851, ""                    .newDocumentBuilder();""]]}"	888
CVE-2020-1729	GHSA-54fx-gm74-q676	io.smallrye.config:smallrye-config	0	1.6.1	1.6.2	https://github.com/smallrye/smallrye-config	fb0def6f61c09a2a80c9145e4ec6521225cd0b99	proc/changes/CVE-2020-1729/fb0def6f61c09a2a80c9145e4ec6521225cd0b99/before/jar/smallrye-config-1.6.1.jar	proc/changes/CVE-2020-1729/fb0def6f61c09a2a80c9145e4ec6521225cd0b99/after/jar/smallrye-config-1.6.2.jar	proc/changes/CVE-2020-1729/fb0def6f61c09a2a80c9145e4ec6521225cd0b99/before/java/implementation/src/main/java/io/smallrye/config/SecuritySupport.java	proc/changes/CVE-2020-1729/fb0def6f61c09a2a80c9145e4ec6521225cd0b99/after/java/implementation/src/main/java/io/smallrye/config/SecuritySupport.java	proc/changes/CVE-2020-1729/fb0def6f61c09a2a80c9145e4ec6521225cd0b99/before/class/implementation/src/main/java/io/smallrye/config/SecuritySupport.class	proc/changes/CVE-2020-1729/fb0def6f61c09a2a80c9145e4ec6521225cd0b99/after/class/implementation/src/main/java/io/smallrye/config/SecuritySupport.class	SecuritySupport	[SecuritySupport::getContextClassLoader]	io.smallrye.config	io.smallrye.config	"{""added"": [[27, ""class SecuritySupport {""], [33, ""    static ClassLoader getContextClassLoader() {""], [34, ""        if (System.getSecurityManager() == null) {""], [35, ""            return Thread.currentThread().getContextClassLoader();""], [36, ""        } else {""], [37, ""            return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () -> {""], [38, ""                ClassLoader tccl = null;""], [39, ""                try {""], [40, ""                    tccl = Thread.currentThread().getContextClassLoader();""], [41, ""                } catch (SecurityException ex) {""], [42, ""                    LOG.warn(\""Unable to get context classloader instance.\"", ex);""], [43, ""                }""], [44, ""                return tccl;""], [45, ""            });""], [46, ""        }""]], ""deleted"": [[27, ""public class SecuritySupport {""], [33, ""    public static ClassLoader getContextClassLoader() {""], [34, ""        return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () -> {""], [35, ""            ClassLoader tccl = null;""], [36, ""            try {""], [37, ""                tccl = Thread.currentThread().getContextClassLoader();""], [38, ""            } catch (SecurityException ex) {""], [39, ""                LOG.warn(\""Unable to get context classloader instance.\"", ex);""], [40, ""            }""], [41, ""            return tccl;""], [42, ""        });""]]}"	24
CVE-2019-11343	GHSA-j7m2-58wv-9v79	org.torpedoquery:org.torpedoquery	0	2.5.2	2.5.3	https://github.com/xjodoin/torpedoquery	3c20b874fba9cc2a78b9ace10208de1602b56c3f	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/jar/org.torpedoquery-2.5.2.jar	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/jar/org.torpedoquery-2.5.3.jar	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/java/src/main/java/org/torpedoquery/jpa/internal/conditions/ConditionBuilder.java	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/java/src/main/java/org/torpedoquery/jpa/internal/conditions/ConditionBuilder.java	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/class/src/main/java/org/torpedoquery/jpa/internal/conditions/ConditionBuilder.class	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/class/src/main/java/org/torpedoquery/jpa/internal/conditions/ConditionBuilder.class	ConditionBuilder	[ConditionBuilder::createLike]	org.torpedoquery.jpa.internal.conditions	org.torpedoquery.jpa.internal.conditions	"{""added"": [[256, ""\t\t\treturn new NotLikeCondition(selector, selector.generateParameter(type.wrap(toMatch)));""], [258, ""\t\t\treturn new LikeCondition(selector, selector.generateParameter(type.wrap(toMatch)));""]], ""deleted"": [[256, ""\t\t\treturn new NotLikeCondition(type, selector, toMatch);""], [258, ""\t\t\treturn new LikeCondition(type, selector, toMatch);""]]}"	248
CVE-2019-11343	GHSA-j7m2-58wv-9v79	org.torpedoquery:org.torpedoquery	0	2.5.2	2.5.3	https://github.com/xjodoin/torpedoquery	3c20b874fba9cc2a78b9ace10208de1602b56c3f	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/jar/org.torpedoquery-2.5.2.jar	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/jar/org.torpedoquery-2.5.3.jar	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/java/src/main/java/org/torpedoquery/jpa/internal/conditions/LikeCondition.java	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/java/src/main/java/org/torpedoquery/jpa/internal/conditions/LikeCondition.java	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/class/src/main/java/org/torpedoquery/jpa/internal/conditions/LikeCondition.class	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/class/src/main/java/org/torpedoquery/jpa/internal/conditions/LikeCondition.class	LikeCondition	[LikeCondition::LikeCondition, LikeCondition::LikeCondition, LikeCondition::getLike, LikeCondition::getParameters, LikeCondition::createQueryFragment, LikeCondition::getComparator]	org.torpedoquery.jpa.internal.conditions	org.torpedoquery.jpa.internal.conditions	"{""added"": [[25, ""public class LikeCondition<T> extends SingleParameterCondition<T> {""], [61, ""\t * @param type     a""], [62, ""\t *                 {@link org.torpedoquery.jpa.internal.conditions.LikeCondition.Type}""], [63, ""\t *                 object.""], [64, ""\t * @param selector a {@link org.torpedoquery.jpa.internal.Selector} object.""], [65, ""\t * @param toMatch  a {@link java.lang.String} object.""], [67, ""\tpublic LikeCondition(Selector selector, Parameter<T> parameter) {""], [68, ""\t\tsuper(selector, parameter);""], [72, ""\tprotected String getComparator() {""]], ""deleted"": [[22, ""import java.util.Collections;""], [23, ""import java.util.List;""], [24, ""import java.util.concurrent.atomic.AtomicInteger;""], [25, """"], [26, ""import org.torpedoquery.jpa.internal.Condition;""], [30, ""public class LikeCondition implements Condition {""], [61, ""\tprivate final String toMatch;""], [62, ""\tprivate final Type type;""], [63, ""\tprivate final Selector selector;""], [64, """"], [70, ""\t * @param type""], [71, ""\t *            a""], [72, ""\t *            {@link org.torpedoquery.jpa.internal.conditions.LikeCondition.Type}""], [73, ""\t *            object.""], [74, ""\t * @param selector""], [75, ""\t *            a {@link org.torpedoquery.jpa.internal.Selector} object.""], [76, ""\t * @param toMatch""], [77, ""\t *            a {@link java.lang.String} object.""], [79, ""\tpublic LikeCondition(Type type, Selector selector, String toMatch) {""], [80, ""\t\tthis.type = type;""], [81, ""\t\tthis.selector = selector;""], [82, ""\t\tthis.toMatch = toMatch;""], [85, ""\t/** {@inheritDoc} */""], [87, ""\tpublic String createQueryFragment(AtomicInteger incrementor) {""], [88, ""\t\treturn selector.createQueryFragment(incrementor) + \"" \"" + getLike() + \"" '\"" + type.wrap(toMatch) + \""' \"";""], [89, ""\t}""], [90, """"], [91, ""\t/**""], [92, ""\t * <p>""], [93, ""\t * getLike.""], [94, ""\t * </p>""], [95, ""\t *""], [96, ""\t * @return a {@link java.lang.String} object.""], [97, ""\t */""], [98, ""\tprotected String getLike() {""], [102, ""\t/** {@inheritDoc} */""], [103, ""\t@Override""], [104, ""\tpublic List<Parameter> getParameters() {""], [105, ""\t\treturn Collections.emptyList();""], [106, ""\t}""], [107, """"]]}"	39
CVE-2019-11343	GHSA-j7m2-58wv-9v79	org.torpedoquery:org.torpedoquery	0	2.5.2	2.5.3	https://github.com/xjodoin/torpedoquery	3c20b874fba9cc2a78b9ace10208de1602b56c3f	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/jar/org.torpedoquery-2.5.2.jar	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/jar/org.torpedoquery-2.5.3.jar	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/java/src/main/java/org/torpedoquery/jpa/internal/conditions/NotLikeCondition.java	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/java/src/main/java/org/torpedoquery/jpa/internal/conditions/NotLikeCondition.java	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/before/class/src/main/java/org/torpedoquery/jpa/internal/conditions/NotLikeCondition.class	proc/changes/CVE-2019-11343/3c20b874fba9cc2a78b9ace10208de1602b56c3f/after/class/src/main/java/org/torpedoquery/jpa/internal/conditions/NotLikeCondition.class	NotLikeCondition	[NotLikeCondition::getLike, NotLikeCondition::NotLikeCondition, NotLikeCondition::getComparator, NotLikeCondition::NotLikeCondition]	org.torpedoquery.jpa.internal.conditions	org.torpedoquery.jpa.internal.conditions	"{""added"": [[22, ""import org.torpedoquery.jpa.internal.Parameter;""], [24, ""public class NotLikeCondition<T> extends LikeCondition<T> {""], [33, ""\tpublic NotLikeCondition(Selector selector, Parameter<T> parameter) {""], [34, ""\t\tsuper(selector,parameter);""], [38, ""\tprotected String getComparator() {""], [39, ""\t\treturn \""not \"" + super.getComparator();""]], ""deleted"": [[23, ""public class NotLikeCondition extends LikeCondition {""], [32, ""\tpublic NotLikeCondition(Type type, Selector selector, String toMatch) {""], [33, ""\t\tsuper(type, selector, toMatch);""], [36, ""\t/** {@inheritDoc} */""], [38, ""\tprotected String getLike() {""], [39, ""\t\treturn \""not \"" + super.getLike();""]]}"	12
CVE-2020-11988	GHSA-fmj2-7wx8-qj4v	org.apache.xmlgraphics:xmlgraphics-commons	0	2.4	2.6	https://github.com/apache/xmlgraphics-commons	57393912eb87b994c7fed39ddf30fb778a275183	proc/changes/CVE-2020-11988/57393912eb87b994c7fed39ddf30fb778a275183/before/jar/xmlgraphics-commons-2.4.jar	proc/changes/CVE-2020-11988/57393912eb87b994c7fed39ddf30fb778a275183/after/jar/xmlgraphics-commons-2.6.jar	proc/changes/CVE-2020-11988/57393912eb87b994c7fed39ddf30fb778a275183/before/java/src/main/java/org/apache/xmlgraphics/xmp/XMPParser.java	proc/changes/CVE-2020-11988/57393912eb87b994c7fed39ddf30fb778a275183/after/java/src/main/java/org/apache/xmlgraphics/xmp/XMPParser.java	proc/changes/CVE-2020-11988/57393912eb87b994c7fed39ddf30fb778a275183/before/class/src/main/java/org/apache/xmlgraphics/xmp/XMPParser.class	proc/changes/CVE-2020-11988/57393912eb87b994c7fed39ddf30fb778a275183/after/class/src/main/java/org/apache/xmlgraphics/xmp/XMPParser.class	XMPParser	[XMPParser::parseXMP]	org.apache.xmlgraphics.xmp	org.apache.xmlgraphics.xmp	"{""added"": [[24, ""import javax.xml.XMLConstants;""], [58, ""        tFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \""\"");""], [59, ""        tFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \""\"");""]], ""deleted"": []}"	29
CVE-2019-10091	GHSA-wc4x-4gm2-74j8	org.apache.geode:geode-core	0	1.9.2	1.10.0	https://github.com/apache/geode	e57028fd62a2f5980ea6c9a7ab89ada06c828634	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/before/jar/geode-core-1.9.2.jar	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/after/jar/geode-core-1.10.0.jar	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/before/java/geode-core/src/main/java/org/apache/geode/internal/net/SocketCreator.java	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/after/java/geode-core/src/main/java/org/apache/geode/internal/net/SocketCreator.java	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/before/class/geode-core/src/main/java/org/apache/geode/internal/net/SocketCreator.class	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/after/class/geode-core/src/main/java/org/apache/geode/internal/net/SocketCreator.class	SocketCreator	[SocketCreator::configureClientSSLSocket, SocketCreator::handshakeSSLSocketChannel, SocketCreator::checkAndEnableHostnameValidation]	org.apache.geode.internal.net	org.apache.geode.internal.net	"{""added"": [[936, ""    if (!clientSocket) {""], [937, ""      engine.setNeedClientAuth(sslConfig.isRequireAuth());""], [938, ""    }""], [939, """"], [940, ""    if (clientSocket) {""], [941, ""      SSLParameters modifiedParams = checkAndEnableHostnameValidation(engine.getSSLParameters());""], [942, ""      engine.setSSLParameters(modifiedParams);""], [943, ""    }""], [987, ""  private SSLParameters checkAndEnableHostnameValidation(SSLParameters sslParameters) {""], [988, ""    if (sslConfig.doEndpointIdentification()) {""], [989, ""      sslParameters.setEndpointIdentificationAlgorithm(\""HTTPS\"");""], [990, ""    } else {""], [991, ""      if (!hostnameValidationDisabledLogShown) {""], [992, ""        logger.info(\""Your SSL configuration disables hostname validation. \""""], [993, ""            + \""ssl-endpoint-identification-enabled should be set to true when SSL is enabled. \""""], [994, ""            + \""Please refer to the Apache GEODE SSL Documentation for SSL Property: ssl\u2011endpoint\u2011identification\u2011enabled\"");""], [995, ""        hostnameValidationDisabledLogShown = true;""], [996, ""      }""], [997, ""    }""], [998, ""    return sslParameters;""], [999, ""  }""], [1000, """"], [1077, ""      SSLParameters modifiedParams =""], [1078, ""          checkAndEnableHostnameValidation(sslSocket.getSSLParameters());""], [1079, ""      sslSocket.setSSLParameters(modifiedParams);""]], ""deleted"": [[1055, ""      if (sslConfig.doEndpointIdentification()) {""], [1056, ""        SSLParameters sslParameters = sslSocket.getSSLParameters();""], [1057, ""        sslParameters.setEndpointIdentificationAlgorithm(\""HTTPS\"");""], [1058, ""        sslSocket.setSSLParameters(sslParameters);""], [1059, ""      } else {""], [1060, ""        if (!hostnameValidationDisabledLogShown) {""], [1061, ""          logger.info(\""Your SSL configuration disables hostname validation. \""""], [1062, ""              + \""ssl-endpoint-identification-enabled should be set to true when SSL is enabled. \""""], [1063, ""              + \""Please refer to the Apache GEODE SSL Documentation for SSL Property: ssl\u2011endpoint\u2011identification\u2011enabled\"");""], [1064, ""          hostnameValidationDisabledLogShown = true;""], [1065, ""        }""], [1066, ""      }""]]}"	891
CVE-2019-10091	GHSA-wc4x-4gm2-74j8	org.apache.geode:geode-core	0	1.9.2	1.10.0	https://github.com/apache/geode	e57028fd62a2f5980ea6c9a7ab89ada06c828634	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/before/jar/geode-core-1.9.2.jar	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/after/jar/geode-core-1.10.0.jar	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/before/java/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/after/java/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/before/class/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.class	proc/changes/CVE-2019-10091/e57028fd62a2f5980ea6c9a7ab89ada06c828634/after/class/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.class	Connection	[Connection::createIoFilter]	org.apache.geode.internal.tcp	org.apache.geode.internal.tcp	"{""added"": [], ""deleted"": [[18, ""import static org.apache.geode.internal.net.SSLConfigurationFactory.getSSLConfigForComponent;""], [84, ""import org.apache.geode.internal.security.SecurableCommunicationChannel;""], [1837, ""      if (!clientSocket) {""], [1838, ""        engine.setNeedClientAuth(getSSLConfigForComponent(getConduit().config,""], [1839, ""            SecurableCommunicationChannel.CLUSTER).isRequireAuth());""], [1840, ""      }""], [1841, """"]]}"	2692
CVE-2020-13692	GHSA-88cc-g835-76rp	org.postgresql:postgresql	0	42.2.12.jre7	42.2.13	https://github.com/pgjdbc/pgjdbc	14b62aca4764d496813f55a43d050b017e01eb65	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/jar/postgresql-42.2.12.jre7.jar	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/jar/postgresql-42.2.13.jar	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/java/pgjdbc/src/main/java/org/postgresql/ds/common/BaseDataSource.java	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/java/pgjdbc/src/main/java/org/postgresql/ds/common/BaseDataSource.java	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/class/pgjdbc/src/main/java/org/postgresql/ds/common/BaseDataSource.class	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/class/pgjdbc/src/main/java/org/postgresql/ds/common/BaseDataSource.class	BaseDataSource	[BaseDataSource::getXmlFactoryFactory, BaseDataSource::setXmlFactoryFactory]	org.postgresql.ds.common	org.postgresql.ds.common	"{""added"": [[1529, ""  public String getXmlFactoryFactory() {""], [1530, ""    return PGProperty.XML_FACTORY_FACTORY.get(properties);""], [1531, ""  }""], [1532, """"], [1533, ""  public void setXmlFactoryFactory(String xmlFactoryFactory) {""], [1534, ""    PGProperty.XML_FACTORY_FACTORY.set(properties, xmlFactoryFactory);""], [1535, ""  }""], [1536, """"]], ""deleted"": []}"	797
CVE-2020-13692	GHSA-88cc-g835-76rp	org.postgresql:postgresql	0	42.2.12.jre7	42.2.13	https://github.com/pgjdbc/pgjdbc	14b62aca4764d496813f55a43d050b017e01eb65	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/jar/postgresql-42.2.12.jre7.jar	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/jar/postgresql-42.2.13.jar	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/java/pgjdbc/src/main/java/org/postgresql/jdbc/PgConnection.java	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/java/pgjdbc/src/main/java/org/postgresql/jdbc/PgConnection.java	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/class/pgjdbc/src/main/java/org/postgresql/jdbc/PgConnection.class	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/class/pgjdbc/src/main/java/org/postgresql/jdbc/PgConnection.class	PgConnection	[PgConnection::PgConnection, PgConnection::getXmlFactoryFactory]	org.postgresql.jdbc	org.postgresql.jdbc	"{""added"": [[40, ""import org.postgresql.xml.DefaultPGXmlFactoryFactory;""], [41, ""import org.postgresql.xml.LegacyInsecurePGXmlFactoryFactory;""], [42, ""import org.postgresql.xml.PGXmlFactoryFactory;""], [162, ""  private final String xmlFactoryFactoryClass;""], [163, ""  private PGXmlFactoryFactory xmlFactoryFactory;""], [164, """"], [320, """"], [321, ""    xmlFactoryFactoryClass = PGProperty.XML_FACTORY_FACTORY.get(info);""], [1834, ""  @Override""], [1835, ""  public PGXmlFactoryFactory getXmlFactoryFactory() throws SQLException {""], [1836, ""    if (xmlFactoryFactory == null) {""], [1837, ""      if (xmlFactoryFactoryClass == null || xmlFactoryFactoryClass.equals(\""\"")) {""], [1838, ""        xmlFactoryFactory = DefaultPGXmlFactoryFactory.INSTANCE;""], [1839, ""      } else if (xmlFactoryFactoryClass.equals(\""LEGACY_INSECURE\"")) {""], [1840, ""        xmlFactoryFactory = LegacyInsecurePGXmlFactoryFactory.INSTANCE;""], [1841, ""      } else {""], [1842, ""        Class<?> clazz;""], [1843, ""        try {""], [1844, ""          clazz = Class.forName(xmlFactoryFactoryClass);""], [1845, ""        } catch (ClassNotFoundException ex) {""], [1846, ""          throw new PSQLException(""], [1847, ""              GT.tr(\""Could not instantiate xmlFactoryFactory: {0}\"", xmlFactoryFactoryClass),""], [1848, ""              PSQLState.INVALID_PARAMETER_VALUE, ex);""], [1849, ""        }""], [1850, ""        if (!clazz.isAssignableFrom(PGXmlFactoryFactory.class)) {""], [1851, ""          throw new PSQLException(""], [1852, ""              GT.tr(\""Connection property xmlFactoryFactory must implement PGXmlFactoryFactory: {0}\"", xmlFactoryFactoryClass),""], [1853, ""              PSQLState.INVALID_PARAMETER_VALUE);""], [1854, ""        }""], [1855, ""        try {""], [1856, ""          xmlFactoryFactory = (PGXmlFactoryFactory) clazz.newInstance();""], [1857, ""        } catch (Exception ex) {""], [1858, ""          throw new PSQLException(""], [1859, ""              GT.tr(\""Could not instantiate xmlFactoryFactory: {0}\"", xmlFactoryFactoryClass),""], [1860, ""              PSQLState.INVALID_PARAMETER_VALUE, ex);""], [1861, ""        }""], [1862, ""      }""], [1863, ""    }""], [1864, ""    return xmlFactoryFactory;""], [1865, ""  }""]], ""deleted"": []}"	1397
CVE-2020-13692	GHSA-88cc-g835-76rp	org.postgresql:postgresql	0	42.2.12.jre7	42.2.13	https://github.com/pgjdbc/pgjdbc	14b62aca4764d496813f55a43d050b017e01eb65	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/jar/postgresql-42.2.12.jre7.jar	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/jar/postgresql-42.2.13.jar	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/java/pgjdbc/src/main/java/org/postgresql/jdbc/PgSQLXML.java	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/java/pgjdbc/src/main/java/org/postgresql/jdbc/PgSQLXML.java	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/before/class/pgjdbc/src/main/java/org/postgresql/jdbc/PgSQLXML.class	proc/changes/CVE-2020-13692/14b62aca4764d496813f55a43d050b017e01eb65/after/class/pgjdbc/src/main/java/org/postgresql/jdbc/PgSQLXML.class	PgSQLXML	[PgSQLXML::getSource, PgSQLXML::ensureInitialized, PgSQLXML::getXmlFactoryFactory, PgSQLXML::setResult]	org.postgresql.jdbc	org.postgresql.jdbc	"{""added"": [[12, ""import org.postgresql.xml.DefaultPGXmlFactoryFactory;""], [13, ""import org.postgresql.xml.PGXmlFactoryFactory;""], [16, ""import org.xml.sax.XMLReader;""], [80, ""  private PGXmlFactoryFactory getXmlFactoryFactory() throws SQLException {""], [81, ""    if (conn != null) {""], [82, ""      return conn.getXmlFactoryFactory();""], [83, ""    }""], [84, ""    return DefaultPGXmlFactoryFactory.INSTANCE;""], [85, ""  }""], [86, """"], [142, ""        DocumentBuilder builder = getXmlFactoryFactory().newDocumentBuilder();""], [146, ""        XMLReader reader = getXmlFactoryFactory().createXMLReader();""], [148, ""        return (T) new SAXSource(reader, is);""], [152, ""        XMLInputFactory xif = getXmlFactoryFactory().newXMLInputFactory();""], [200, ""        SAXTransformerFactory transformerFactory = getXmlFactoryFactory().newSAXTransformerFactory();""], [217, ""        XMLOutputFactory xof = getXmlFactoryFactory().newXMLOutputFactory();""], [280, ""        TransformerFactory factory = getXmlFactoryFactory().newTransformerFactory();""]], ""deleted"": [[13, ""import org.xml.sax.ErrorHandler;""], [15, ""import org.xml.sax.SAXParseException;""], [30, ""import javax.xml.parsers.DocumentBuilderFactory;""], [135, ""        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();""], [136, ""        DocumentBuilder builder = factory.newDocumentBuilder();""], [137, ""        builder.setErrorHandler(new NonPrintingErrorHandler());""], [142, ""        return (T) new SAXSource(is);""], [146, ""        XMLInputFactory xif = XMLInputFactory.newInstance();""], [194, ""        SAXTransformerFactory transformerFactory =""], [195, ""            (SAXTransformerFactory) SAXTransformerFactory.newInstance();""], [212, ""        XMLOutputFactory xof = XMLOutputFactory.newInstance();""], [275, ""        TransformerFactory factory = TransformerFactory.newInstance();""], [301, """"], [302, ""  // Don't clutter System.err with errors the user can't silence.""], [303, ""  // If something bad really happens an exception will be thrown.""], [304, ""  static class NonPrintingErrorHandler implements ErrorHandler {""], [305, ""    public void error(SAXParseException e) {""], [306, ""    }""], [307, """"], [308, ""    public void fatalError(SAXParseException e) {""], [309, ""    }""], [310, """"], [311, ""    public void warning(SAXParseException e) {""], [312, ""    }""], [313, ""  }""], [314, """"]]}"	250
CVE-2018-21234	GHSA-jrg3-qq99-35g7	org.jodd:jodd-all	0	5.0.3	5.0.4	https://github.com/oblac/jodd	9bffc3913aeb8472c11bb543243004b4b4376f16	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/before/jar/jodd-all-5.0.3.jar	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/after/jar/jodd-all-5.0.4.jar	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/before/java/jodd-json/src/main/java/jodd/json/JsonParser.java	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/after/java/jodd-json/src/main/java/jodd/json/JsonParser.java	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/before/class/jodd-json/src/main/java/jodd/json/JsonParser.class	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/after/class/jodd-json/src/main/java/jodd/json/JsonParser.class	JsonParser	[JsonParser::allowClass, JsonParser::allowAllClasses]	jodd.json	jodd.json	"{""added"": [[39, ""import java.util.ArrayList;""], [311, ""\t/**""], [312, ""\t * Adds a {@link jodd.util.Wildcard wildcard} pattern for white-listing classes.""], [313, ""\t * @see #setClassMetadataName(String)""], [314, ""\t */""], [315, ""\tpublic JsonParser allowClass(final String classPattern) {""], [316, ""\t\tif (super.classnameWhitelist == null) {""], [317, ""\t\t\tsuper.classnameWhitelist = new ArrayList<>();""], [318, ""\t\t}""], [319, ""\t\tclassnameWhitelist.add(classPattern);""], [320, ""\t\treturn this;""], [321, ""\t}""], [322, """"], [323, ""\t/**""], [324, ""\t * Removes the whitelist of allowed classes.""], [325, ""\t * @see #setClassMetadataName(String)""], [326, ""\t */""], [327, ""\tpublic JsonParser allowAllClasses() {""], [328, ""\t\tclassnameWhitelist = null;""], [329, ""\t\treturn this;""], [330, ""\t}""]], ""deleted"": []}"	728
CVE-2018-21234	GHSA-jrg3-qq99-35g7	org.jodd:jodd-all	0	5.0.3	5.0.4	https://github.com/oblac/jodd	9bffc3913aeb8472c11bb543243004b4b4376f16	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/before/jar/jodd-all-5.0.3.jar	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/after/jar/jodd-all-5.0.4.jar	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/before/java/jodd-json/src/main/java/jodd/json/MapToBean.java	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/after/java/jodd-json/src/main/java/jodd/json/MapToBean.java	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/before/class/jodd-json/src/main/java/jodd/json/MapToBean.class	proc/changes/CVE-2018-21234/9bffc3913aeb8472c11bb543243004b4b4376f16/after/class/jodd-json/src/main/java/jodd/json/MapToBean.class	MapToBean	[MapToBean::map2bean, MapToBean::checkClassName]	jodd.json	jodd.json	"{""added"": [[35, ""import jodd.util.Wildcard;""], [73, ""\t\t\tcheckClassName(jsonParser.classnameWhitelist, className);""], [74, """"], [151, ""\tprivate void checkClassName(final List<String> classnameWhitelist, final String className) {""], [152, ""\t\tif (classnameWhitelist == null) {""], [153, ""\t\t\treturn;""], [154, ""\t\t}""], [155, ""\t\tclassnameWhitelist.forEach(pattern -> {""], [156, ""\t\t\tif (!Wildcard.equalsOrMatch(className, pattern)) {""], [157, ""\t\t\t\tthrow new JsonException(\""Class can't be loaded as it is not whitelisted: \"" + className);""], [158, ""\t\t\t}""], [159, ""\t\t});""], [160, ""\t}""], [161, """"]], ""deleted"": []}"	163
CVE-2020-13973	GHSA-g8jj-899q-8x3j	com.mikesamuel:json-sanitizer	0	1.2.0	1.2.1	https://github.com/OWASP/json-sanitizer	f3512bab078af3f5c533dacc2d410add8c0c1124	proc/changes/CVE-2020-13973/f3512bab078af3f5c533dacc2d410add8c0c1124/before/jar/json-sanitizer-1.2.0.jar	proc/changes/CVE-2020-13973/f3512bab078af3f5c533dacc2d410add8c0c1124/after/jar/json-sanitizer-1.2.1.jar	proc/changes/CVE-2020-13973/f3512bab078af3f5c533dacc2d410add8c0c1124/before/java/src/main/java/com/google/json/JsonSanitizer.java	proc/changes/CVE-2020-13973/f3512bab078af3f5c533dacc2d410add8c0c1124/after/java/src/main/java/com/google/json/JsonSanitizer.java	proc/changes/CVE-2020-13973/f3512bab078af3f5c533dacc2d410add8c0c1124/before/class/src/main/java/com/google/json/JsonSanitizer.class	proc/changes/CVE-2020-13973/f3512bab078af3f5c533dacc2d410add8c0c1124/after/class/src/main/java/com/google/json/JsonSanitizer.class	JsonSanitizer	[JsonSanitizer::sanitizeString]	com.google.json	com.google.json	"{""added"": [[544, ""        // Embedding. Disallow <script, </script, <!--, --> and ]]> in string""], [545, ""        // literals so that the output can be embedded in HTML script elements""], [546, ""        // and in XML CDATA sections without affecting the parser state.""], [547, ""        // References:""], [548, ""        // https://www.w3.org/TR/html53/semantics-scripting.html#restrictions-for-contents-of-script-elements""], [549, ""        // https://www.w3.org/TR/html53/syntax.html#script-data-escaped-state""], [550, ""        // https://www.w3.org/TR/html53/syntax.html#script-data-double-escaped-state""], [551, ""        // https://www.w3.org/TR/xml/#sec-cdata-sect""], [552, ""        case '<':""], [553, ""          // Disallow <!--, which lets the HTML parser switch into the \""script""], [554, ""          // data escaped\"" state.""], [555, ""          // Disallow <script, which followed by various characters lets the""], [556, ""          // HTML parser switch into or out of the \""script data double escaped\""""], [557, ""          // state.""], [558, ""          // Disallow </script, which ends a script block.""], [559, ""          if (i + 3 >= end)""], [560, ""            break;""], [561, ""          char c1 = jsonish.charAt(i + 1);""], [562, ""          char c2 = jsonish.charAt(i + 2);""], [563, ""          char c3 = jsonish.charAt(i + 3);""], [564, ""          char lc1 = (char) (c1 | 32);""], [565, ""          char lc2 = (char) (c2 | 32);""], [566, ""          char lc3 = (char) (c3 | 32);""], [567, ""          if ((c1 == '!' && c2 == '-' && c3 == '-') ||""], [568, ""              (lc1 == 's' && lc2 == 'c' && lc3 == 'r') ||""], [569, ""              (c1 == '/' && lc2 == 's' && lc3 == 'c')) {""], [570, ""            replace(i, i + 1, \""\\\\u003c\""); // Escaped <""], [571, ""          }""], [572, ""          break;""], [573, ""        case '>':""], [574, ""          // Disallow -->, which lets the HTML parser switch out of the \""script""], [575, ""          // data escaped\"" or \""script data double escaped\"" state.""], [576, ""          if ((i - 2) >= start && '-' == jsonish.charAt(i - 2)""], [577, ""              && '-' == jsonish.charAt(i - 1)) {""], [578, ""            replace(i, i + 1, \""\\\\u003e\""); // Escaped >""]], ""deleted"": [[544, ""        // Embedding.  Disallow </script and ]]> in string literals so that""], [545, ""        // the output can be embedded in HTML script elements and in XML CDATA""], [546, ""        // sections.""], [547, ""        case '/':""], [548, ""          // Don't over escape.  Many JSON bodies contain innocuous HTML""], [549, ""          // that can be safely embedded.""], [550, ""          if (i > start && i + 2 < end && '<' == jsonish.charAt(i - 1)""], [551, ""              && 's' == (jsonish.charAt(i + 1) | 32)""], [552, ""              && 'c' == (jsonish.charAt(i + 2) | 32)) {""], [553, ""            insert(i, '\\\\');""]]}"	746
